ARM GAS  /tmp/cc3c9NYh.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.cpp"
  18              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
  19              		.align	1
  20              		.global	_Z18SystemClock_Configv
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Z18SystemClock_Configv:
  26              		.fnstart
  27              	.LFB431:
   1:Core/Src/main.cpp **** /* USER CODE BEGIN Header */
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   * @attention
   8:Core/Src/main.cpp ****   *
   9:Core/Src/main.cpp ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.cpp ****   * All rights reserved.
  11:Core/Src/main.cpp ****   *
  12:Core/Src/main.cpp ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.cpp ****   * in the root directory of this software component.
  14:Core/Src/main.cpp ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.cpp ****   *
  16:Core/Src/main.cpp ****   ******************************************************************************
  17:Core/Src/main.cpp ****   */
  18:Core/Src/main.cpp **** /* USER CODE END Header */
  19:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.cpp **** #include "main.h"
  21:Core/Src/main.cpp **** #include "adc.h"
  22:Core/Src/main.cpp **** #include "dma.h"
  23:Core/Src/main.cpp **** #include "i2c.h"
  24:Core/Src/main.cpp **** #include "spi.h"
  25:Core/Src/main.cpp **** #include "tim.h"
  26:Core/Src/main.cpp **** #include "usart.h"
  27:Core/Src/main.cpp **** #include "gpio.h"
  28:Core/Src/main.cpp **** #include "beat.h"
  29:Core/Src/main.cpp **** #include "logger.h"
  30:Core/Src/main.cpp **** #include "screen.h"
  31:Core/Src/main.cpp **** 
ARM GAS  /tmp/cc3c9NYh.s 			page 2


  32:Core/Src/main.cpp **** /* Private includes ----------------------------------------------------------*/
  33:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  34:Core/Src/main.cpp **** 
  35:Core/Src/main.cpp **** /* USER CODE END Includes */
  36:Core/Src/main.cpp **** 
  37:Core/Src/main.cpp **** /* Private typedef -----------------------------------------------------------*/
  38:Core/Src/main.cpp **** /* USER CODE BEGIN PTD */
  39:Core/Src/main.cpp **** 
  40:Core/Src/main.cpp **** /* USER CODE END PTD */
  41:Core/Src/main.cpp **** 
  42:Core/Src/main.cpp **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/main.cpp **** /* USER CODE BEGIN PD */
  44:Core/Src/main.cpp **** /* USER CODE END PD */
  45:Core/Src/main.cpp **** 
  46:Core/Src/main.cpp **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.cpp **** /* USER CODE BEGIN PM */
  48:Core/Src/main.cpp **** 
  49:Core/Src/main.cpp **** /* USER CODE END PM */
  50:Core/Src/main.cpp **** 
  51:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.cpp **** 
  53:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  54:Core/Src/main.cpp **** 
  55:Core/Src/main.cpp **** volatile uint16_t dmabuf[256] = {0};
  56:Core/Src/main.cpp **** Beat beat = Beat();
  57:Core/Src/main.cpp **** 
  58:Core/Src/main.cpp **** /* USER CODE END PV */
  59:Core/Src/main.cpp **** 
  60:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.cpp **** void SystemClock_Config();
  62:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.cpp **** 
  64:Core/Src/main.cpp **** /* USER CODE END PFP */
  65:Core/Src/main.cpp **** 
  66:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  67:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  68:Core/Src/main.cpp **** 
  69:Core/Src/main.cpp **** /* USER CODE END 0 */
  70:Core/Src/main.cpp **** 
  71:Core/Src/main.cpp **** /**
  72:Core/Src/main.cpp ****   * @brief  The application entry point.
  73:Core/Src/main.cpp ****   * @retval int
  74:Core/Src/main.cpp ****   */
  75:Core/Src/main.cpp **** int main()
  76:Core/Src/main.cpp **** {
  77:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
  78:Core/Src/main.cpp **** 
  79:Core/Src/main.cpp ****   /* USER CODE END 1 */
  80:Core/Src/main.cpp **** 
  81:Core/Src/main.cpp ****   /* MCU Configuration--------------------------------------------------------*/
  82:Core/Src/main.cpp **** 
  83:Core/Src/main.cpp ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  84:Core/Src/main.cpp ****   HAL_Init();
  85:Core/Src/main.cpp **** 
  86:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
  87:Core/Src/main.cpp **** 
  88:Core/Src/main.cpp ****   /* USER CODE END Init */
ARM GAS  /tmp/cc3c9NYh.s 			page 3


  89:Core/Src/main.cpp **** 
  90:Core/Src/main.cpp ****   /* Configure the system clock */
  91:Core/Src/main.cpp ****   SystemClock_Config();
  92:Core/Src/main.cpp **** 
  93:Core/Src/main.cpp ****   /* USER CODE BEGIN SysInit */
  94:Core/Src/main.cpp **** 
  95:Core/Src/main.cpp ****   /* USER CODE END SysInit */
  96:Core/Src/main.cpp **** 
  97:Core/Src/main.cpp ****   /* Initialize all configured peripherals */
  98:Core/Src/main.cpp ****   MX_GPIO_Init();
  99:Core/Src/main.cpp **** //  MX_ADC1_Init();
 100:Core/Src/main.cpp ****   MX_SPI1_Init();
 101:Core/Src/main.cpp ****   MX_USART1_UART_Init();
 102:Core/Src/main.cpp **** //  MX_DMA_Init();
 103:Core/Src/main.cpp ****   MX_I2C2_Init();
 104:Core/Src/main.cpp ****   MX_TIM3_Init();
 105:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 106:Core/Src/main.cpp **** //	HAL_TIM_Base_Start(&htim3);
 107:Core/Src/main.cpp **** //	HAL_ADC_Start_DMA(&hadc1, (uint32_t *) dmabuf, 256);
 108:Core/Src/main.cpp **** 	auto logger = Logger(&huart1);
 109:Core/Src/main.cpp **** 	logger.log(Logger::INFO, "Logger Initialized");
 110:Core/Src/main.cpp **** 	Screen screen = ScreenFactory().spi(&hspi1).cs(SCREEN_CS_GPIO_Port, SCREEN_CS_Pin)
 111:Core/Src/main.cpp **** 			.dc(SCREEN_DC_GPIO_Port, SCREEN_DC_Pin).res(SCREEN_RES_GPIO_Port, SCREEN_RES_Pin)
 112:Core/Src/main.cpp **** 			.bklt(SCREEN_BLK_GPIO_Port, SCREEN_BLK_Pin).build();
 113:Core/Src/main.cpp **** 	
 114:Core/Src/main.cpp **** 	char str[5] = {'0', '1', '2', '3', '4'};
 115:Core/Src/main.cpp **** 	screen.drawFont(0, 0, str, 5, 0xFFFF);
 116:Core/Src/main.cpp **** 	screen.switchBacklight(true);
 117:Core/Src/main.cpp ****   /* USER CODE END 2 */
 118:Core/Src/main.cpp **** 
 119:Core/Src/main.cpp ****   /* Infinite loop */
 120:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
 121:Core/Src/main.cpp ****   while (1)
 122:Core/Src/main.cpp ****   {
 123:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 124:Core/Src/main.cpp **** 
 125:Core/Src/main.cpp **** //	uint8_t rate = beat.getRate();
 126:Core/Src/main.cpp **** 	// send this to screen
 127:Core/Src/main.cpp **** 
 128:Core/Src/main.cpp ****     /* USER CODE BEGIN 3 */
 129:Core/Src/main.cpp ****   }
 130:Core/Src/main.cpp ****   /* USER CODE END 3 */
 131:Core/Src/main.cpp **** }
 132:Core/Src/main.cpp **** 
 133:Core/Src/main.cpp **** /**
 134:Core/Src/main.cpp ****   * @brief System Clock Configuration
 135:Core/Src/main.cpp ****   * @retval None
 136:Core/Src/main.cpp ****   */
 137:Core/Src/main.cpp **** void SystemClock_Config()
 138:Core/Src/main.cpp **** {
  28              		.loc 1 138 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 72
  31              		@ frame_needed = 0, uses_anonymous_args = 0
 139:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  32              		.loc 1 139 3 view .LVU1
 138:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/cc3c9NYh.s 			page 4


  33              		.loc 1 138 1 is_stmt 0 view .LVU2
  34 0000 10B5     		push	{r4, lr}
  35              		.save {r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40              		.pad #72
  41 0002 92B0     		sub	sp, sp, #72
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 80
  44              		.loc 1 139 22 view .LVU3
  45 0004 3422     		movs	r2, #52
  46 0006 0021     		movs	r1, #0
  47 0008 05A8     		add	r0, sp, #20
  48 000a FFF7FEFF 		bl	memset
  49              	.LVL0:
 140:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  50              		.loc 1 140 3 is_stmt 1 view .LVU4
  51              		.loc 1 140 22 is_stmt 0 view .LVU5
  52 000e 1022     		movs	r2, #16
  53 0010 0021     		movs	r1, #0
  54 0012 01A8     		add	r0, sp, #4
  55 0014 FFF7FEFF 		bl	memset
  56              	.LVL1:
 141:Core/Src/main.cpp **** 
 142:Core/Src/main.cpp ****   /** Configure the main internal regulator output voltage
 143:Core/Src/main.cpp ****   */
 144:Core/Src/main.cpp ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
  57              		.loc 1 144 3 is_stmt 1 view .LVU6
  58              		.loc 1 144 34 is_stmt 0 view .LVU7
  59 0018 8020     		movs	r0, #128
  60 001a 8000     		lsls	r0, r0, #2
  61 001c FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
  62              	.LVL2:
 145:Core/Src/main.cpp **** 
 146:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 147:Core/Src/main.cpp ****   * in the RCC_OscInitTypeDef structure.
 148:Core/Src/main.cpp ****   */
 149:Core/Src/main.cpp ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  63              		.loc 1 149 3 is_stmt 1 view .LVU8
 150:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  64              		.loc 1 150 30 is_stmt 0 view .LVU9
  65 0020 8023     		movs	r3, #128
  66 0022 5B00     		lsls	r3, r3, #1
  67 0024 0893     		str	r3, [sp, #32]
 151:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
  68              		.loc 1 151 28 view .LVU10
  69 0026 0023     		movs	r3, #0
  70 0028 0993     		str	r3, [sp, #36]
 152:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 153:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 154:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 155:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
  71              		.loc 1 155 30 view .LVU11
  72 002a 0E93     		str	r3, [sp, #56]
 156:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 8;
ARM GAS  /tmp/cc3c9NYh.s 			page 5


  73              		.loc 1 156 30 view .LVU12
  74 002c 0833     		adds	r3, r3, #8
  75 002e 0F93     		str	r3, [sp, #60]
 157:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  76              		.loc 1 157 30 view .LVU13
  77 0030 8023     		movs	r3, #128
  78 0032 9B02     		lsls	r3, r3, #10
  79 0034 1093     		str	r3, [sp, #64]
 158:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
  80              		.loc 1 158 30 view .LVU14
  81 0036 8023     		movs	r3, #128
 149:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  82              		.loc 1 149 36 view .LVU15
  83 0038 0224     		movs	r4, #2
 152:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  84              		.loc 1 152 41 view .LVU16
  85 003a 4022     		movs	r2, #64
  86              		.loc 1 158 30 view .LVU17
  87 003c 9B05     		lsls	r3, r3, #22
 159:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  88              		.loc 1 159 24 view .LVU18
  89 003e 05A8     		add	r0, sp, #20
 149:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  90              		.loc 1 149 36 view .LVU19
  91 0040 0594     		str	r4, [sp, #20]
 150:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
  92              		.loc 1 150 3 is_stmt 1 view .LVU20
 151:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  93              		.loc 1 151 3 view .LVU21
 152:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  94              		.loc 1 152 3 view .LVU22
 152:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  95              		.loc 1 152 41 is_stmt 0 view .LVU23
  96 0042 0A92     		str	r2, [sp, #40]
 153:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  97              		.loc 1 153 3 is_stmt 1 view .LVU24
 153:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  98              		.loc 1 153 34 is_stmt 0 view .LVU25
  99 0044 0C94     		str	r4, [sp, #48]
 154:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 100              		.loc 1 154 3 is_stmt 1 view .LVU26
 154:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 101              		.loc 1 154 35 is_stmt 0 view .LVU27
 102 0046 0D94     		str	r4, [sp, #52]
 155:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 8;
 103              		.loc 1 155 3 is_stmt 1 view .LVU28
 156:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 104              		.loc 1 156 3 view .LVU29
 157:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 105              		.loc 1 157 3 view .LVU30
 158:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 106              		.loc 1 158 3 view .LVU31
 158:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 107              		.loc 1 158 30 is_stmt 0 view .LVU32
 108 0048 1193     		str	r3, [sp, #68]
 109              		.loc 1 159 3 is_stmt 1 view .LVU33
 110              		.loc 1 159 24 is_stmt 0 view .LVU34
ARM GAS  /tmp/cc3c9NYh.s 			page 6


 111 004a FFF7FEFF 		bl	HAL_RCC_OscConfig
 112              	.LVL3:
 113              		.loc 1 159 3 discriminator 1 view .LVU35
 114 004e 0028     		cmp	r0, #0
 115 0050 01D0     		beq	.L2
 160:Core/Src/main.cpp ****   {
 161:Core/Src/main.cpp ****     Error_Handler();
 116              		.loc 1 161 5 is_stmt 1 view .LVU36
 117              	.LBB12:
 118              	.LBI12:
 162:Core/Src/main.cpp ****   }
 163:Core/Src/main.cpp **** 
 164:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB buses clocks
 165:Core/Src/main.cpp ****   */
 166:Core/Src/main.cpp ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 167:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1;
 168:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 169:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 170:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 171:Core/Src/main.cpp **** 
 172:Core/Src/main.cpp ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 173:Core/Src/main.cpp ****   {
 174:Core/Src/main.cpp ****     Error_Handler();
 175:Core/Src/main.cpp ****   }
 176:Core/Src/main.cpp **** }
 177:Core/Src/main.cpp **** 
 178:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 179:Core/Src/main.cpp **** 
 180:Core/Src/main.cpp **** /* USER CODE END 4 */
 181:Core/Src/main.cpp **** 
 182:Core/Src/main.cpp **** /**
 183:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 184:Core/Src/main.cpp ****   * @retval None
 185:Core/Src/main.cpp ****   */
 186:Core/Src/main.cpp **** void Error_Handler(void)
 119              		.loc 1 186 6 view .LVU37
 187:Core/Src/main.cpp **** {
 188:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 189:Core/Src/main.cpp ****   /* User can add his own implementation to report the HAL error return state */
 190:Core/Src/main.cpp ****   __disable_irq();
 120              		.loc 1 190 3 view .LVU38
 121              	.LBB13:
 122              	.LBI13:
 123              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
ARM GAS  /tmp/cc3c9NYh.s 			page 7


  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
ARM GAS  /tmp/cc3c9NYh.s 			page 8


  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
ARM GAS  /tmp/cc3c9NYh.s 			page 9


 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc3c9NYh.s 			page 10


 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 124              		.loc 2 207 27 view .LVU39
 125              	.LBB14:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 126              		.loc 2 209 3 view .LVU40
 127              		.syntax divided
 128              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 129 0052 72B6     		cpsid i
 130              	@ 0 "" 2
 131              		.thumb
 132              		.syntax unified
 133              	.L3:
 134              	.LBE14:
 135              	.LBE13:
 191:Core/Src/main.cpp ****   while (1)
 136              		.loc 1 191 3 view .LVU41
 137              		.loc 1 191 3 view .LVU42
 138 0054 FEE7     		b	.L3
 139              	.L2:
 140              	.LBE12:
 166:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1;
 141              		.loc 1 166 3 view .LVU43
 166:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1;
 142              		.loc 1 166 31 is_stmt 0 view .LVU44
 143 0056 0723     		movs	r3, #7
 169:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 144              		.loc 1 169 35 view .LVU45
 145 0058 0390     		str	r0, [sp, #12]
 170:Core/Src/main.cpp **** 
 146              		.loc 1 170 36 view .LVU46
 147 005a 0490     		str	r0, [sp, #16]
 172:Core/Src/main.cpp ****   {
 148              		.loc 1 172 26 view .LVU47
 149 005c 2100     		movs	r1, r4
ARM GAS  /tmp/cc3c9NYh.s 			page 11


 150 005e 01A8     		add	r0, sp, #4
 166:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1;
 151              		.loc 1 166 31 view .LVU48
 152 0060 0193     		str	r3, [sp, #4]
 168:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 153              		.loc 1 168 3 is_stmt 1 view .LVU49
 168:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 154              		.loc 1 168 34 is_stmt 0 view .LVU50
 155 0062 0294     		str	r4, [sp, #8]
 169:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 156              		.loc 1 169 3 is_stmt 1 view .LVU51
 170:Core/Src/main.cpp **** 
 157              		.loc 1 170 3 view .LVU52
 172:Core/Src/main.cpp ****   {
 158              		.loc 1 172 3 view .LVU53
 172:Core/Src/main.cpp ****   {
 159              		.loc 1 172 26 is_stmt 0 view .LVU54
 160 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 161              	.LVL4:
 172:Core/Src/main.cpp ****   {
 162              		.loc 1 172 3 discriminator 1 view .LVU55
 163 0068 0028     		cmp	r0, #0
 164 006a 01D0     		beq	.L1
 174:Core/Src/main.cpp ****   }
 165              		.loc 1 174 5 is_stmt 1 view .LVU56
 166              	.LBB15:
 167              	.LBI15:
 186:Core/Src/main.cpp **** {
 168              		.loc 1 186 6 view .LVU57
 190:Core/Src/main.cpp ****   while (1)
 169              		.loc 1 190 3 view .LVU58
 170              	.LBB16:
 171              	.LBI16:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 172              		.loc 2 207 27 view .LVU59
 173              	.LBB17:
 174              		.loc 2 209 3 view .LVU60
 175              		.syntax divided
 176              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 177 006c 72B6     		cpsid i
 178              	@ 0 "" 2
 179              		.thumb
 180              		.syntax unified
 181              	.L5:
 182              	.LBE17:
 183              	.LBE16:
 184              		.loc 1 191 3 view .LVU61
 185              		.loc 1 191 3 view .LVU62
 186 006e FEE7     		b	.L5
 187              	.L1:
 188              	.LBE15:
 176:Core/Src/main.cpp **** 
 189              		.loc 1 176 1 is_stmt 0 view .LVU63
 190 0070 12B0     		add	sp, sp, #72
 191              		@ sp needed
 192 0072 10BD     		pop	{r4, pc}
 193              		.cfi_endproc
ARM GAS  /tmp/cc3c9NYh.s 			page 12


 194              	.LFE431:
 195              		.fnend
 197              		.section	.rodata.main.str1.1,"aMS",%progbits,1
 198              	.LC1:
 199 0000 4C6F6767 		.ascii	"Logger Initialized\000"
 199      65722049 
 199      6E697469 
 199      616C697A 
 199      656400
 200              	.LC4:
 201 0013 30313233 		.ascii	"01234\000"
 201      3400
 202              		.section	.text.startup.main,"ax",%progbits
 203              		.align	1
 204              		.global	main
 205              		.syntax unified
 206              		.code	16
 207              		.thumb_func
 209              	main:
 210              		.fnstart
 211              	.LFB430:
  76:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 212              		.loc 1 76 1 is_stmt 1 view -0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 256
 215              		@ frame_needed = 0, uses_anonymous_args = 0
  84:Core/Src/main.cpp **** 
 216              		.loc 1 84 3 view .LVU65
  76:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 217              		.loc 1 76 1 is_stmt 0 view .LVU66
 218 0000 10B5     		push	{r4, lr}
 219              		.save {r4, lr}
 220              	.LCFI2:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 4, -8
 223              		.cfi_offset 14, -4
 224              		.pad #264
 225 0002 C2B0     		sub	sp, sp, #264
 226              	.LCFI3:
 227              		.cfi_def_cfa_offset 272
  84:Core/Src/main.cpp **** 
 228              		.loc 1 84 11 view .LVU67
 229 0004 FFF7FEFF 		bl	HAL_Init
 230              	.LVL5:
  91:Core/Src/main.cpp **** 
 231              		.loc 1 91 3 is_stmt 1 view .LVU68
  91:Core/Src/main.cpp **** 
 232              		.loc 1 91 21 is_stmt 0 view .LVU69
 233 0008 FFF7FEFF 		bl	_Z18SystemClock_Configv
 234              	.LVL6:
  98:Core/Src/main.cpp **** //  MX_ADC1_Init();
 235              		.loc 1 98 3 is_stmt 1 view .LVU70
  98:Core/Src/main.cpp **** //  MX_ADC1_Init();
 236              		.loc 1 98 15 is_stmt 0 view .LVU71
 237 000c FFF7FEFF 		bl	MX_GPIO_Init
 238              	.LVL7:
 100:Core/Src/main.cpp ****   MX_USART1_UART_Init();
ARM GAS  /tmp/cc3c9NYh.s 			page 13


 239              		.loc 1 100 3 is_stmt 1 view .LVU72
 100:Core/Src/main.cpp ****   MX_USART1_UART_Init();
 240              		.loc 1 100 15 is_stmt 0 view .LVU73
 241 0010 FFF7FEFF 		bl	MX_SPI1_Init
 242              	.LVL8:
 101:Core/Src/main.cpp **** //  MX_DMA_Init();
 243              		.loc 1 101 3 is_stmt 1 view .LVU74
 101:Core/Src/main.cpp **** //  MX_DMA_Init();
 244              		.loc 1 101 22 is_stmt 0 view .LVU75
 245 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 246              	.LVL9:
 103:Core/Src/main.cpp ****   MX_TIM3_Init();
 247              		.loc 1 103 3 is_stmt 1 view .LVU76
 103:Core/Src/main.cpp ****   MX_TIM3_Init();
 248              		.loc 1 103 15 is_stmt 0 view .LVU77
 249 0018 FFF7FEFF 		bl	MX_I2C2_Init
 250              	.LVL10:
 104:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 251              		.loc 1 104 3 is_stmt 1 view .LVU78
 104:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 252              		.loc 1 104 15 is_stmt 0 view .LVU79
 253 001c FFF7FEFF 		bl	MX_TIM3_Init
 254              	.LVL11:
 108:Core/Src/main.cpp **** 	logger.log(Logger::INFO, "Logger Initialized");
 255              		.loc 1 108 2 is_stmt 1 view .LVU80
 108:Core/Src/main.cpp **** 	logger.log(Logger::INFO, "Logger Initialized");
 256              		.loc 1 108 30 is_stmt 0 view .LVU81
 257 0020 2349     		ldr	r1, .L8
 258 0022 02A8     		add	r0, sp, #8
 259 0024 FFF7FEFF 		bl	_ZN6LoggerC1EP20__UART_HandleTypeDef
 260              	.LVL12:
 109:Core/Src/main.cpp **** 	Screen screen = ScreenFactory().spi(&hspi1).cs(SCREEN_CS_GPIO_Port, SCREEN_CS_Pin)
 261              		.loc 1 109 2 is_stmt 1 view .LVU82
 109:Core/Src/main.cpp **** 	Screen screen = ScreenFactory().spi(&hspi1).cs(SCREEN_CS_GPIO_Port, SCREEN_CS_Pin)
 262              		.loc 1 109 12 is_stmt 0 view .LVU83
 263 0028 0121     		movs	r1, #1
 264 002a 224A     		ldr	r2, .L8+4
 265 002c 02A8     		add	r0, sp, #8
 266 002e FFF7FEFF 		bl	_ZN6Logger3logENS_8LogLevelEPKc
 267              	.LVL13:
 110:Core/Src/main.cpp **** 			.dc(SCREEN_DC_GPIO_Port, SCREEN_DC_Pin).res(SCREEN_RES_GPIO_Port, SCREEN_RES_Pin)
 268              		.loc 1 110 2 is_stmt 1 view .LVU84
 110:Core/Src/main.cpp **** 			.dc(SCREEN_DC_GPIO_Port, SCREEN_DC_Pin).res(SCREEN_RES_GPIO_Port, SCREEN_RES_Pin)
 269              		.loc 1 110 18 is_stmt 0 view .LVU85
 270 0032 2422     		movs	r2, #36
 271 0034 0021     		movs	r1, #0
 272 0036 0CA8     		add	r0, sp, #48
 273 0038 FFF7FEFF 		bl	memset
 274              	.LVL14:
 110:Core/Src/main.cpp **** 			.dc(SCREEN_DC_GPIO_Port, SCREEN_DC_Pin).res(SCREEN_RES_GPIO_Port, SCREEN_RES_Pin)
 275              		.loc 1 110 37 view .LVU86
 276 003c 1E4A     		ldr	r2, .L8+8
 277 003e 0CA9     		add	r1, sp, #48
 278 0040 15A8     		add	r0, sp, #84
 279 0042 FFF7FEFF 		bl	_ZN13ScreenFactory3spiEP19__SPI_HandleTypeDef
 280              	.LVL15:
 110:Core/Src/main.cpp **** 			.dc(SCREEN_DC_GPIO_Port, SCREEN_DC_Pin).res(SCREEN_RES_GPIO_Port, SCREEN_RES_Pin)
ARM GAS  /tmp/cc3c9NYh.s 			page 14


 281              		.loc 1 110 48 discriminator 2 view .LVU87
 282 0046 A022     		movs	r2, #160
 283 0048 8023     		movs	r3, #128
 284 004a D205     		lsls	r2, r2, #23
 285 004c 15A9     		add	r1, sp, #84
 286 004e 1EA8     		add	r0, sp, #120
 287 0050 FFF7FEFF 		bl	_ZN13ScreenFactory2csEP12GPIO_TypeDeft
 288              	.LVL16:
 111:Core/Src/main.cpp **** 			.bklt(SCREEN_BLK_GPIO_Port, SCREEN_BLK_Pin).build();
 289              		.loc 1 111 7 view .LVU88
 290 0054 A022     		movs	r2, #160
 291 0056 0823     		movs	r3, #8
 292 0058 D205     		lsls	r2, r2, #23
 293 005a 1EA9     		add	r1, sp, #120
 294 005c 27A8     		add	r0, sp, #156
 295 005e FFF7FEFF 		bl	_ZN13ScreenFactory2dcEP12GPIO_TypeDeft
 296              	.LVL17:
 111:Core/Src/main.cpp **** 			.bklt(SCREEN_BLK_GPIO_Port, SCREEN_BLK_Pin).build();
 297              		.loc 1 111 47 discriminator 1 view .LVU89
 298 0062 A022     		movs	r2, #160
 299 0064 1023     		movs	r3, #16
 300 0066 D205     		lsls	r2, r2, #23
 301 0068 27A9     		add	r1, sp, #156
 302 006a 30A8     		add	r0, sp, #192
 303 006c FFF7FEFF 		bl	_ZN13ScreenFactory3resEP12GPIO_TypeDeft
 304              	.LVL18:
 112:Core/Src/main.cpp **** 	
 305              		.loc 1 112 9 view .LVU90
 306 0070 A022     		movs	r2, #160
 114:Core/Src/main.cpp **** 	screen.drawFont(0, 0, str, 5, 0xFFFF);
 307              		.loc 1 114 7 view .LVU91
 308 0072 0524     		movs	r4, #5
 112:Core/Src/main.cpp **** 	
 309              		.loc 1 112 9 view .LVU92
 310 0074 4023     		movs	r3, #64
 311 0076 D205     		lsls	r2, r2, #23
 312 0078 30A9     		add	r1, sp, #192
 313 007a 39A8     		add	r0, sp, #228
 314 007c FFF7FEFF 		bl	_ZN13ScreenFactory4bkltEP12GPIO_TypeDeft
 315              	.LVL19:
 112:Core/Src/main.cpp **** 	
 316              		.loc 1 112 53 discriminator 1 view .LVU93
 317 0080 39A9     		add	r1, sp, #228
 318 0082 03A8     		add	r0, sp, #12
 319 0084 FFF7FEFF 		bl	_ZN13ScreenFactory5buildEv
 320              	.LVL20:
 114:Core/Src/main.cpp **** 	screen.drawFont(0, 0, str, 5, 0xFFFF);
 321              		.loc 1 114 2 is_stmt 1 view .LVU94
 114:Core/Src/main.cpp **** 	screen.drawFont(0, 0, str, 5, 0xFFFF);
 322              		.loc 1 114 7 is_stmt 0 view .LVU95
 323 0088 2200     		movs	r2, r4
 324 008a 0C49     		ldr	r1, .L8+12
 325 008c 39A8     		add	r0, sp, #228
 326 008e FFF7FEFF 		bl	memcpy
 327              	.LVL21:
 115:Core/Src/main.cpp **** 	screen.switchBacklight(true);
 328              		.loc 1 115 2 is_stmt 1 view .LVU96
ARM GAS  /tmp/cc3c9NYh.s 			page 15


 115:Core/Src/main.cpp **** 	screen.switchBacklight(true);
 329              		.loc 1 115 17 is_stmt 0 view .LVU97
 330 0092 0022     		movs	r2, #0
 331 0094 0A4B     		ldr	r3, .L8+16
 332 0096 1100     		movs	r1, r2
 333 0098 0193     		str	r3, [sp, #4]
 334 009a 03A8     		add	r0, sp, #12
 335 009c 0094     		str	r4, [sp]
 336 009e 39AB     		add	r3, sp, #228
 337 00a0 FFF7FEFF 		bl	_ZN6Screen8drawFontEttPcht
 338              	.LVL22:
 116:Core/Src/main.cpp ****   /* USER CODE END 2 */
 339              		.loc 1 116 2 is_stmt 1 view .LVU98
 116:Core/Src/main.cpp ****   /* USER CODE END 2 */
 340              		.loc 1 116 24 is_stmt 0 view .LVU99
 341 00a4 0121     		movs	r1, #1
 342 00a6 03A8     		add	r0, sp, #12
 343 00a8 FFF7FEFF 		bl	_ZN6Screen15switchBacklightEb
 344              	.LVL23:
 345              	.L7:
 121:Core/Src/main.cpp ****   {
 346              		.loc 1 121 3 is_stmt 1 view .LVU100
 121:Core/Src/main.cpp ****   {
 347              		.loc 1 121 3 view .LVU101
 348 00ac FEE7     		b	.L7
 349              	.L9:
 350 00ae C046     		.align	2
 351              	.L8:
 352 00b0 00000000 		.word	huart1
 353 00b4 00000000 		.word	.LC1
 354 00b8 00000000 		.word	hspi1
 355 00bc 13000000 		.word	.LC4
 356 00c0 FFFF0000 		.word	65535
 357              		.cfi_endproc
 358              	.LFE430:
 359              		.fnend
 361              		.section	.text.Error_Handler,"ax",%progbits
 362              		.align	1
 363              		.global	Error_Handler
 364              		.syntax unified
 365              		.code	16
 366              		.thumb_func
 368              	Error_Handler:
 369              		.fnstart
 370              	.LFB432:
 187:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 371              		.loc 1 187 1 view -0
 372              		.cfi_startproc
 373              		@ Volatile: function does not return.
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 190:Core/Src/main.cpp ****   while (1)
 377              		.loc 1 190 3 view .LVU103
 378              	.LBB18:
 379              	.LBI18:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc3c9NYh.s 			page 16


 380              		.loc 2 207 27 view .LVU104
 381              	.LBB19:
 382              		.loc 2 209 3 view .LVU105
 383              		.syntax divided
 384              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 385 0000 72B6     		cpsid i
 386              	@ 0 "" 2
 387              		.thumb
 388              		.syntax unified
 389              	.L11:
 390              	.LBE19:
 391              	.LBE18:
 392              		.loc 1 191 3 view .LVU106
 393              		.loc 1 191 3 view .LVU107
 394 0002 FEE7     		b	.L11
 395              		.cfi_endproc
 396              	.LFE432:
 397              		.cantunwind
 398              		.fnend
 400              		.global	beat
 401              		.section	.data.beat,"aw"
 402              		.align	1
 405              	beat:
 406 0000 0000     		.short	0
 407 0002 0000     		.short	0
 408 0004 0000     		.short	0
 409 0006 0000     		.short	0
 410 0008 0000     		.short	0
 411 000a 01       		.byte	1
 412 000b 00       		.byte	0
 413 000c 00       		.byte	0
 414 000d 00       		.space	1
 415              		.global	dmabuf
 416              		.section	.bss.dmabuf,"aw",%nobits
 417              		.align	1
 420              	dmabuf:
 421 0000 00000000 		.space	512
 421      00000000 
 421      00000000 
 421      00000000 
 421      00000000 
 422              		.text
 423              	.Letext0:
 424              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 425              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 426              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g030xx.h"
 427              		.file 6 "/usr/lib/gcc/arm-none-eabi/13.1.0/include/stddef.h"
 428              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 429              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 430              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 431              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h"
 432              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 433              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 434              		.file 13 "Core/Inc/spi.h"
 435              		.file 14 "Core/Inc/usart.h"
 436              		.file 15 "Core/Inc/beat.h"
 437              		.file 16 "/usr/arm-none-eabi/include/c++/13.1.0/cstring"
ARM GAS  /tmp/cc3c9NYh.s 			page 17


 438              		.file 17 "/usr/arm-none-eabi/include/c++/13.1.0/arm-none-eabi/thumb/v6-m/nofp/bits/c++config.h"
 439              		.file 18 "/usr/arm-none-eabi/include/string.h"
 440              		.file 19 "Core/Inc/logger.h"
 441              		.file 20 "Core/Inc/screen.h"
 442              		.file 21 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_pwr_ex.h"
 443              		.file 22 "Core/Inc/tim.h"
 444              		.file 23 "Core/Inc/i2c.h"
 445              		.file 24 "Core/Inc/gpio.h"
 446              		.file 25 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
ARM GAS  /tmp/cc3c9NYh.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/cc3c9NYh.s:19     .text._Z18SystemClock_Configv:00000000 $t
     /tmp/cc3c9NYh.s:25     .text._Z18SystemClock_Configv:00000000 _Z18SystemClock_Configv
.ARM.exidx.text._Z18SystemClock_Configv:00000000 $d
     /tmp/cc3c9NYh.s:203    .text.startup.main:00000000 $t
     /tmp/cc3c9NYh.s:209    .text.startup.main:00000000 main
     /tmp/cc3c9NYh.s:352    .text.startup.main:000000b0 $d
     .ARM.exidx.text.startup.main:00000000 $d
     /tmp/cc3c9NYh.s:362    .text.Error_Handler:00000000 $t
     /tmp/cc3c9NYh.s:368    .text.Error_Handler:00000000 Error_Handler
    .ARM.exidx.text.Error_Handler:00000000 $d
     /tmp/cc3c9NYh.s:405    .data.beat:00000000 beat
     /tmp/cc3c9NYh.s:402    .data.beat:00000000 $d
     /tmp/cc3c9NYh.s:420    .bss.dmabuf:00000000 dmabuf
     /tmp/cc3c9NYh.s:417    .bss.dmabuf:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_unwind_cpp_pr0
HAL_Init
MX_GPIO_Init
MX_SPI1_Init
MX_USART1_UART_Init
MX_I2C2_Init
MX_TIM3_Init
_ZN6LoggerC1EP20__UART_HandleTypeDef
_ZN6Logger3logENS_8LogLevelEPKc
_ZN13ScreenFactory3spiEP19__SPI_HandleTypeDef
_ZN13ScreenFactory2csEP12GPIO_TypeDeft
_ZN13ScreenFactory2dcEP12GPIO_TypeDeft
_ZN13ScreenFactory3resEP12GPIO_TypeDeft
_ZN13ScreenFactory4bkltEP12GPIO_TypeDeft
_ZN13ScreenFactory5buildEv
memcpy
_ZN6Screen8drawFontEttPcht
_ZN6Screen15switchBacklightEb
huart1
hspi1
