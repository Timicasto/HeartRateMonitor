ARM GAS  /tmp/cceO63ng.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.cpp"
  18              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
  19              		.align	1
  20              		.global	_Z18SystemClock_Configv
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Z18SystemClock_Configv:
  26              		.fnstart
  27              	.LFB431:
   1:Core/Src/main.cpp **** /* USER CODE BEGIN Header */
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   * @attention
   8:Core/Src/main.cpp ****   *
   9:Core/Src/main.cpp ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.cpp ****   * All rights reserved.
  11:Core/Src/main.cpp ****   *
  12:Core/Src/main.cpp ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.cpp ****   * in the root directory of this software component.
  14:Core/Src/main.cpp ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.cpp ****   *
  16:Core/Src/main.cpp ****   ******************************************************************************
  17:Core/Src/main.cpp ****   */
  18:Core/Src/main.cpp **** /* USER CODE END Header */
  19:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.cpp **** #include "main.h"
  21:Core/Src/main.cpp **** #include "adc.h"
  22:Core/Src/main.cpp **** #include "dma.h"
  23:Core/Src/main.cpp **** #include "i2c.h"
  24:Core/Src/main.cpp **** #include "spi.h"
  25:Core/Src/main.cpp **** #include "tim.h"
  26:Core/Src/main.cpp **** #include "usart.h"
  27:Core/Src/main.cpp **** #include "gpio.h"
  28:Core/Src/main.cpp **** #include "beat.h"
  29:Core/Src/main.cpp **** #include "logger.h"
  30:Core/Src/main.cpp **** #include "screen.h"
  31:Core/Src/main.cpp **** #include "color.h"
ARM GAS  /tmp/cceO63ng.s 			page 2


  32:Core/Src/main.cpp **** 
  33:Core/Src/main.cpp **** /* Private includes ----------------------------------------------------------*/
  34:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  35:Core/Src/main.cpp **** 
  36:Core/Src/main.cpp **** /* USER CODE END Includes */
  37:Core/Src/main.cpp **** 
  38:Core/Src/main.cpp **** /* Private typedef -----------------------------------------------------------*/
  39:Core/Src/main.cpp **** /* USER CODE BEGIN PTD */
  40:Core/Src/main.cpp **** 
  41:Core/Src/main.cpp **** /* USER CODE END PTD */
  42:Core/Src/main.cpp **** 
  43:Core/Src/main.cpp **** /* Private define ------------------------------------------------------------*/
  44:Core/Src/main.cpp **** /* USER CODE BEGIN PD */
  45:Core/Src/main.cpp **** /* USER CODE END PD */
  46:Core/Src/main.cpp **** 
  47:Core/Src/main.cpp **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/main.cpp **** /* USER CODE BEGIN PM */
  49:Core/Src/main.cpp **** 
  50:Core/Src/main.cpp **** /* USER CODE END PM */
  51:Core/Src/main.cpp **** 
  52:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.cpp **** 
  54:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  55:Core/Src/main.cpp **** 
  56:Core/Src/main.cpp **** volatile uint16_t dmabuf[256] = {0};
  57:Core/Src/main.cpp **** Beat beat = Beat();
  58:Core/Src/main.cpp **** 
  59:Core/Src/main.cpp **** /* USER CODE END PV */
  60:Core/Src/main.cpp **** 
  61:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  62:Core/Src/main.cpp **** void SystemClock_Config();
  63:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.cpp **** 
  65:Core/Src/main.cpp **** /* USER CODE END PFP */
  66:Core/Src/main.cpp **** 
  67:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.cpp **** 
  70:Core/Src/main.cpp **** /* USER CODE END 0 */
  71:Core/Src/main.cpp **** 
  72:Core/Src/main.cpp **** /**
  73:Core/Src/main.cpp ****   * @brief  The application entry point.
  74:Core/Src/main.cpp ****   * @retval int
  75:Core/Src/main.cpp ****   */
  76:Core/Src/main.cpp **** int main()
  77:Core/Src/main.cpp **** {
  78:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.cpp **** 
  80:Core/Src/main.cpp ****   /* USER CODE END 1 */
  81:Core/Src/main.cpp **** 
  82:Core/Src/main.cpp ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.cpp **** 
  84:Core/Src/main.cpp ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Core/Src/main.cpp ****   HAL_Init();
  86:Core/Src/main.cpp **** 
  87:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.cpp **** 
ARM GAS  /tmp/cceO63ng.s 			page 3


  89:Core/Src/main.cpp ****   /* USER CODE END Init */
  90:Core/Src/main.cpp **** 
  91:Core/Src/main.cpp ****   /* Configure the system clock */
  92:Core/Src/main.cpp ****   SystemClock_Config();
  93:Core/Src/main.cpp **** 
  94:Core/Src/main.cpp ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.cpp **** 
  96:Core/Src/main.cpp ****   /* USER CODE END SysInit */
  97:Core/Src/main.cpp **** 
  98:Core/Src/main.cpp ****   /* Initialize all configured peripherals */
  99:Core/Src/main.cpp ****   MX_GPIO_Init();
 100:Core/Src/main.cpp **** //  MX_ADC1_Init();
 101:Core/Src/main.cpp ****   MX_SPI1_Init();
 102:Core/Src/main.cpp ****   MX_USART1_UART_Init();
 103:Core/Src/main.cpp **** //  MX_DMA_Init();
 104:Core/Src/main.cpp ****   MX_I2C2_Init();
 105:Core/Src/main.cpp ****   MX_TIM3_Init();
 106:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 107:Core/Src/main.cpp **** //	HAL_TIM_Base_Start(&htim3);
 108:Core/Src/main.cpp **** //	HAL_ADC_Start_DMA(&hadc1, (uint32_t *) dmabuf, 256);
 109:Core/Src/main.cpp **** 	auto logger = Logger(&huart1);
 110:Core/Src/main.cpp **** 	logger.log(Logger::INFO, "Logger Initialized");
 111:Core/Src/main.cpp **** 	Screen screen = ScreenFactory().spi(&hspi1).cs(SCREEN_CS_GPIO_Port, SCREEN_CS_Pin)
 112:Core/Src/main.cpp **** 			.dc(SCREEN_DC_GPIO_Port, SCREEN_DC_Pin).res(SCREEN_RES_GPIO_Port, SCREEN_RES_Pin)
 113:Core/Src/main.cpp **** 			.bklt(SCREEN_BLK_GPIO_Port, SCREEN_BLK_Pin).build();
 114:Core/Src/main.cpp **** 	
 115:Core/Src/main.cpp **** 	char str[5] = {'0', '1', '2', '3', '4'};
 116:Core/Src/main.cpp **** //	screen.drawFont(0, 0, str, 5, YELLOW);
 117:Core/Src/main.cpp **** 	screen.fillArea(0,0,31,31,YELLOW);
 118:Core/Src/main.cpp **** 	screen.fillArea(32,0,63,31,WHITE);
 119:Core/Src/main.cpp **** 	screen.fillArea(64,0,95,31,RED);
 120:Core/Src/main.cpp **** 	screen.fillArea(96,0,127,31,GREEN);
 121:Core/Src/main.cpp **** 	screen.fillArea(0,32,31,63,BLUE);
 122:Core/Src/main.cpp **** 	screen.fillArea(32,32,63,63,BLACK);
 123:Core/Src/main.cpp ****   /* USER CODE END 2 */
 124:Core/Src/main.cpp **** 
 125:Core/Src/main.cpp ****   /* Infinite loop */
 126:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
 127:Core/Src/main.cpp ****   while (1)
 128:Core/Src/main.cpp ****   {
 129:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 130:Core/Src/main.cpp **** 
 131:Core/Src/main.cpp **** //	uint8_t rate = beat.getRate();
 132:Core/Src/main.cpp **** 	// send this to screen
 133:Core/Src/main.cpp **** 	
 134:Core/Src/main.cpp ****     /* USER CODE BEGIN 3 */
 135:Core/Src/main.cpp ****   }
 136:Core/Src/main.cpp ****   /* USER CODE END 3 */
 137:Core/Src/main.cpp **** }
 138:Core/Src/main.cpp **** 
 139:Core/Src/main.cpp **** /**
 140:Core/Src/main.cpp ****   * @brief System Clock Configuration
 141:Core/Src/main.cpp ****   * @retval None
 142:Core/Src/main.cpp ****   */
 143:Core/Src/main.cpp **** void SystemClock_Config()
 144:Core/Src/main.cpp **** {
  28              		.loc 1 144 1 view -0
ARM GAS  /tmp/cceO63ng.s 			page 4


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 72
  31              		@ frame_needed = 0, uses_anonymous_args = 0
 145:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  32              		.loc 1 145 3 view .LVU1
 144:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  33              		.loc 1 144 1 is_stmt 0 view .LVU2
  34 0000 10B5     		push	{r4, lr}
  35              		.save {r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40              		.pad #72
  41 0002 92B0     		sub	sp, sp, #72
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 80
  44              		.loc 1 145 22 view .LVU3
  45 0004 3422     		movs	r2, #52
  46 0006 0021     		movs	r1, #0
  47 0008 05A8     		add	r0, sp, #20
  48 000a FFF7FEFF 		bl	memset
  49              	.LVL0:
 146:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  50              		.loc 1 146 3 is_stmt 1 view .LVU4
  51              		.loc 1 146 22 is_stmt 0 view .LVU5
  52 000e 1022     		movs	r2, #16
  53 0010 0021     		movs	r1, #0
  54 0012 01A8     		add	r0, sp, #4
  55 0014 FFF7FEFF 		bl	memset
  56              	.LVL1:
 147:Core/Src/main.cpp **** 
 148:Core/Src/main.cpp ****   /** Configure the main internal regulator output voltage
 149:Core/Src/main.cpp ****   */
 150:Core/Src/main.cpp ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
  57              		.loc 1 150 3 is_stmt 1 view .LVU6
  58              		.loc 1 150 34 is_stmt 0 view .LVU7
  59 0018 8020     		movs	r0, #128
  60 001a 8000     		lsls	r0, r0, #2
  61 001c FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
  62              	.LVL2:
 151:Core/Src/main.cpp **** 
 152:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 153:Core/Src/main.cpp ****   * in the RCC_OscInitTypeDef structure.
 154:Core/Src/main.cpp ****   */
 155:Core/Src/main.cpp ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  63              		.loc 1 155 3 is_stmt 1 view .LVU8
 156:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  64              		.loc 1 156 30 is_stmt 0 view .LVU9
  65 0020 8023     		movs	r3, #128
  66 0022 5B00     		lsls	r3, r3, #1
  67 0024 0893     		str	r3, [sp, #32]
 157:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
  68              		.loc 1 157 28 view .LVU10
  69 0026 0023     		movs	r3, #0
  70 0028 0993     		str	r3, [sp, #36]
 158:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  /tmp/cceO63ng.s 			page 5


 159:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 160:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 161:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
  71              		.loc 1 161 30 view .LVU11
  72 002a 0E93     		str	r3, [sp, #56]
 162:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 8;
  73              		.loc 1 162 30 view .LVU12
  74 002c 0833     		adds	r3, r3, #8
  75 002e 0F93     		str	r3, [sp, #60]
 163:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  76              		.loc 1 163 30 view .LVU13
  77 0030 8023     		movs	r3, #128
  78 0032 9B02     		lsls	r3, r3, #10
  79 0034 1093     		str	r3, [sp, #64]
 164:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
  80              		.loc 1 164 30 view .LVU14
  81 0036 8023     		movs	r3, #128
 155:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  82              		.loc 1 155 36 view .LVU15
  83 0038 0224     		movs	r4, #2
 158:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  84              		.loc 1 158 41 view .LVU16
  85 003a 4022     		movs	r2, #64
  86              		.loc 1 164 30 view .LVU17
  87 003c 9B05     		lsls	r3, r3, #22
 165:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  88              		.loc 1 165 24 view .LVU18
  89 003e 05A8     		add	r0, sp, #20
 155:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  90              		.loc 1 155 36 view .LVU19
  91 0040 0594     		str	r4, [sp, #20]
 156:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
  92              		.loc 1 156 3 is_stmt 1 view .LVU20
 157:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  93              		.loc 1 157 3 view .LVU21
 158:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  94              		.loc 1 158 3 view .LVU22
 158:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  95              		.loc 1 158 41 is_stmt 0 view .LVU23
  96 0042 0A92     		str	r2, [sp, #40]
 159:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  97              		.loc 1 159 3 is_stmt 1 view .LVU24
 159:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  98              		.loc 1 159 34 is_stmt 0 view .LVU25
  99 0044 0C94     		str	r4, [sp, #48]
 160:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 100              		.loc 1 160 3 is_stmt 1 view .LVU26
 160:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 101              		.loc 1 160 35 is_stmt 0 view .LVU27
 102 0046 0D94     		str	r4, [sp, #52]
 161:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 8;
 103              		.loc 1 161 3 is_stmt 1 view .LVU28
 162:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 104              		.loc 1 162 3 view .LVU29
 163:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 105              		.loc 1 163 3 view .LVU30
 164:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/cceO63ng.s 			page 6


 106              		.loc 1 164 3 view .LVU31
 164:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 107              		.loc 1 164 30 is_stmt 0 view .LVU32
 108 0048 1193     		str	r3, [sp, #68]
 109              		.loc 1 165 3 is_stmt 1 view .LVU33
 110              		.loc 1 165 24 is_stmt 0 view .LVU34
 111 004a FFF7FEFF 		bl	HAL_RCC_OscConfig
 112              	.LVL3:
 113              		.loc 1 165 3 discriminator 1 view .LVU35
 114 004e 0028     		cmp	r0, #0
 115 0050 01D0     		beq	.L2
 166:Core/Src/main.cpp ****   {
 167:Core/Src/main.cpp ****     Error_Handler();
 116              		.loc 1 167 5 is_stmt 1 view .LVU36
 117              	.LBB12:
 118              	.LBI12:
 168:Core/Src/main.cpp ****   }
 169:Core/Src/main.cpp **** 
 170:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB buses clocks
 171:Core/Src/main.cpp ****   */
 172:Core/Src/main.cpp ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 173:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1;
 174:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 175:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 176:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 177:Core/Src/main.cpp **** 
 178:Core/Src/main.cpp ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 179:Core/Src/main.cpp ****   {
 180:Core/Src/main.cpp ****     Error_Handler();
 181:Core/Src/main.cpp ****   }
 182:Core/Src/main.cpp **** }
 183:Core/Src/main.cpp **** 
 184:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 185:Core/Src/main.cpp **** 
 186:Core/Src/main.cpp **** /* USER CODE END 4 */
 187:Core/Src/main.cpp **** 
 188:Core/Src/main.cpp **** /**
 189:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 190:Core/Src/main.cpp ****   * @retval None
 191:Core/Src/main.cpp ****   */
 192:Core/Src/main.cpp **** void Error_Handler(void)
 119              		.loc 1 192 6 view .LVU37
 193:Core/Src/main.cpp **** {
 194:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 195:Core/Src/main.cpp ****   /* User can add his own implementation to report the HAL error return state */
 196:Core/Src/main.cpp ****   __disable_irq();
 120              		.loc 1 196 3 view .LVU38
 121              	.LBB13:
 122              	.LBI13:
 123              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
ARM GAS  /tmp/cceO63ng.s 			page 7


   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
ARM GAS  /tmp/cceO63ng.s 			page 8


  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cceO63ng.s 			page 9


 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
ARM GAS  /tmp/cceO63ng.s 			page 10


 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 124              		.loc 2 207 27 view .LVU39
 125              	.LBB14:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 126              		.loc 2 209 3 view .LVU40
 127              		.syntax divided
 128              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 129 0052 72B6     		cpsid i
 130              	@ 0 "" 2
 131              		.thumb
 132              		.syntax unified
 133              	.L3:
 134              	.LBE14:
 135              	.LBE13:
 197:Core/Src/main.cpp ****   while (1)
 136              		.loc 1 197 3 view .LVU41
 137              		.loc 1 197 3 view .LVU42
 138 0054 FEE7     		b	.L3
 139              	.L2:
 140              	.LBE12:
 172:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1;
 141              		.loc 1 172 3 view .LVU43
 172:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1;
 142              		.loc 1 172 31 is_stmt 0 view .LVU44
 143 0056 0723     		movs	r3, #7
 175:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 144              		.loc 1 175 35 view .LVU45
 145 0058 0390     		str	r0, [sp, #12]
ARM GAS  /tmp/cceO63ng.s 			page 11


 176:Core/Src/main.cpp **** 
 146              		.loc 1 176 36 view .LVU46
 147 005a 0490     		str	r0, [sp, #16]
 178:Core/Src/main.cpp ****   {
 148              		.loc 1 178 26 view .LVU47
 149 005c 2100     		movs	r1, r4
 150 005e 01A8     		add	r0, sp, #4
 172:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1;
 151              		.loc 1 172 31 view .LVU48
 152 0060 0193     		str	r3, [sp, #4]
 174:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 153              		.loc 1 174 3 is_stmt 1 view .LVU49
 174:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 154              		.loc 1 174 34 is_stmt 0 view .LVU50
 155 0062 0294     		str	r4, [sp, #8]
 175:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 156              		.loc 1 175 3 is_stmt 1 view .LVU51
 176:Core/Src/main.cpp **** 
 157              		.loc 1 176 3 view .LVU52
 178:Core/Src/main.cpp ****   {
 158              		.loc 1 178 3 view .LVU53
 178:Core/Src/main.cpp ****   {
 159              		.loc 1 178 26 is_stmt 0 view .LVU54
 160 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 161              	.LVL4:
 178:Core/Src/main.cpp ****   {
 162              		.loc 1 178 3 discriminator 1 view .LVU55
 163 0068 0028     		cmp	r0, #0
 164 006a 01D0     		beq	.L1
 180:Core/Src/main.cpp ****   }
 165              		.loc 1 180 5 is_stmt 1 view .LVU56
 166              	.LBB15:
 167              	.LBI15:
 192:Core/Src/main.cpp **** {
 168              		.loc 1 192 6 view .LVU57
 196:Core/Src/main.cpp ****   while (1)
 169              		.loc 1 196 3 view .LVU58
 170              	.LBB16:
 171              	.LBI16:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 172              		.loc 2 207 27 view .LVU59
 173              	.LBB17:
 174              		.loc 2 209 3 view .LVU60
 175              		.syntax divided
 176              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 177 006c 72B6     		cpsid i
 178              	@ 0 "" 2
 179              		.thumb
 180              		.syntax unified
 181              	.L5:
 182              	.LBE17:
 183              	.LBE16:
 184              		.loc 1 197 3 view .LVU61
 185              		.loc 1 197 3 view .LVU62
 186 006e FEE7     		b	.L5
 187              	.L1:
 188              	.LBE15:
ARM GAS  /tmp/cceO63ng.s 			page 12


 182:Core/Src/main.cpp **** 
 189              		.loc 1 182 1 is_stmt 0 view .LVU63
 190 0070 12B0     		add	sp, sp, #72
 191              		@ sp needed
 192 0072 10BD     		pop	{r4, pc}
 193              		.cfi_endproc
 194              	.LFE431:
 195              		.fnend
 197              		.section	.rodata.main.str1.1,"aMS",%progbits,1
 198              	.LC1:
 199 0000 4C6F6767 		.ascii	"Logger Initialized\000"
 199      65722049 
 199      6E697469 
 199      616C697A 
 199      656400
 200              		.section	.text.startup.main,"ax",%progbits
 201              		.align	1
 202              		.global	main
 203              		.syntax unified
 204              		.code	16
 205              		.thumb_func
 207              	main:
 208              		.fnstart
 209              	.LFB430:
  77:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 210              		.loc 1 77 1 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 256
 213              		@ frame_needed = 0, uses_anonymous_args = 0
  85:Core/Src/main.cpp **** 
 214              		.loc 1 85 3 view .LVU65
  77:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 215              		.loc 1 77 1 is_stmt 0 view .LVU66
 216 0000 30B5     		push	{r4, r5, lr}
 217              		.save {r4, r5, lr}
 218              	.LCFI2:
 219              		.cfi_def_cfa_offset 12
 220              		.cfi_offset 4, -12
 221              		.cfi_offset 5, -8
 222              		.cfi_offset 14, -4
 223              		.pad #268
 224 0002 C3B0     		sub	sp, sp, #268
 225              	.LCFI3:
 226              		.cfi_def_cfa_offset 280
  85:Core/Src/main.cpp **** 
 227              		.loc 1 85 11 view .LVU67
 228 0004 FFF7FEFF 		bl	HAL_Init
 229              	.LVL5:
  92:Core/Src/main.cpp **** 
 230              		.loc 1 92 3 is_stmt 1 view .LVU68
  92:Core/Src/main.cpp **** 
 231              		.loc 1 92 21 is_stmt 0 view .LVU69
 232 0008 FFF7FEFF 		bl	_Z18SystemClock_Configv
 233              	.LVL6:
  99:Core/Src/main.cpp **** //  MX_ADC1_Init();
 234              		.loc 1 99 3 is_stmt 1 view .LVU70
  99:Core/Src/main.cpp **** //  MX_ADC1_Init();
ARM GAS  /tmp/cceO63ng.s 			page 13


 235              		.loc 1 99 15 is_stmt 0 view .LVU71
 236 000c FFF7FEFF 		bl	MX_GPIO_Init
 237              	.LVL7:
 101:Core/Src/main.cpp ****   MX_USART1_UART_Init();
 238              		.loc 1 101 3 is_stmt 1 view .LVU72
 101:Core/Src/main.cpp ****   MX_USART1_UART_Init();
 239              		.loc 1 101 15 is_stmt 0 view .LVU73
 240 0010 FFF7FEFF 		bl	MX_SPI1_Init
 241              	.LVL8:
 102:Core/Src/main.cpp **** //  MX_DMA_Init();
 242              		.loc 1 102 3 is_stmt 1 view .LVU74
 102:Core/Src/main.cpp **** //  MX_DMA_Init();
 243              		.loc 1 102 22 is_stmt 0 view .LVU75
 244 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 245              	.LVL9:
 104:Core/Src/main.cpp ****   MX_TIM3_Init();
 246              		.loc 1 104 3 is_stmt 1 view .LVU76
 104:Core/Src/main.cpp ****   MX_TIM3_Init();
 247              		.loc 1 104 15 is_stmt 0 view .LVU77
 248 0018 FFF7FEFF 		bl	MX_I2C2_Init
 249              	.LVL10:
 105:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 250              		.loc 1 105 3 is_stmt 1 view .LVU78
 105:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 251              		.loc 1 105 15 is_stmt 0 view .LVU79
 252 001c FFF7FEFF 		bl	MX_TIM3_Init
 253              	.LVL11:
 109:Core/Src/main.cpp **** 	logger.log(Logger::INFO, "Logger Initialized");
 254              		.loc 1 109 2 is_stmt 1 view .LVU80
 109:Core/Src/main.cpp **** 	logger.log(Logger::INFO, "Logger Initialized");
 255              		.loc 1 109 30 is_stmt 0 view .LVU81
 256 0020 3649     		ldr	r1, .L8
 257 0022 02A8     		add	r0, sp, #8
 258 0024 FFF7FEFF 		bl	_ZN6LoggerC1EP20__UART_HandleTypeDef
 259              	.LVL12:
 110:Core/Src/main.cpp **** 	Screen screen = ScreenFactory().spi(&hspi1).cs(SCREEN_CS_GPIO_Port, SCREEN_CS_Pin)
 260              		.loc 1 110 2 is_stmt 1 view .LVU82
 110:Core/Src/main.cpp **** 	Screen screen = ScreenFactory().spi(&hspi1).cs(SCREEN_CS_GPIO_Port, SCREEN_CS_Pin)
 261              		.loc 1 110 12 is_stmt 0 view .LVU83
 262 0028 0121     		movs	r1, #1
 263 002a 354A     		ldr	r2, .L8+4
 264 002c 02A8     		add	r0, sp, #8
 265 002e FFF7FEFF 		bl	_ZN6Logger3logENS_8LogLevelEPKc
 266              	.LVL13:
 111:Core/Src/main.cpp **** 			.dc(SCREEN_DC_GPIO_Port, SCREEN_DC_Pin).res(SCREEN_RES_GPIO_Port, SCREEN_RES_Pin)
 267              		.loc 1 111 2 is_stmt 1 view .LVU84
 111:Core/Src/main.cpp **** 			.dc(SCREEN_DC_GPIO_Port, SCREEN_DC_Pin).res(SCREEN_RES_GPIO_Port, SCREEN_RES_Pin)
 268              		.loc 1 111 18 is_stmt 0 view .LVU85
 269 0032 2422     		movs	r2, #36
 270 0034 0021     		movs	r1, #0
 271 0036 0CA8     		add	r0, sp, #48
 272 0038 FFF7FEFF 		bl	memset
 273              	.LVL14:
 111:Core/Src/main.cpp **** 			.dc(SCREEN_DC_GPIO_Port, SCREEN_DC_Pin).res(SCREEN_RES_GPIO_Port, SCREEN_RES_Pin)
 274              		.loc 1 111 37 view .LVU86
 275 003c 314A     		ldr	r2, .L8+8
 276 003e 0CA9     		add	r1, sp, #48
ARM GAS  /tmp/cceO63ng.s 			page 14


 277 0040 15A8     		add	r0, sp, #84
 278 0042 FFF7FEFF 		bl	_ZN13ScreenFactory3spiEP19__SPI_HandleTypeDef
 279              	.LVL15:
 111:Core/Src/main.cpp **** 			.dc(SCREEN_DC_GPIO_Port, SCREEN_DC_Pin).res(SCREEN_RES_GPIO_Port, SCREEN_RES_Pin)
 280              		.loc 1 111 48 discriminator 2 view .LVU87
 281 0046 A022     		movs	r2, #160
 282 0048 8023     		movs	r3, #128
 283 004a D205     		lsls	r2, r2, #23
 284 004c 15A9     		add	r1, sp, #84
 285 004e 1EA8     		add	r0, sp, #120
 286 0050 FFF7FEFF 		bl	_ZN13ScreenFactory2csEP12GPIO_TypeDeft
 287              	.LVL16:
 112:Core/Src/main.cpp **** 			.bklt(SCREEN_BLK_GPIO_Port, SCREEN_BLK_Pin).build();
 288              		.loc 1 112 7 view .LVU88
 289 0054 A022     		movs	r2, #160
 290 0056 0823     		movs	r3, #8
 291 0058 D205     		lsls	r2, r2, #23
 292 005a 1EA9     		add	r1, sp, #120
 293 005c 27A8     		add	r0, sp, #156
 294 005e FFF7FEFF 		bl	_ZN13ScreenFactory2dcEP12GPIO_TypeDeft
 295              	.LVL17:
 112:Core/Src/main.cpp **** 			.bklt(SCREEN_BLK_GPIO_Port, SCREEN_BLK_Pin).build();
 296              		.loc 1 112 47 discriminator 1 view .LVU89
 297 0062 A022     		movs	r2, #160
 298 0064 1023     		movs	r3, #16
 299 0066 D205     		lsls	r2, r2, #23
 300 0068 27A9     		add	r1, sp, #156
 301 006a 30A8     		add	r0, sp, #192
 302 006c FFF7FEFF 		bl	_ZN13ScreenFactory3resEP12GPIO_TypeDeft
 303              	.LVL18:
 113:Core/Src/main.cpp **** 	
 304              		.loc 1 113 9 view .LVU90
 305 0070 A022     		movs	r2, #160
 306 0072 4023     		movs	r3, #64
 307 0074 D205     		lsls	r2, r2, #23
 308 0076 30A9     		add	r1, sp, #192
 309 0078 39A8     		add	r0, sp, #228
 310 007a FFF7FEFF 		bl	_ZN13ScreenFactory4bkltEP12GPIO_TypeDeft
 311              	.LVL19:
 113:Core/Src/main.cpp **** 	
 312              		.loc 1 113 53 discriminator 1 view .LVU91
 313 007e 39A9     		add	r1, sp, #228
 314 0080 03A8     		add	r0, sp, #12
 315 0082 FFF7FEFF 		bl	_ZN13ScreenFactory5buildEv
 316              	.LVL20:
 115:Core/Src/main.cpp **** //	screen.drawFont(0, 0, str, 5, YELLOW);
 317              		.loc 1 115 2 is_stmt 1 view .LVU92
 117:Core/Src/main.cpp **** 	screen.fillArea(32,0,63,31,WHITE);
 318              		.loc 1 117 2 view .LVU93
 117:Core/Src/main.cpp **** 	screen.fillArea(32,0,63,31,WHITE);
 319              		.loc 1 117 17 is_stmt 0 view .LVU94
 320 0086 1F24     		movs	r4, #31
 321 0088 0022     		movs	r2, #0
 322 008a 1F4B     		ldr	r3, .L8+12
 323 008c 1100     		movs	r1, r2
 324 008e 0193     		str	r3, [sp, #4]
 325 0090 03A8     		add	r0, sp, #12
ARM GAS  /tmp/cceO63ng.s 			page 15


 326 0092 2300     		movs	r3, r4
 327 0094 0094     		str	r4, [sp]
 328 0096 FFF7FEFF 		bl	_ZN6Screen8fillAreaEttttt
 329              	.LVL21:
 118:Core/Src/main.cpp **** 	screen.fillArea(64,0,95,31,RED);
 330              		.loc 1 118 2 is_stmt 1 view .LVU95
 118:Core/Src/main.cpp **** 	screen.fillArea(64,0,95,31,RED);
 331              		.loc 1 118 17 is_stmt 0 view .LVU96
 332 009a 1C4B     		ldr	r3, .L8+16
 333 009c 0022     		movs	r2, #0
 334 009e 2021     		movs	r1, #32
 335 00a0 0193     		str	r3, [sp, #4]
 336 00a2 03A8     		add	r0, sp, #12
 337 00a4 3F23     		movs	r3, #63
 338 00a6 0094     		str	r4, [sp]
 339 00a8 FFF7FEFF 		bl	_ZN6Screen8fillAreaEttttt
 340              	.LVL22:
 119:Core/Src/main.cpp **** 	screen.fillArea(96,0,127,31,GREEN);
 341              		.loc 1 119 2 is_stmt 1 view .LVU97
 119:Core/Src/main.cpp **** 	screen.fillArea(96,0,127,31,GREEN);
 342              		.loc 1 119 17 is_stmt 0 view .LVU98
 343 00ac F823     		movs	r3, #248
 344 00ae 1B02     		lsls	r3, r3, #8
 345 00b0 0022     		movs	r2, #0
 346 00b2 4021     		movs	r1, #64
 347 00b4 0193     		str	r3, [sp, #4]
 348 00b6 03A8     		add	r0, sp, #12
 349 00b8 5F23     		movs	r3, #95
 350 00ba 0094     		str	r4, [sp]
 351 00bc FFF7FEFF 		bl	_ZN6Screen8fillAreaEttttt
 352              	.LVL23:
 120:Core/Src/main.cpp **** 	screen.fillArea(0,32,31,63,BLUE);
 353              		.loc 1 120 2 is_stmt 1 view .LVU99
 120:Core/Src/main.cpp **** 	screen.fillArea(0,32,31,63,BLUE);
 354              		.loc 1 120 17 is_stmt 0 view .LVU100
 355 00c0 FC23     		movs	r3, #252
 121:Core/Src/main.cpp **** 	screen.fillArea(32,32,63,63,BLACK);
 356              		.loc 1 121 17 view .LVU101
 357 00c2 3F25     		movs	r5, #63
 120:Core/Src/main.cpp **** 	screen.fillArea(0,32,31,63,BLUE);
 358              		.loc 1 120 17 view .LVU102
 359 00c4 DB00     		lsls	r3, r3, #3
 360 00c6 0022     		movs	r2, #0
 361 00c8 6021     		movs	r1, #96
 362 00ca 0193     		str	r3, [sp, #4]
 363 00cc 03A8     		add	r0, sp, #12
 364 00ce 7F23     		movs	r3, #127
 365 00d0 0094     		str	r4, [sp]
 366 00d2 FFF7FEFF 		bl	_ZN6Screen8fillAreaEttttt
 367              	.LVL24:
 121:Core/Src/main.cpp **** 	screen.fillArea(32,32,63,63,BLACK);
 368              		.loc 1 121 2 is_stmt 1 view .LVU103
 121:Core/Src/main.cpp **** 	screen.fillArea(32,32,63,63,BLACK);
 369              		.loc 1 121 17 is_stmt 0 view .LVU104
 370 00d6 2300     		movs	r3, r4
 371 00d8 2022     		movs	r2, #32
 372 00da 0021     		movs	r1, #0
ARM GAS  /tmp/cceO63ng.s 			page 16


 373 00dc 03A8     		add	r0, sp, #12
 374 00de 0194     		str	r4, [sp, #4]
 375 00e0 0095     		str	r5, [sp]
 376 00e2 FFF7FEFF 		bl	_ZN6Screen8fillAreaEttttt
 377              	.LVL25:
 122:Core/Src/main.cpp ****   /* USER CODE END 2 */
 378              		.loc 1 122 2 is_stmt 1 view .LVU105
 122:Core/Src/main.cpp ****   /* USER CODE END 2 */
 379              		.loc 1 122 17 is_stmt 0 view .LVU106
 380 00e6 0023     		movs	r3, #0
 381 00e8 2022     		movs	r2, #32
 382 00ea 0193     		str	r3, [sp, #4]
 383 00ec 1100     		movs	r1, r2
 384 00ee 2B00     		movs	r3, r5
 385 00f0 0095     		str	r5, [sp]
 386 00f2 03A8     		add	r0, sp, #12
 387 00f4 FFF7FEFF 		bl	_ZN6Screen8fillAreaEttttt
 388              	.LVL26:
 389              	.L7:
 127:Core/Src/main.cpp ****   {
 390              		.loc 1 127 3 is_stmt 1 view .LVU107
 127:Core/Src/main.cpp ****   {
 391              		.loc 1 127 3 view .LVU108
 392 00f8 FEE7     		b	.L7
 393              	.L9:
 394 00fa C046     		.align	2
 395              	.L8:
 396 00fc 00000000 		.word	huart1
 397 0100 00000000 		.word	.LC1
 398 0104 00000000 		.word	hspi1
 399 0108 E0FF0000 		.word	65504
 400 010c FFFF0000 		.word	65535
 401              		.cfi_endproc
 402              	.LFE430:
 403              		.fnend
 405              		.section	.text.Error_Handler,"ax",%progbits
 406              		.align	1
 407              		.global	Error_Handler
 408              		.syntax unified
 409              		.code	16
 410              		.thumb_func
 412              	Error_Handler:
 413              		.fnstart
 414              	.LFB432:
 193:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 415              		.loc 1 193 1 view -0
 416              		.cfi_startproc
 417              		@ Volatile: function does not return.
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 196:Core/Src/main.cpp ****   while (1)
 421              		.loc 1 196 3 view .LVU110
 422              	.LBB18:
 423              	.LBI18:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 424              		.loc 2 207 27 view .LVU111
ARM GAS  /tmp/cceO63ng.s 			page 17


 425              	.LBB19:
 426              		.loc 2 209 3 view .LVU112
 427              		.syntax divided
 428              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 429 0000 72B6     		cpsid i
 430              	@ 0 "" 2
 431              		.thumb
 432              		.syntax unified
 433              	.L11:
 434              	.LBE19:
 435              	.LBE18:
 436              		.loc 1 197 3 view .LVU113
 437              		.loc 1 197 3 view .LVU114
 438 0002 FEE7     		b	.L11
 439              		.cfi_endproc
 440              	.LFE432:
 441              		.cantunwind
 442              		.fnend
 444              		.global	beat
 445              		.section	.data.beat,"aw"
 446              		.align	1
 449              	beat:
 450 0000 0000     		.short	0
 451 0002 0000     		.short	0
 452 0004 0000     		.short	0
 453 0006 0000     		.short	0
 454 0008 0000     		.short	0
 455 000a 01       		.byte	1
 456 000b 00       		.byte	0
 457 000c 00       		.byte	0
 458 000d 00       		.space	1
 459              		.global	dmabuf
 460              		.section	.bss.dmabuf,"aw",%nobits
 461              		.align	1
 464              	dmabuf:
 465 0000 00000000 		.space	512
 465      00000000 
 465      00000000 
 465      00000000 
 465      00000000 
 466              		.text
 467              	.Letext0:
 468              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 469              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 470              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g030xx.h"
 471              		.file 6 "/usr/lib/gcc/arm-none-eabi/13.1.0/include/stddef.h"
 472              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 473              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 474              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 475              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h"
 476              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 477              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 478              		.file 13 "Core/Inc/spi.h"
 479              		.file 14 "Core/Inc/usart.h"
 480              		.file 15 "Core/Inc/beat.h"
 481              		.file 16 "/usr/arm-none-eabi/include/c++/13.1.0/cstring"
 482              		.file 17 "/usr/arm-none-eabi/include/c++/13.1.0/arm-none-eabi/thumb/v6-m/nofp/bits/c++config.h"
ARM GAS  /tmp/cceO63ng.s 			page 18


 483              		.file 18 "/usr/arm-none-eabi/include/string.h"
 484              		.file 19 "Core/Inc/logger.h"
 485              		.file 20 "Core/Inc/screen.h"
 486              		.file 21 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_pwr_ex.h"
 487              		.file 22 "Core/Inc/tim.h"
 488              		.file 23 "Core/Inc/i2c.h"
 489              		.file 24 "Core/Inc/gpio.h"
 490              		.file 25 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
ARM GAS  /tmp/cceO63ng.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/cceO63ng.s:19     .text._Z18SystemClock_Configv:00000000 $t
     /tmp/cceO63ng.s:25     .text._Z18SystemClock_Configv:00000000 _Z18SystemClock_Configv
.ARM.exidx.text._Z18SystemClock_Configv:00000000 $d
     /tmp/cceO63ng.s:201    .text.startup.main:00000000 $t
     /tmp/cceO63ng.s:207    .text.startup.main:00000000 main
     /tmp/cceO63ng.s:396    .text.startup.main:000000fc $d
     .ARM.exidx.text.startup.main:00000000 $d
     /tmp/cceO63ng.s:406    .text.Error_Handler:00000000 $t
     /tmp/cceO63ng.s:412    .text.Error_Handler:00000000 Error_Handler
    .ARM.exidx.text.Error_Handler:00000000 $d
     /tmp/cceO63ng.s:449    .data.beat:00000000 beat
     /tmp/cceO63ng.s:446    .data.beat:00000000 $d
     /tmp/cceO63ng.s:464    .bss.dmabuf:00000000 dmabuf
     /tmp/cceO63ng.s:461    .bss.dmabuf:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_unwind_cpp_pr0
HAL_Init
MX_GPIO_Init
MX_SPI1_Init
MX_USART1_UART_Init
MX_I2C2_Init
MX_TIM3_Init
_ZN6LoggerC1EP20__UART_HandleTypeDef
_ZN6Logger3logENS_8LogLevelEPKc
_ZN13ScreenFactory3spiEP19__SPI_HandleTypeDef
_ZN13ScreenFactory2csEP12GPIO_TypeDeft
_ZN13ScreenFactory2dcEP12GPIO_TypeDeft
_ZN13ScreenFactory3resEP12GPIO_TypeDeft
_ZN13ScreenFactory4bkltEP12GPIO_TypeDeft
_ZN13ScreenFactory5buildEv
_ZN6Screen8fillAreaEttttt
huart1
hspi1
