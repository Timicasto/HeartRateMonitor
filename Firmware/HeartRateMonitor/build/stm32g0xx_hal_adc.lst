ARM GAS  /tmp/ccrGR9oZ.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g0xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c"
  18              		.section	.text.LL_ADC_SetAnalogWDMonitChannels,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	LL_ADC_SetAnalogWDMonitChannels:
  25              	.LVL0:
  26              	.LFB340:
  27              		.file 2 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h"
   1:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @file    stm32g0xx_ll_adc.h
   4:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @attention
   8:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
   9:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * Copyright (c) 2018 STMicroelectronics.
  10:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
  12:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
  16:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
  18:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  19:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #ifndef STM32G0xx_LL_ADC_H
  21:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define STM32G0xx_LL_ADC_H
  22:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  23:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif
  26:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  27:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #include "stm32g0xx.h"
  29:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  30:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @addtogroup STM32G0xx_LL_Driver
  31:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
ARM GAS  /tmp/ccrGR9oZ.s 			page 2


  32:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
  33:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  34:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined (ADC1)
  35:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  36:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
  38:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
  39:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  40:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  43:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
  46:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
  47:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  48:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  51:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  52:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  53:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  54:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  55:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  56:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_SQ1" positi
  57:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_SQ2" positi
  58:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_SQ3" positi
  59:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (12UL) /* Equivalent to bitfield "ADC_CHSELR_SQ4" positi
  60:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (16UL) /* Equivalent to bitfield "ADC_CHSELR_SQ5" positi
  61:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (20UL) /* Equivalent to bitfield "ADC_CHSELR_SQ6" positi
  62:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (24UL) /* Equivalent to bitfield "ADC_CHSELR_SQ7" positi
  63:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (28UL) /* Equivalent to bitfield "ADC_CHSELR_SQ8" positi
  64:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  65:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  66:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  67:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  68:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  69:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - regular trigger source                                                   */
  70:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - regular trigger edge                                                     */
  71:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT      (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge (
  72:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                   compatibility with some ADC on ot
  73:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                   having this setting set by HW def
  74:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  75:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  76:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  77:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  78:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK           (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U *
  79:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  80:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  81:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  82:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  83:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  84:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  85:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  86:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK             (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U * 
  87:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
  88:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
ARM GAS  /tmp/ccrGR9oZ.s 			page 3


  89:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
  90:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  91:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  92:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_CFGR1_EXTSEL" posi
  93:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CFGR1_EXTEN" posit
  94:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  95:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  96:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  97:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  98:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  99:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWD1CH)
 104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
 105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_SEQ     (ADC_CHSELR_SQ1 << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) 
 106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ADC_CHANNEL_ID_NUMBER_MASK with reduced range: on this STM32 series, ADC group regular sequencer,
 107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   if set to mode "fully configurable", can contain channels with a restricted channel number.
 108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   Refer to function @ref LL_ADC_REG_SetSequencerConfigurable(). */
 109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)              /* Equivalent to bitfield "ADC_CHAN
 110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    position in register */
 111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FUL) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   >> [Position of bitfield "ADC_CHANNEL_NUMBER_MASK" in register]) */
 116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
 120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* channels literals definition.                                              */
 123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR1_AWD1CH_0)
 125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR1_AWD1CH_1)
 126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR1_AWD1CH_2)
 128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_0)
 129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1)
 130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR1_AWD1CH_3)
 132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_0)
 133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1)
 134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2)
 136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | \
 139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWD1CH_4)
 141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_0)
 142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_1)
 143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* channels literals definition.                                              */
ARM GAS  /tmp/ccrGR9oZ.s 			page 4


 146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
 165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC channel sampling time:                               */
 167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literals LL_ADC_SAMPLINGTIME_x                              */
 168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* the relevant bits for:                                                     */
 169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* (concatenation of multiple bits used in register SMPR)                     */
 170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - ADC channels sampling time: setting channel wise, to map each channel    */
 171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   on one of the common sampling time available.                            */
 172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - ADC channels common sampling time: set a sampling time into one of the   */
 173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   common sampling time available.                                          */
 174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_CH_MASK          (ADC_CHANNEL_ID_BITFIELD_MASK << ADC_SMPR_SMPSEL0_BITOFF
 175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_MASK         (ADC_SMPR_SMP2 | ADC_SMPR_SMP1)
 176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_SHIFT_MASK   (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SMPR_SMP1_BITOFFSET_P
 177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   selection on groups.                                                     */
 186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS (20UL)
 199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL
 201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
ARM GAS  /tmp/ccrGR9oZ.s 			page 5


 203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL)                      /* Position of bits ADC_AWD_
 205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                           in ADC_AWD_CRX_REGOFFSET_
 206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET + (1UL << ADC_AWD_CRX_REGOFFSET_B
 211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)      /* Position of bits ADC
 213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                                in ADC_AWD_TRX_REGOF
 214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                                threshold high: mask
 216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                                threshold high: posi
 218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                                position to perform 
 220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS (20UL)
 221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* ADC registers bits positions */
 225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3UL) /* Equivalent to bitfield "ADC_CFGR1_RES" positio
 226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22UL) /* Equivalent to bitfield "ADC_CFGR1_AWDSGL" posi
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Equivalent to bitfield "ADC_TR1_HT1" position 
 228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL0" pos
 229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL1" pos
 230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL2" pos
 231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL3" pos
 232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL4" pos
 233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL5" pos
 234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL6" pos
 235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL7" pos
 236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL8" pos
 237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL9" pos
 238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL10" po
 239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL11" po
 240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL12" po
 241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL13" po
 242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL14" po
 243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL15" po
 244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL16" po
 245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL17" po
 246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL18" po
 247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SMPR_SMP1_BITOFFSET_POS        ( 0UL) /* Equivalent to bitfield "ADC_SMPR_SMP1" positio
 248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SMPR_SMP2_BITOFFSET_POS        ( 4UL) /* Equivalent to bitfield "ADC_SMPR_SMP2" positio
 249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SMPR_SMPSEL0_BITOFFSET_POS     ( 8UL) /* Equivalent to bitfield "ADC_SMPR_SMPSEL0" posi
 250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* ADC registers bits groups */
 253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADEN | ADC_CR_ADDIS \
 254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CR_ADSTART | ADC_CR_ADSTP)            /* ADC regi
 255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   HW property "rs": Software can read as well as set this bit. Writing '0' has no effect on the bit
 256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* ADC internal channels related definitions */
 259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal voltage reference VrefInt */
ARM GAS  /tmp/ccrGR9oZ.s 			page 6


 260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   address of parameter VREFINT_CAL: VrefInt ADC raw data acquired at temperature 30 DegC (tolerance
 262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   Vref+ = 3.0 V (tolerance: +-10 mV). */
 263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   with which VrefInt has been calibrated in production (tolerance: +-10 mV) (unit: mV). */
 265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Temperature sensor */
 266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Address of parameter TS_
 267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   temperature sensor ADC raw data acquired at temperature  30 DegC (tolerance: +-5 DegC),
 268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   Vref+ = 3.0 V (tolerance: +-10 mV). */
 269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Address of parameter TS_
 270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   temperature sensor ADC raw data acquired at temperature 130 DegC (tolerance: +-5 DegC),
 271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   Vref+ = 3.0 V (tolerance: +-10 mV). */
 272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30)            /* Temperature at which tem
 273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   has been calibrated in production for data into TEMPSENSOR_CAL1_ADDR (tolerance: +-5 DegC) (unit:
 274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (( int32_t)  130)            /* Temperature at which tem
 275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   has been calibrated in production for data into TEMPSENSOR_CAL2_ADDR (tolerance: +-5 DegC) (unit:
 276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          ( 3000UL)                    /* Analog voltage reference
 277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   with which temperature sensor has been calibrated in production (tolerance: +-10 mV) (unit: mV). 
 278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a register from a register basis from which an offset
 292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is applied.
 293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Pointer to register address
 296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and multimode
 314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
ARM GAS  /tmp/ccrGR9oZ.s 			page 7


 317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sharing the same ADC common instance):
 318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         disabled.
 320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** typedef struct
 322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_SetCommonClock(). */
 327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is conditioned to ADC state:
 337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance must be disabled.
 338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         refer to description of each function for setting
 346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         conditioned to ADC state.
 347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** typedef struct
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             @note On this STM32 series, this parameter has some clo
 353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                   ADC clock synchronous (from PCLK) with prescaler 
 354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                   only if PCLK has a 50% duty clock cycle (APB pres
 355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                   inside the RCC must be bypassed and the system cl
 356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                   cycle).
 357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_SetClock().
 359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              For more details, refer to description of this functio
 360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_SetResolution(). */
 365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_SetDataAlignment(). */
 370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
ARM GAS  /tmp/ccrGR9oZ.s 			page 8


 374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_SetLowPowerMode(). */
 375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (functions with prefix "REG").
 384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is conditioned to ADC state:
 386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance must be disabled.
 387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         refer to description of each function for setting
 395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         conditioned to ADC state.
 396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** typedef struct
 398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              from external peripheral (timer event, external interr
 401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    set trigger polarity to rising edge(default sett
 404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    with some ADC on other STM32 families having thi
 405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    default value).
 406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    @ref LL_ADC_REG_SetTriggerEdge().
 408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                               @ref LL_ADC_REG_SetTriggerSource(). */
 410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                     to mode "fully configurable". Refer to function
 414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                     @ref LL_ADC_REG_SetSequencerConfigurable().
 415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                               @ref LL_ADC_REG_SetSequencerLength(). */
 418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    enabled (depending on the sequencer mode: scan l
 424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    more, or several ADC channels enabled in group r
 425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    Refer to function @ref LL_ADC_REG_SetSequencerCo
 426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerDiscont(). */
 428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              conversions are performed in single mode (one conversi
ARM GAS  /tmp/ccrGR9oZ.s 			page 9


 431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              continuous mode (after the first trigger, following co
 432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              successively automatically).
 433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    and discontinuous mode.
 436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetContinuousMode(). */
 438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              by DMA, and DMA requests mode.
 441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetDMATransfer(). */
 444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              data preserved or overwritten.
 447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetOverrun(). */
 450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_CCRDY                  ADC_ISR_CCRDY      /*!< ADC flag ADC channel configurati
 469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    conversion */
 471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    conversions */
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
ARM GAS  /tmp/ccrGR9oZ.s 			page 10


 488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_CCRDY                    ADC_IER_CCRDYIE    /*!< ADC interruption channel configu
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    conversion */
 491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    conversions */
 493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    phase */
 496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* DMA transfer.                                                              */
 509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA        (0x00000000UL)     /* ADC group regular conversion data 
 511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                  (corresponding to register DR) to 
 512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                  configured in independent mode. Wi
 513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                  register accessed by LL function
 514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                  @ref LL_ADC_REG_ReadConversionData
 515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                  functions @ref LL_ADC_REG_ReadConv
 516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                      /*!< ADC asynchronou
 524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** prescaler */
 525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                   /*!< ADC asynchronou
 526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** prescaler division by 2. Setting common to ADC instances of ADC common group, applied ADC instance 
 527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** instance clock  set to clock source asynchronous (refer to function @ref LL_ADC_SetClock() ). */
 528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1)                   /*!< ADC asynchronou
 529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** prescaler division by 4. Setting common to ADC instances of ADC common group, applied ADC instance 
 530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** instance clock  set to clock source asynchronous (refer to function @ref LL_ADC_SetClock() ). */
 531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** prescaler division by 6. Setting common to ADC instances of ADC common group, applied ADC instance 
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** instance clock  set to clock source asynchronous (refer to function @ref LL_ADC_SetClock() ). */
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2)                   /*!< ADC asynchronou
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** prescaler division by 8. Setting common to ADC instances of ADC common group, applied ADC instance 
 536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** instance clock  set to clock source asynchronous (refer to function @ref LL_ADC_SetClock() ). */
 537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** prescaler division by 10. Setting common to ADC instances of ADC common group, applied ADC instance
 539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** instance clock  set to clock source asynchronous (refer to function @ref LL_ADC_SetClock() ). */
 540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** prescaler division by 12. Setting common to ADC instances of ADC common group, applied ADC instance
 542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** instance clock  set to clock source asynchronous (refer to function @ref LL_ADC_SetClock() ). */
 543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 \
 544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CCR_PRESC_0)                  /*!< ADC asynchronou
ARM GAS  /tmp/ccrGR9oZ.s 			page 11


 545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** prescaler division by 16. Setting common to ADC instances of ADC common group, applied ADC instance
 546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** instance clock  set to clock source asynchronous (refer to function @ref LL_ADC_SetClock() ). */
 547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                   /*!< ADC asynchronou
 548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** prescaler division by 32. Setting common to ADC instances of ADC common group, applied ADC instance
 549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** instance clock  set to clock source asynchronous (refer to function @ref LL_ADC_SetClock() ). */
 550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** prescaler division by 64. Setting common to ADC instances of ADC common group, applied ADC instance
 552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** instance clock  set to clock source asynchronous (refer to function @ref LL_ADC_SetClock() ). */
 553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** prescaler division by 128. Setting common to ADC instances of ADC common group, applied ADC instanc
 555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** instance clock  set to clock source asynchronous (refer to function @ref LL_ADC_SetClock() ). */
 556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 \
 557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CCR_PRESC_0)                  /*!< ADC asynchronou
 558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** prescaler division by 256. Setting common to ADC instances of ADC common group, applied ADC instanc
 559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** instance clock  set to clock source asynchronous (refer to function @ref LL_ADC_SetClock() ). */
 560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_FREQ_MODE  ADC common - Clock frequency mode
 565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_HIGH        (0x00000000UL)     /*!< ADC clock mode to high frequency
 568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    On STM32G0, ADC clock frequency 
 569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_LOW         (ADC_CCR_LFMEN)    /*!< ADC clock mode to low frequency.
 570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    On STM32G0,ADC clock frequency b
 571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)       /*!< ADC measurement paths all disa
 584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)     /*!< ADC measurement path to intern
 585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)       /*!< ADC measurement path to intern
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                      temperature sensor */
 587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)     /*!< ADC measurement path to intern
 588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1) /*!< ADC synchronous clock derived 
 596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                      divided by 4 */
 597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0) /*!< ADC synchronous clock derived 
 598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                      divided by 2 */
 599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 | ADC_CFGR2_CKMODE_0) /*!< ADC synch
 600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                                           from AHB 
 601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000UL)       /*!< ADC asynchronous clock. Asynch
ARM GAS  /tmp/ccrGR9oZ.s 			page 12


 602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                      prescaler can be configured us
 603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                      @ref LL_ADC_SetCommonClock(). 
 604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)     /*!< ADC conversion data alignment: r
 623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    (alignment on data register LSB 
 624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)  /*!< ADC conversion data alignment: l
 625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    (alignment on data register MSB 
 626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)     /*!< No ADC low power mode activated 
 634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)   /*!< ADC low power mode auto delay: D
 635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** mode, ADC conversions are performed only when necessary (when previous ADC conversion data is read)
 636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** See description with function @ref LL_ADC_SetLowPowerMode(). */
 637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF) /*!< ADC low power mode auto power-of
 638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** automatically powers-off after a ADC conversion and automatically wakes up when a new ADC conversio
 639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (with startup time between trigger and start of sampling). See description with function
 640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** @ref LL_ADC_SetLowPowerMode(). */
 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** and auto power-off combined. See description with function @ref LL_ADC_SetLowPowerMode(). */
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_FREQ  ADC group regular - Trigger frequency mode
 648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_HIGH           (0x00000000UL)     /*!< ADC trigger frequency mode set t
 651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** Note: ADC trigger frequency mode must be set to low frequency when a duration is exceeded before AD
 652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** start trigger event (between ADC enable and ADC conversion start trigger event or between two ADC c
 653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** trigger event). Duration value: Refer to device datasheet, parameter "tIdle". */
 654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_LOW            (ADC_CFGR2_LFTRIG) /*!< ADC trigger frequency mode set t
 655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** Note: ADC trigger frequency mode must be set to low frequency when a duration is exceeded before AD
 656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** start trigger event (between ADC enable and ADC conversion start trigger event or between two ADC c
 657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** trigger event). Duration value: Refer to device datasheet, parameter "tIdle". */
 658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
ARM GAS  /tmp/ccrGR9oZ.s 			page 13


 659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON  ADC instance - Sampling time common to a group of chan
 663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_1       (ADC_SMPR_SMP1_BITOFFSET_POS) /*!< Set sampling time com
 666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                               of channels: sampling
 667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_2       (ADC_SMPR_SMP2_BITOFFSET_POS \
 668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_SAMPLING_TIME_CH_MASK)  /*!< Set sampling time com
 669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                               of channels: sampling
 670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL)     /*!< ADC group regular (available on 
 678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                 (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< ADC
 686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                 (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< ADC
 687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                 (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< ADC
 688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                 (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< ADC
 689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                 (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< ADC
 690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                 (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< ADC
 691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                 (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< ADC
 692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                 (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< ADC
 693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                 (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< ADC
 694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                 (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< ADC
 695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< ADC
 696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< ADC
 697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< ADC
 698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< ADC
 699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< ADC
 700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< ADC
 701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< ADC
 702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< ADC
 703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_BITFIELD) /*!< ADC
 704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT           (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< ADC
 705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** connected to VrefInt: Internal voltage reference. */
 706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR        (LL_ADC_CHANNEL_12 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< ADC
 707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** connected to Temperature sensor. */
 708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT              (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< ADC
 709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** connected to Vbat/3: Vbat voltage through a divider ladder of factor 1/3 to have Vbat always below 
 710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
ARM GAS  /tmp/ccrGR9oZ.s 			page 14


 716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                        /*
 718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** conversion trigger internal: SW start. */
 719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                       /*
 720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** conversion trigger from external peripheral: TIM1 TRGO. Trigger edge set to rising edge (default se
 721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4       (ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)  /*
 722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** conversion trigger from external peripheral: TIM1 channel 4 event (capture compare: input capture o
 723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** Trigger edge set to rising edge (default setting). */
 724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(TIM2)
 725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR1_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)  /*
 726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** conversion trigger from external peripheral: TIM2 TRGO. Trigger edge set to rising edge (default se
 727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif /* TIM2 */
 728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXTSEL_0 | \
 729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
 730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                           
 731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** conversion trigger from external peripheral: TIM3 TRGO. Trigger edge set to rising edge (default se
 732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(TIM4)
 733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | \
 734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
 735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** conversion trigger from external peripheral: TIM4 TRGO. Trigger edge set to rising edge (default se
 736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif /* TIM4 */
 737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(TIM6)
 738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_0 | \
 739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
 740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** conversion trigger from external peripheral: TIM6 TRGO. Trigger edge set to rising edge (default se
 741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif /* TIM6 */
 742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(TIM15)
 743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR1_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)  /*
 744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** conversion trigger from external peripheral: TIM15 TRGO. Trigger edge set to rising edge (default s
 745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif /* TIM15 */
 746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | \
 747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
 748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** conversion trigger from external peripheral: external interrupt line 11. Trigger edge set to rising
 749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (default setting). */
 750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (ADC_CFGR1_EXTEN_0)                     /*!< ADC group r
 758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** trigger polarity set to rising edge */
 759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1)                     /*!< ADC group r
 760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** trigger polarity set to falling edge */
 761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** trigger polarity set to both rising and falling edges */
 763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)     /*!< ADC conversions performed in sin
 771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** one conversion per trigger */
 772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)   /*!< ADC conversions performed in con
ARM GAS  /tmp/ccrGR9oZ.s 			page 15


 773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** after the first trigger, following conversions launched successively automatically */
 774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)     /*!< ADC conversions are not transfer
 782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (ADC_CFGR1_DMAEN)  /*!< ADC conversion data are transfer
 783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** in limited mode (one shot mode): DMA transfer requests are stopped when number of DMA data transfer
 784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** ADC conversions) is reached. This ADC mode is intended to be used with DMA mode non-circular. */
 785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN)  /*!< ADC conversio
 786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** transferred by DMA, in unlimited mode: DMA transfer requests are unlimited, whatever number of DMA 
 787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (number of ADC conversions). This ADC mode is intended to be used with DMA mode circular. */
 788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)     /*!< ADC group regular behavior in ca
 796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    data preserved */
 797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD) /*!< ADC group regular behavior in ca
 798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    data overwritten */
 799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_MODE  ADC group regular - Sequencer configuration flexibility
 804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_FIXED               (0x00000000UL)        /*!< Sequencer configured to not f
 807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** sequencer length and each rank affectation to a channel are fixed by channel HW number. Refer to de
 808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** function @ref LL_ADC_REG_SetSequencerChannels(). */
 809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_CONFIGURABLE        (ADC_CFGR1_CHSELRMOD) /*!< Sequencer configured to fully
 810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** sequencer length and each rank affectation to a channel are configurable. Refer to description of
 811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** function @ref LL_ADC_REG_SetSequencerLength(). */
 812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (ADC_CHSELR_SQ2)               /*!< ADC group regular se
 820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                               (equivalent to sequen
 821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                               ADC conversion on onl
 822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_CHSELR_SQ3)               /*!< ADC group regular se
 823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                               with 2 ranks in the s
 824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_CHSELR_SQ4)               /*!< ADC group regular se
 825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                               with 3 ranks in the s
 826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_CHSELR_SQ5)               /*!< ADC group regular se
 827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                               with 4 ranks in the s
 828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_CHSELR_SQ6)               /*!< ADC group regular se
 829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                               with 5 ranks in the s
ARM GAS  /tmp/ccrGR9oZ.s 			page 16


 830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_CHSELR_SQ7)               /*!< ADC group regular se
 831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                               with 6 ranks in the s
 832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_CHSELR_SQ8)               /*!< ADC group regular se
 833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                               with 7 ranks in the s
 834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (0x00000000UL)                 /*!< ADC group regular se
 835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                               with 8 ranks in the s
 836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000UL)      /*!< On this STM32 series, parameter
 844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** sequencer set to mode not fully configurable, refer to function @ref LL_ADC_REG_SetSequencerConfigu
 845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** ADC group regular sequencer scan direction forward: from lowest channel number to highest channel n
 846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** all ranks, ADC conversion of ranks with channels enabled in sequencer). On some other STM32 series,
 847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** is not available and the default scan direction is forward. */
 848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR) /*!< On this STM32 series, parameter
 849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** sequencer set to mode not fully configurable, refer to function @ref LL_ADC_REG_SetSequencerConfigu
 850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** ADC group regular sequencer scan direction backward: from highest channel number to lowest channel 
 851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** all ranks, ADC conversion of ranks with channels enabled in sequencer) */
 852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                          /*!< ADC group r
 860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** discontinuous mode disable */
 861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                      /*!< ADC group r
 862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** discontinuous mode enable with sequence interruption every rank */
 863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_REG_RANK_1_SQRX_BITOFFSET_POS) /*!< ADC group regul
 871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_REG_RANK_2_SQRX_BITOFFSET_POS) /*!< ADC group regul
 872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_REG_RANK_3_SQRX_BITOFFSET_POS) /*!< ADC group regul
 873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_REG_RANK_4_SQRX_BITOFFSET_POS) /*!< ADC group regul
 874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_REG_RANK_5_SQRX_BITOFFSET_POS) /*!< ADC group regul
 875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_REG_RANK_6_SQRX_BITOFFSET_POS) /*!< ADC group regul
 876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_REG_RANK_7_SQRX_BITOFFSET_POS) /*!< ADC group regul
 877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_REG_RANK_8_SQRX_BITOFFSET_POS) /*!< ADC group regul
 878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)     /*!< Sampling time 1.5 ADC clock cycl
 886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP1_0)  /*!< Sampling time 3.5 ADC clock cycl
ARM GAS  /tmp/ccrGR9oZ.s 			page 17


 887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP1_1)  /*!< Sampling time 7.5 ADC clock cycl
 888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP1_1 \
 889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_SMPR_SMP1_0) /*!< Sampling time 12.5 ADC clock cyc
 890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP1_2)  /*!< Sampling time 19.5 ADC clock cyc
 891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP1_2 \
 892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_SMPR_SMP1_0) /*!< Sampling time 39.5 ADC clock cyc
 893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP1_2 \
 894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_SMPR_SMP1_1) /*!< Sampling time 79.5 ADC clock cyc
 895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP1_2 \
 896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_SMPR_SMP1_1 \
 897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_SMPR_SMP1_0) /*!< Sampling time 160.5 ADC clock cy
 898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK \
 906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_AWD_CR1_REGOFFSET) /*!< ADC analog watchdog number
 907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK \
 908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_AWD_CR2_REGOFFSET) /*!< ADC analog watchdog number
 909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK \
 910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_AWD_CR3_REGOFFSET) /*!< ADC analog watchdog number
 911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                           /*!< ADC analog
 919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** disabled */
 920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK \
 921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN)                      /*!< ADC analog
 922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of all channels, converted by group regular only */
 923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
 924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN0, converted by group regular only */
 926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
 927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN1, converted by group regular only */
 929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
 930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN2, converted by group regular only */
 932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
 933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN3, converted by group regular only */
 935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
 936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN4, converted by group regular only */
 938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
 939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN5, converted by group regular only */
 941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
 942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN6, converted by group regular only */
ARM GAS  /tmp/ccrGR9oZ.s 			page 18


 944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
 945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN7, converted by group regular only */
 947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
 948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN8, converted by group regular only */
 950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
 951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN9, converted by group regular only */
 953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
 954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN10, converted by group regular only */
 956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
 957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN11, converted by group regular only */
 959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
 960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN12, converted by group regular only */
 962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
 963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN13, converted by group regular only */
 965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
 966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN14, converted by group regular only */
 968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
 969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN15, converted by group regular only */
 971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
 972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN16, converted by group regular only */
 974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
 975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN17, converted by group regular only */
 977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
 978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC channel ADCx_IN18, converted by group regular only */
 980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) \
 981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC internal channel connected to VrefInt: Internal voltage reference, converted by group regula
 983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) \
 984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC internal channel connected to Temperature sensor, converted by group regular only */
 986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) \
 987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog 
 988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** of ADC internal channel connected to Vbat/3: Vbat voltage through a divider ladder of factor 1/3 to
 989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** always below Vdda, converted by group regular only */
 990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
 995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_AWD1TR_HT1)   /*!< ADC analog watchdog threshold hi
 998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (ADC_AWD1TR_LT1)   /*!< ADC analog watchdog threshold lo
 999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_AWD1TR_HT1 \
1000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_AWD1TR_LT1)  /*!< ADC analog watchdog both thresho
ARM GAS  /tmp/ccrGR9oZ.s 			page 19


1001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    concatenated into the same data 
1002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                      /*!< ADC oversamplin
1010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (ADC_CFGR2_OVSE)                    /*!< ADC oversamplin
1011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** ADC group regular. Literal suffix "continued" is kept for compatibility with other STM32 devices fe
1012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** injected, in this case other oversampling scope parameters are available. */
1013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)     /*!< ADC oversampling discontinuous m
1021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (all conversions of oversampling ratio are done from 1 trigger) */
1022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)   /*!< ADC oversampling discontinuous m
1023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** mode (each conversion of oversampling ratio needs a trigger) */
1024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                        /*!< ADC oversampl
1032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of conversions data computed to result as oversampling conversion data (before potential shift
1033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (ADC_CFGR2_OVSR_0)                    /*!< ADC oversampl
1034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of conversions data computed to result as oversampling conversion data (before potential shift
1035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (ADC_CFGR2_OVSR_1)                    /*!< ADC oversampl
1036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of conversions data computed to result as oversampling conversion data (before potential shift
1037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of conversions data computed to result as oversampling conversion data (before potential shift
1039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2)                    /*!< ADC oversampl
1040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of conversions data computed to result as oversampling conversion data (before potential shift
1041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of conversions data computed to result as oversampling conversion data (before potential shift
1043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1) /*!< ADC oversampl
1044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of conversions data computed to result as oversampling conversion data (before potential shift
1045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 \
1046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR2_OVSR_0)                   /*!< ADC oversampl
1047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of conversions data computed to result as oversampling conversion data (before potential shift
1048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data right shift
1053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                        /*!< ADC oversampl
1056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of the ADC conversions data is not divided to result as oversampling conversion data) */
1057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (ADC_CFGR2_OVSS_0)                    /*!< ADC oversampl
ARM GAS  /tmp/ccrGR9oZ.s 			page 20


1058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of the ADC conversions data (after OVS ratio) is divided by 2 to result as oversampling conver
1059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (ADC_CFGR2_OVSS_1)                    /*!< ADC oversampl
1060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of the ADC conversions data (after OVS ratio) is divided by 4 to result as oversampling conver
1061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (ADC_CFGR2_OVSS_1 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of the ADC conversions data (after OVS ratio) is divided by 8 to result as oversampling conver
1063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (ADC_CFGR2_OVSS_2)                    /*!< ADC oversampl
1064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of the ADC conversions data (after OVS ratio) is divided by 16 to result as oversampling conve
1065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of the ADC conversions data (after OVS ratio) is divided by 32 to result as oversampling conve
1067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1) /*!< ADC oversampl
1068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of the ADC conversions data (after OVS ratio) is divided by 64 to result as oversampling conve
1069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 \
1070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            | ADC_CFGR2_OVSS_0)                   /*!< ADC oversampl
1071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of the ADC conversions data (after OVS ratio) is divided by 128 to result as oversampling conv
1072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3)                    /*!< ADC oversampl
1073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (sum of the ADC conversions data (after OVS ratio) is divided by 256 to result as oversampling conv
1074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
1079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR      ((int16_t)0x7FFF)  /* Temperature calculation error usin
1082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                  @ref __LL_ADC_CALC_TEMPERATURE(), 
1083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                  calibration parameters. This value
1084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                  (to fit on signed word or double w
1085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                  to an inconsistent temperature val
1086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         not timeout values.
1093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         above each literal definition.
1095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       not timeout values.                                                  */
1100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       STM32 series:                                                        */
1105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 82/fADC.                    */
1106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         cycles                                                             */
1112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         configuration.                                                     */
1114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
ARM GAS  /tmp/ccrGR9oZ.s 			page 21


1115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Unit: us                                                                   */
1120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)           /*!< Delay for ADC stabilization time
1121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                               regulator start-up time) */
1122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Unit: us                                                                   */
1127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)        /*!< Delay for internal voltage refer
1128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    time */
1129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Unit: us                                                                   */
1134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)        /*!< Delay for temperature sensor sta
1135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    (starting from temperature senso
1136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    @ref LL_ADC_SetCommonPathInterna
1137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)        /*!< Delay for temperature sensor buf
1138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    time (starting from ADC enable, 
1139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    @ref LL_ADC_Enable()) */
1140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  2UL)        /*!< Delay required between ADC end o
1149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    and ADC enable */
1150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Write a value in ADC register
1171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
ARM GAS  /tmp/ccrGR9oZ.s 			page 22


1172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __REG__ Register to be written
1173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
1175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Read a value in ADC register
1180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __REG__ Register to be read
1182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Register value
1183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Example:
1197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           will return decimal number "4".
1199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number is returned, either defined with number
1201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
ARM GAS  /tmp/ccrGR9oZ.s 			page 23


1229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
1232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                                       
1233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    (                                                                                               
1234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
1235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    )                                                                                               
1236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    :                                                                                               
1237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    ((((__CHANNEL__) & ADC_CHANNEL_0_BITFIELD) == ADC_CHANNEL_0_BITFIELD) ? (0UL) :                 
1238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     ((((__CHANNEL__) & ADC_CHANNEL_1_BITFIELD) == ADC_CHANNEL_1_BITFIELD) ? (1UL) :                
1239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****      ((((__CHANNEL__) & ADC_CHANNEL_2_BITFIELD) == ADC_CHANNEL_2_BITFIELD) ? (2UL) :               
1240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       ((((__CHANNEL__) & ADC_CHANNEL_3_BITFIELD) == ADC_CHANNEL_3_BITFIELD) ? (3UL) :              
1241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****        ((((__CHANNEL__) & ADC_CHANNEL_4_BITFIELD) == ADC_CHANNEL_4_BITFIELD) ? (4UL) :             
1242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         ((((__CHANNEL__) & ADC_CHANNEL_5_BITFIELD) == ADC_CHANNEL_5_BITFIELD) ? (5UL) :            
1243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****          ((((__CHANNEL__) & ADC_CHANNEL_6_BITFIELD) == ADC_CHANNEL_6_BITFIELD) ? (6UL) :           
1244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           ((((__CHANNEL__) & ADC_CHANNEL_7_BITFIELD) == ADC_CHANNEL_7_BITFIELD) ? (7UL) :          
1245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            ((((__CHANNEL__) & ADC_CHANNEL_8_BITFIELD) == ADC_CHANNEL_8_BITFIELD) ? (8UL) :         
1246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             ((((__CHANNEL__) & ADC_CHANNEL_9_BITFIELD) == ADC_CHANNEL_9_BITFIELD) ? (9UL) :        
1247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ((((__CHANNEL__) & ADC_CHANNEL_10_BITFIELD) == ADC_CHANNEL_10_BITFIELD) ? (10UL) :    
1248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****               ((((__CHANNEL__) & ADC_CHANNEL_11_BITFIELD) == ADC_CHANNEL_11_BITFIELD) ? (11UL) :   
1249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                ((((__CHANNEL__) & ADC_CHANNEL_12_BITFIELD) == ADC_CHANNEL_12_BITFIELD) ? (12UL) :  
1250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                 ((((__CHANNEL__) & ADC_CHANNEL_13_BITFIELD) == ADC_CHANNEL_13_BITFIELD) ? (13UL) : 
1251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                  ((((__CHANNEL__) & ADC_CHANNEL_14_BITFIELD) == ADC_CHANNEL_14_BITFIELD) ? (14UL) :
1252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                   ((((__CHANNEL__) & ADC_CHANNEL_15_BITFIELD) == ADC_CHANNEL_15_BITFIELD) ? (15UL) 
1253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                    ((((__CHANNEL__) & ADC_CHANNEL_16_BITFIELD) == ADC_CHANNEL_16_BITFIELD) ? (16UL)
1254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     ((((__CHANNEL__) & ADC_CHANNEL_17_BITFIELD) == ADC_CHANNEL_17_BITFIELD) ? (17UL
1255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                      ((((__CHANNEL__) & ADC_CHANNEL_18_BITFIELD) == ADC_CHANNEL_18_BITFIELD) ? (18U
1256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                       (0UL)))))))))))))))))))))
1257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from number in decimal format.
1261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Example:
1262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
ARM GAS  /tmp/ccrGR9oZ.s 			page 24


1286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__)))
1299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC internal channel:
1305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         returned from ADC registers,
1314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         parameters definitions of driver.
1317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
ARM GAS  /tmp/ccrGR9oZ.s 			page 25


1343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                       connected to a GPIO pin).
1346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a value defined from parameter definition of
1361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from ADC registers.
1364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
ARM GAS  /tmp/ccrGR9oZ.s 			page 26


1400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or a value from functions where a channel number is
1424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         returned from ADC registers,
1425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         parameters definitions of driver.
1428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                             \
1438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                             \
1439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT))
1440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example:
1447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
ARM GAS  /tmp/ccrGR9oZ.s 			page 27


1457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
1471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
1486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
1487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
1488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
1489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
1490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
1491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
1492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
1493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
1494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
1495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
1502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
1504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
1507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
1510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
ARM GAS  /tmp/ccrGR9oZ.s 			page 28


1514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         different of 12 bits.
1515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *            (< ADCx param >,
1521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *            );
1523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         different of 12 bits.
1538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *            );
1545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)          
1569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    & LL_ADC_AWD_THRESHOLD_LOW)
ARM GAS  /tmp/ccrGR9oZ.s 			page 29


1571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC common register instance
1581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (ADC1_COMMON)
1584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC common instance are disabled.
1588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
1590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are disabled.
1599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled.
1601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   LL_ADC_IsEnabled(ADC1)
1604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (refer to reference manual).
1611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
1617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))
1620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a resolution to another resolution.
1624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
1625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
1626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
ARM GAS  /tmp/ccrGR9oZ.s 			page 30


1628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
1640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
1641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
1642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (((__DATA__)                                                                 \
1643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))  \
1644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL))     \
1645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** )
1646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                       (unit: digital value).
1656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                       __ADC_DATA__,\
1665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
1666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** )
1669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         reference VrefInt.
1674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         connected to pin Vref+.
1678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
1681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal voltage reference VrefInt.
1684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
ARM GAS  /tmp/ccrGR9oZ.s 			page 31


1685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
1697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
1699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
1700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
1701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** )
1702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
1707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Calculation formula:
1709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
1710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
1711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
1712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
1713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
1714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
1715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
1716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
1717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
1718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
1719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
1720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  parameters are correct (address and data).
1721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
1722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
1723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  less accurate than calibrated values),
1724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
1725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
1731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
1732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor.
1734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
1737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
1738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
1739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
1740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                 sensor voltage has been measured.
1741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This parameter can be one of the following values:
ARM GAS  /tmp/ccrGR9oZ.s 			page 32


1742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         In case or error, value LL_ADC_TEMPERATURE_CALC_ERROR is returned (inconsistent tempera
1748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
1750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
1751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                   __ADC_RESOLUTION__)\
1752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** ((((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) != 0) ?        \
1753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
1754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
1755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
1756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
1757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
1758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
1759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
1760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
1761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
1762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   )                                                                                \
1763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   :                                                                                \
1764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((int32_t)LL_ADC_TEMPERATURE_CALC_ERROR)                                         \
1765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** )
1766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (refer to device datasheet).
1772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Calculation formula:
1773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                   (unit: digital value)
1777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  of the current device has characteristics in line with
1783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  datasheet typical values.
1784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
1794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                           (unit: uV/DegCelsius).
1798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                       On STM32G0, refer to device datasheet parameter "Avg_Slop
ARM GAS  /tmp/ccrGR9oZ.s 			page 33


1799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                           (at temperature and Vref+ defined in parameters below) (u
1801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                       On STM32G0, refer to datasheet parameter "V30" (correspon
1802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                           (see parameter above) is corresponding (unit: mV)
1804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) value (unit: mV)
1805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
1820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****               * 1000UL)                                                     \
1823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     -                                                                       \
1824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****               * 1000UL)                                                     \
1826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    )                                                                        \
1827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
1828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
1829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** )
1830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
ARM GAS  /tmp/ccrGR9oZ.s 			page 34


1856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   These ADC registers are data registers:
1857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example:
1862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
1873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC register address
1876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
1880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (void)(Register);
1881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Retrieve address of register DR */
1883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
1884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC instances
1892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
1897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
1899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
ARM GAS  /tmp/ccrGR9oZ.s 			page 35


1913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
1925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
1927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
1929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
1933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
1934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
1956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
1958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Legacy feature, useless on STM32G0 (ADC common clock low frequency
1962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             mode is automatically managed by ADC peripheral on STM32G0).
1963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             Function kept for legacy purpose.
1964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
1966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
1968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_SetCommonFrequencyMode
1969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
ARM GAS  /tmp/ccrGR9oZ.s 			page 36


1970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  CommonFrequencyMode This parameter can be one of the following values:
1972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
1973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
1974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
1975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonFrequencyMode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Commo
1977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_LFMEN, CommonFrequencyMode);
1979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Legacy feature, useless on STM32G0 (ADC common clock low frequency
1983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             mode is automatically managed by ADC peripheral on STM32G0).
1984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             Function kept for legacy purpose.
1985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_GetCommonFrequencyMode
1986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
1990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
1991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonFrequencyMode(ADC_Common_TypeDef *ADCxy_COMMON)
1993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_LFMEN));
1995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
1999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
2002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor stabilization time.
2009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
2010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
2012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a sampling time minimum value is required.
2016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
2017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
ARM GAS  /tmp/ccrGR9oZ.s 			page 37


2027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Add paths to the current configuration.
2044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
2045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor stabilization time.
2051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
2052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
2054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a sampling time minimum value is required.
2058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
2059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
2068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
ARM GAS  /tmp/ccrGR9oZ.s 			page 38


2084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Remove paths to the current configuration.
2086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
2087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
2098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
2116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
2136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
2140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
ARM GAS  /tmp/ccrGR9oZ.s 			page 39


2141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
2144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
2148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
2150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
2155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
2156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
2157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             cycle).
2162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Refer to reference manual.
2163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
2166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
2168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
2172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
2173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
2180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
2181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
2182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             cycle).
2187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Refer to reference manual.
2188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
2190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
2192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
ARM GAS  /tmp/ccrGR9oZ.s 			page 40


2198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         without having to perform a new calibration using
2199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on going on group regular.
2204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
2205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
2210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
2213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              CalibrationFactor);
2214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
2222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx)
2226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
2228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC resolution.
2232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
2238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
2249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC resolution.
2253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
ARM GAS  /tmp/ccrGR9oZ.s 			page 41


2255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
2256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
2266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
2276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
2285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
2292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           in order to reduce power consumption.
2308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           has been retrieved by user software.
2311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
ARM GAS  /tmp/ccrGR9oZ.s 			page 42


2312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           other conversion.
2313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           applications.
2317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           How to use this low power mode:
2318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC conversion start.
2329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC channel.
2341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           in order to reduce power consumption.
2365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           has been retrieved by user software.
2368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
ARM GAS  /tmp/ccrGR9oZ.s 			page 43


2369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           other conversion.
2370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           applications.
2374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           How to use this low power mode:
2375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC conversion start.
2386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC channel.
2398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC trigger frequency mode.
2414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC trigger frequency mode must be set to low frequency when
2415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a duration is exceeded before ADC conversion start trigger event
2416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (between ADC enable and ADC conversion start trigger event
2417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or between two ADC conversion start trigger event).
2418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Duration value: Refer to device datasheet, parameter "tIdle".
2419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   When ADC trigger frequency mode is set to low frequency,
2420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         some rearm cycles are inserted before performing ADC conversion
2421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         start, inducing a delay of 2 ADC clock cycles.
2422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Usage of ADC trigger frequency mode with ADC low power mode:
2423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Low power mode auto wait: Only the first ADC conversion
2424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           start trigger inserts the rearm delay.
2425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Low power mode auto power-off: ADC trigger frequency mode
ARM GAS  /tmp/ccrGR9oZ.s 			page 44


2426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           is discarded.
2427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_SetTriggerFrequencyMode
2431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  TriggerFrequencyMode This parameter can be one of the following values:
2433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetTriggerFrequencyMode(ADC_TypeDef *ADCx, uint32_t TriggerFrequencyMod
2438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_LFTRIG, TriggerFrequencyMode);
2440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC trigger frequency mode.
2444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_GetTriggerFrequencyMode
2445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetTriggerFrequencyMode(ADC_TypeDef *ADCx)
2451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_LFTRIG));
2453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Sampling time common to all channels.
2460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         converted:
2463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         setting).
2466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TS_temp, ...).
2468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
2470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is required.
2477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
2478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_SetSamplingTimeCommonChannels\n
ARM GAS  /tmp/ccrGR9oZ.s 			page 45


2483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_SetSamplingTimeCommonChannels
2484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTimeY
2500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                           uint32_t SamplingTime)
2501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
2503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
2504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              SamplingTime << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Sampling time common to all channels.
2512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this STM32 series.
2516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_GetSamplingTimeCommonChannels\n
2517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_GetSamplingTimeCommonChannels
2518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingT
2533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->SMPR, ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_S
2535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
ARM GAS  /tmp/ccrGR9oZ.s 			page 46


2540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
2544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
2548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         external interrupt line).
2550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
2551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         also set trigger polarity to rising edge
2552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
2554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
2556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC trigger frequency mode must be set
2557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         in function of frequency of ADC group regular conversion trigger.
2558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of function
2559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_SetTriggerFrequencyMode().
2560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO   (1)
2573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO   (1)
2575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO  (1)
2576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
2578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter not available on all devices
2579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
2584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         external interrupt line).
2590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal (SW start) or external, without detail
2592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (equivalent to
2594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
ARM GAS  /tmp/ccrGR9oZ.s 			page 47


2597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO   (1)
2606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO   (1)
2608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO  (1)
2609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
2611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter not available on all devices
2612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
2614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
2618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t shift_exten = ((trigger_source & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS -
2620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
2622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((trigger_source
2624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> shift_exten) & ADC_CFGR1_EXTSEL)
2625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> shift_exten) & ADC_CFGR1_EXTEN)
2626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****          );
2627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or external.
2632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
2641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN)) 
2643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
ARM GAS  /tmp/ccrGR9oZ.s 			page 48


2654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
2662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
2668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
2675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer configuration flexibility.
2681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         available:
2684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank
2686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           affectation to a channel are configurable.
2687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Refer to description of function
2688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are fixed by channel HW number.
2692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Refer to description of function
2693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
2701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Configurability This parameter can be one of the following values:
2707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
ARM GAS  /tmp/ccrGR9oZ.s 			page 49


2711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerConfigurable(ADC_TypeDef *ADCx, uint32_t Configurabilit
2712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD, Configurability);
2714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer configuration flexibility.
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         available:
2721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank
2723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           affectation to a channel are configurable.
2724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Refer to description of function
2725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are fixed by channel HW number.
2729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Refer to description of function
2730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerConfigurable(ADC_TypeDef *ADCx)
2738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD));
2740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
2744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are configurable.
2749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This function performs configuration of:
2750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are defined by channel number.
2759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This function performs configuration of:
2760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             highest channel number).
2767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Sequencer ranks are selected using
ARM GAS  /tmp/ccrGR9oZ.s 			page 50


2768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           To set scan direction differently, refer to function
2770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerScanDirection().
2771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
2774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
2783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerLength\n
2790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerLength\n
2791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerLength\n
2792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerLength\n
2793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerLength\n
2794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerLength\n
2795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerLength\n
2796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerLength
2797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
2799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
2810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, SequencerNbRanks);
2812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
2816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are configurable.
2821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This function retrieves:
2822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
ARM GAS  /tmp/ccrGR9oZ.s 			page 51


2825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are defined by channel number.
2831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This function retrieves:
2832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             highest channel number).
2839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *          To set scan direction differently, refer to function
2842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *          @ref LL_ADC_REG_SetSequencerScanDirection().
2843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
2846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerLength\n
2850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerLength\n
2851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerLength\n
2852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerLength\n
2853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerLength\n
2854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerLength\n
2855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerLength\n
2856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerLength
2857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
2869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO uint32_t channels_ranks = READ_BIT(ADCx->CHSELR, ADC_CHSELR_SQ_ALL);
2871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t sequencer_length = LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS;
2872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t rank_index;
2873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t rank_shifted;
2874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parse register for end of sequence identifier */
2876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Value "0xF0UL" corresponds to bitfield of sequencer 2nd rank
2877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            (ADC_CHSELR_SQ2), value "4" to length of end of sequence
2878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            identifier (0xF) */
2879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   for (rank_index = 0U; rank_index <= (28U - 4U); rank_index += 4U)
2880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
2881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     rank_shifted = (uint32_t)(0xF0UL << rank_index);
ARM GAS  /tmp/ccrGR9oZ.s 			page 52


2882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     if ((channels_ranks & rank_shifted) == rank_shifted)
2883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     {
2884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       sequencer_length = rank_shifted;
2885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       break;
2886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     }
2887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
2888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return sequencer_length;
2890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to mode not fully configurable,
2896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On some other STM32 series, this setting is not available and
2898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         the default scan direction is forward.
2899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
2907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
2911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
2918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
2924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to mode not fully configurable,
2926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         the default scan direction is forward.
2929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
2930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
2936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
2938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
ARM GAS  /tmp/ccrGR9oZ.s 			page 53


2939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number of ranks.
2944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
2945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
2959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number of ranks.
2965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
2972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
2974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
2978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         scan sequence rank.
2979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs configuration of:
2980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
2982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         affectation to a channel are configurable.
2985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
2991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
ARM GAS  /tmp/ccrGR9oZ.s 			page 54


2996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
3000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerRanks\n
3005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerRanks\n
3006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerRanks\n
3007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerRanks\n
3008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerRanks\n
3009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerRanks\n
3010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerRanks\n
3011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerRanks
3012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
ARM GAS  /tmp/ccrGR9oZ.s 			page 55


3053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
3055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CHSELR,
3058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK_SEQ) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
3060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****               << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
3061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         scan sequence rank.
3066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         affectation to a channel are configurable.
3069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           as parameter for another function.
3080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           process the returned value with the helper macro
3082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerRanks\n
3084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerRanks\n
3085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerRanks\n
3086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerRanks\n
3087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerRanks\n
3088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerRanks\n
3089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerRanks\n
3090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerRanks
3091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
ARM GAS  /tmp/ccrGR9oZ.s 			page 56


3110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
3122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
3123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
3124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
3133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->CHSELR,
3135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                               ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
3136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
3137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     ) << (ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
3138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                    );
3139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
3143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channel number.
3144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs:
3145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
3149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           configuration.
3150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
3153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
3165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
ARM GAS  /tmp/ccrGR9oZ.s 			page 57


3167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
3170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
3176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
3178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
3179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
3180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
3181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
3182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
3183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
3184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
3185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
3186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
3187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
3188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
3189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
3190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
3191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
3192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
3193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
3194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
3195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
3196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
ARM GAS  /tmp/ccrGR9oZ.s 			page 58


3224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
3227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
3235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channel number.
3236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs:
3237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
3241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           configuration.
3242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
3245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
3257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
3262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
3268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
3270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
3271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
3272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
3273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
3274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
3275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
3276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
3277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
3278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
3279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
3280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
ARM GAS  /tmp/ccrGR9oZ.s 			page 59


3281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
3282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
3283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
3284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
3285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
3286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
3287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
3288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
3319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
3327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channel number.
3328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs:
3329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
3333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           configuration.
3334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
3337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
ARM GAS  /tmp/ccrGR9oZ.s 			page 60


3338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
3349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
3354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
3360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
3362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
3363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
3364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
3365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
3366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
3367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
3368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
3369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
3370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
3371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
3372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
3373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
3374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
3375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
3376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
3377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
3378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
3379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
3380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  /tmp/ccrGR9oZ.s 			page 61


3395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
3411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
3419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channel number.
3420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs:
3421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
3422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
3427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
3436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be retrieved.
3442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
3444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
3445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
3446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
3447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
3448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
3449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
3450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
3451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
ARM GAS  /tmp/ccrGR9oZ.s 			page 62


3452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
3453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
3454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
3455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
3456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
3457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
3458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
3459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
3460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
3461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
3462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
3492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t channels_bitfield = (uint32_t)READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
3494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((((channels_bitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_CH
3496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
3497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
3498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
3499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
3500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
3501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
3502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
3503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
3504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
3505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
3506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
3507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
3508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
ARM GAS  /tmp/ccrGR9oZ.s 			page 63


3509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
3510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
3511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
3512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
3513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(ADC_CCR_VBATEN)
3514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_AD
3515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif /* ADC_CCR_VBATEN */
3516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****          );
3517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           conversions launched successively automatically.
3525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
3530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
3531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
3540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           conversions launched successively automatically.
3548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
3549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
3555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
3557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         mode:
3564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
ARM GAS  /tmp/ccrGR9oZ.s 			page 64


3566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions) is reached.
3567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions).
3571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         mode non-circular:
3574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
3582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
3583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
3584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
3594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         mode:
3601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions) is reached.
3604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions).
3608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         mode non-circular:
3611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
3617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
3618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
ARM GAS  /tmp/ccrGR9oZ.s 			page 65


3623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
3625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
3627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         data preserved or overwritten.
3632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         other devices without this feature have a behavior
3634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         equivalent to data overwritten.
3635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         overrun should be set to data overwritten.
3638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
3641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
3642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
3651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         data preserved or overwritten.
3656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
3657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
3663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
3665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
3669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
3672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
3673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
3677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Unit: ADC clock cycles.
3678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
ARM GAS  /tmp/ccrGR9oZ.s 			page 66


3680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
3681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         converted:
3682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
3683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
3684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         setting).
3685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
3686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TS_temp, ...).
3687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this STM32 series.
3690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
3691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
3692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is required.
3693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
3694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_SetChannelSamplingTime\n
3699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_SetChannelSamplingTime\n
3700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_SetChannelSamplingTime\n
3701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_SetChannelSamplingTime\n
3702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_SetChannelSamplingTime\n
3703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_SetChannelSamplingTime\n
3704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_SetChannelSamplingTime\n
3705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_SetChannelSamplingTime\n
3706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_SetChannelSamplingTime\n
3707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_SetChannelSamplingTime\n
3708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_SetChannelSamplingTime\n
3709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_SetChannelSamplingTime\n
3710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_SetChannelSamplingTime\n
3711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_SetChannelSamplingTime\n
3712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_SetChannelSamplingTime\n
3713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_SetChannelSamplingTime\n
3714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_SetChannelSamplingTime\n
3715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_SetChannelSamplingTime\n
3716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_SetChannelSamplingTime
3717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
ARM GAS  /tmp/ccrGR9oZ.s 			page 67


3737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
3751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
3755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
3756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
3757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             );
3758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
3762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Unit: ADC clock cycles.
3763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this STM32 series.
3768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_GetChannelSamplingTime\n
3769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_GetChannelSamplingTime\n
3770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_GetChannelSamplingTime\n
3771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_GetChannelSamplingTime\n
3772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_GetChannelSamplingTime\n
3773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_GetChannelSamplingTime\n
3774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_GetChannelSamplingTime\n
3775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_GetChannelSamplingTime\n
3776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_GetChannelSamplingTime\n
3777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_GetChannelSamplingTime\n
3778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_GetChannelSamplingTime\n
3779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_GetChannelSamplingTime\n
3780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_GetChannelSamplingTime\n
3781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_GetChannelSamplingTime\n
3782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_GetChannelSamplingTime\n
3783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_GetChannelSamplingTime\n
3784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_GetChannelSamplingTime\n
3785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_GetChannelSamplingTime\n
3786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_GetChannelSamplingTime
3787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
ARM GAS  /tmp/ccrGR9oZ.s 			page 68


3794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
3820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
3822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
3824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* and shift it to position 0.                                                 */
3825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
3826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                   >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NU
3827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                        + ADC_SMPR_SMPSEL0_BITOFFSET_POS)
3828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                       & 0x1FUL));
3829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
3831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
3832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2));
3833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
3837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
3840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
3841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
3845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
3846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on ADC group regular.
3847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
3848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled.
3849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
3850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
ARM GAS  /tmp/ccrGR9oZ.s 			page 69


3851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
3852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         instance:
3854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
3859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             be selected. For example:
3864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             groups regular and injected).
3867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
3872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
3875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
3876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
3877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
3878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
3879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
3880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
3886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
3892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
3895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
3896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
3897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
3898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
3907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
ARM GAS  /tmp/ccrGR9oZ.s 			page 70


3908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
3909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
3910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
3913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
  28              		.loc 2 3913 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
3914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
3915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
3916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
3917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO uint32_t *preg;
  32              		.loc 2 3918 3 view .LVU1
3919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   if (AWDy == LL_ADC_AWD1)
  33              		.loc 2 3920 3 view .LVU2
3913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
  34              		.loc 2 3913 1 is_stmt 0 view .LVU3
  35 0000 1300     		movs	r3, r2
  36              		.loc 2 3920 6 view .LVU4
  37 0002 094A     		ldr	r2, .L4
  38              	.LVL1:
3913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
  39              		.loc 2 3913 1 view .LVU5
  40 0004 10B5     		push	{r4, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 14, -4
  45              		.loc 2 3920 6 view .LVU6
  46 0006 9142     		cmp	r1, r2
  47 0008 08D1     		bne	.L2
3921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
3922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1, 0UL);
  48              		.loc 2 3922 5 is_stmt 1 view .LVU7
  49              		.loc 2 3922 10 is_stmt 0 view .LVU8
  50 000a 0C30     		adds	r0, r0, #12
  51              	.LVL2:
  52              	.L3:
3923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
3924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   else
3925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
3926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->AWD2CR,
3927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
3928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
3929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(*preg,
  53              		.loc 2 3930 3 is_stmt 1 view .LVU9
  54 000c 074C     		ldr	r4, .L4+4
  55 000e 0268     		ldr	r2, [r0]
  56 0010 0C40     		ands	r4, r1
  57 0012 A243     		bics	r2, r4
  58 0014 0B40     		ands	r3, r1
  59              	.LVL3:
ARM GAS  /tmp/ccrGR9oZ.s 			page 71


  60              		.loc 2 3930 3 is_stmt 0 view .LVU10
  61 0016 1A43     		orrs	r2, r3
  62 0018 0260     		str	r2, [r0]
3931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
3932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              AWDChannelGroup & AWDy);
3933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
  63              		.loc 2 3933 1 view .LVU11
  64              		@ sp needed
  65 001a 10BD     		pop	{r4, pc}
  66              	.LVL4:
  67              	.L2:
3926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
  68              		.loc 2 3926 5 is_stmt 1 view .LVU12
3926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
  69              		.loc 2 3926 12 is_stmt 0 view .LVU13
  70 001c 0424     		movs	r4, #4
  71 001e CA0C     		lsrs	r2, r1, #19
  72 0020 2240     		ands	r2, r4
  73 0022 A030     		adds	r0, r0, #160
  74              	.LVL5:
3926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
  75              		.loc 2 3926 12 view .LVU14
  76 0024 1018     		adds	r0, r2, r0
  77              	.LVL6:
3926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
  78              		.loc 2 3926 12 view .LVU15
  79 0026 F1E7     		b	.L3
  80              	.L5:
  81              		.align	2
  82              	.L4:
  83 0028 0000C07C 		.word	2092957696
  84 002c FFFFC77C 		.word	2093481983
  85              		.cfi_endproc
  86              	.LFE340:
  88              		.section	.text.LL_ADC_REG_IsConversionOngoing,"ax",%progbits
  89              		.align	1
  90              		.syntax unified
  91              		.code	16
  92              		.thumb_func
  94              	LL_ADC_REG_IsConversionOngoing:
  95              	.LVL7:
  96              	.LFB363:
3934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
3937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           as parameter for another function.
3945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           process the returned value with the helper macro
3947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
ARM GAS  /tmp/ccrGR9oZ.s 			page 72


3949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           one channel.
3950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         instance:
3952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
3957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             be selected. For example:
3962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             groups regular and injected).
3965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
3970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
3975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
3976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
3977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
3978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
3979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
3983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
3984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
3986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
3987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
3988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
3989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             by bitfield.
3990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
3997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
4000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
4001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
4002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
4003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
4004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
4005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
ARM GAS  /tmp/ccrGR9oZ.s 			page 73


4006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
4007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
4008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
4009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
4010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
4011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
4012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
4014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1,
4016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
4017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
4018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                 * ADC_AWD_CR12_REGOFFSETGAP_VAL));
4019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t analog_wd_monit_channels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
4021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* If "analog_wd_monit_channels" == 0, then the selected AWD is disabled       */
4023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
4024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
4025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* or a single channel.                                                     */
4026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   if (analog_wd_monit_channels != 0UL)
4027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
4028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
4029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     {
4030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_CFGR1_AWD1SGL) == 0UL)
4031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       {
4032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         analog_wd_monit_channels = ((analog_wd_monit_channels
4034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                      | (ADC_AWD_CR23_CHANNEL_MASK)
4035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     )
4036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     & (~(ADC_CFGR1_AWD1CH))
4037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                    );
4038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       }
4039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       else
4040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       {
4041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a single channel */
4042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
4043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     | (ADC_AWD2CR_AWD2CH_0 << (analog_wd_monit_channels >> ADC_CFGR
4044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                    );
4045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       }
4046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     }
4047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     else
4048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     {
4049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
4050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       {
4051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         analog_wd_monit_channels = (ADC_AWD_CR23_CHANNEL_MASK
4053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN)
4054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                    );
4055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       }
4056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       else
4057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       {
4058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a single channel */
4059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
4061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
4062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(analog_wd_monit_channels) << 
ARM GAS  /tmp/ccrGR9oZ.s 			page 74


4063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                    );
4064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       }
4065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     }
4066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
4067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return analog_wd_monit_channels;
4069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
4073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         high and low.
4074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
4075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
4076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
4079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
4080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         instance:
4081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
4084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
4086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             be selected. For example:
4091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             groups regular and injected).
4094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
4099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
4100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
4101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
4102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
4103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Examples:
4104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
4106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
4107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
4109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
4110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
4112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
4113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
4117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_ConfigAnalogWDThresholds\n
4118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_ConfigAnalogWDThresholds\n
4119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_ConfigAnalogWDThresholds\n
ARM GAS  /tmp/ccrGR9oZ.s 			page 75


4120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_ConfigAnalogWDThresholds\n
4121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_ConfigAnalogWDThresholds\n
4122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_ConfigAnalogWDThresholds
4123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
4129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
4130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
4133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
4134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
4136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
4137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* "AWDy".                                                                  */
4138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
4139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                  >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL))
4145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              );
4146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(*preg,
4148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
4149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
4150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
4154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         high or low.
4155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
4156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
4157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
4160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
4161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         instance:
4162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
4165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
4167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             be selected. For example:
4172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             groups regular and injected).
4175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
ARM GAS  /tmp/ccrGR9oZ.s 			page 76


4177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
4180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
4181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
4182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
4183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
4184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Examples:
4185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
4187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
4188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
4190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
4191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
4193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
4194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
4195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
4197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on ADC group regular.
4198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_SetAnalogWDThresholds\n
4199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_SetAnalogWDThresholds\n
4200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_SetAnalogWDThresholds\n
4201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_SetAnalogWDThresholds\n
4202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_SetAnalogWDThresholds\n
4203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_SetAnalogWDThresholds
4204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
4210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
4211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
4212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
4213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
4216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
4217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
4219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
4220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
4221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
4222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                  >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL)));
4228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(*preg,
4230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              AWDThresholdsHighLow,
4231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
4232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
ARM GAS  /tmp/ccrGR9oZ.s 			page 77


4234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
4236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
4237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         concatenated.
4238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
4239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
4240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using helper macro:
4241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
4242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
4245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_GetAnalogWDThresholds\n
4246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_GetAnalogWDThresholds\n
4247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_GetAnalogWDThresholds\n
4248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_GetAnalogWDThresholds\n
4249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_GetAnalogWDThresholds\n
4250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_GetAnalogWDThresholds
4251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
4257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
4258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
4259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
4260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
4263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
4265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
4266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
4267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
4268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                      >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                        >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1U
4274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
4276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_AWD1TR_LT1))
4277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
4278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_AWD1TR_LT1)));
4279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
4283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
4286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
4287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
ARM GAS  /tmp/ccrGR9oZ.s 			page 78


4291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
4294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
4295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
4297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
4302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
4304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
4308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
4309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
4315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
4317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
4321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on the selected ADC group.
4322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are done from 1 trigger)
4325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           needs a trigger)
4327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
4330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
4331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
4333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
4338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
4340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
4344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on the selected ADC group.
4345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are done from 1 trigger)
ARM GAS  /tmp/ccrGR9oZ.s 			page 79


4348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           needs a trigger)
4350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
4351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
4357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
4359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC oversampling
4363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
4364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ratio
4365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - shift
4366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
4369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
4370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
4371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
4373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
4382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
4394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
4396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
4400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
4401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
4403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
ARM GAS  /tmp/ccrGR9oZ.s 			page 80


4405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
4413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
4415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
4419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
4420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
4422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
4433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
4435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
4439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
4442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
4443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
4447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, there are three possibilities to enable
4448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         the voltage regulator:
4449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - by enabling it manually
4450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
4451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - by launching a calibration
4452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
4453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - by enabling the ADC
4454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
4455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
4456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
4457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
4458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet, parameter "tADCVREG_STUP".
4459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
4460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/ccrGR9oZ.s 			page 81


4462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
4464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
4468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADVREGEN);
4475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
4479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
4483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
4487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
4489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
4493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
4494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
4496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
4498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
4500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
4504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
4505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
4506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion start.
4507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
4508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
4514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
4515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
ARM GAS  /tmp/ccrGR9oZ.s 			page 82


4519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADEN);
4526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
4530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
4533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
4534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
4535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
4539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADDIS);
4546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
4550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
4554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
4556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
4558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
4560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
4564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
4565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
4567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
4569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
4571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
4575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
ARM GAS  /tmp/ccrGR9oZ.s 			page 83


4576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
4577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
4578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
4579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
4580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         On this STM32 series, ADC DMA transfer request should be disabled
4581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         during calibration:
4582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Calibration factor is available in data register
4583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and also transferred by DMA.
4584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
4585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
4586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         calibration.
4587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
4588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
4589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
4590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
4591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of usage of feature auto power-off:
4592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This mode must be disabled during calibration
4593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetLowPowerMode().
4594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
4598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
4602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADCAL);
4609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC calibration state.
4613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
4614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
4616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
4618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
4620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
4624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
4627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
4628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
4632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
ARM GAS  /tmp/ccrGR9oZ.s 			page 84


4633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
4634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
4635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           starts immediately.
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
4637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
4638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           following the ADC start conversion command.
4639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
4642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
4643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         without ADC disable command on going.
4644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
4645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
4649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADSTART);
4656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
4660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
4663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         without ADC disable command on going.
4664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
4665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
4669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADSTP);
4676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
4680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
4681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
4683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
4685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
  97              		.loc 2 4685 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccrGR9oZ.s 			page 85


 101              		@ link register save eliminated.
4686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 102              		.loc 2 4686 3 view .LVU17
 103              		.loc 2 4686 12 is_stmt 0 view .LVU18
 104 0000 8068     		ldr	r0, [r0, #8]
 105              	.LVL8:
4687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 106              		.loc 2 4687 1 view .LVU19
 107              		@ sp needed
4686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 108              		.loc 2 4686 74 view .LVU20
 109 0002 4007     		lsls	r0, r0, #29
 110 0004 C00F     		lsrs	r0, r0, #31
 111              		.loc 2 4687 1 view .LVU21
 112 0006 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE363:
 116              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 117              		.align	1
 118              		.weak	HAL_ADC_MspInit
 119              		.syntax unified
 120              		.code	16
 121              		.thumb_func
 123              	HAL_ADC_MspInit:
 124              	.LVL9:
 125              	.LFB422:
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @file    stm32g0xx_hal_adc.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           + Peripheral State functions
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          "stm32g0xx_hal_adc_ex.c".
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ******************************************************************************
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @attention
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * Copyright (c) 2018 STMicroelectronics.
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * All rights reserved.
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * in the root directory of this software component.
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ******************************************************************************
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   @verbatim
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ==============================================================================
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      ##### ADC peripheral features #####
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ==============================================================================
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   [..]
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  /tmp/ccrGR9oZ.s 			page 86


  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       analog watchdog or overrun events.
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Programmable sampling time (common to group of channels)
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) ADC calibration
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) ADC conversion of regular group.
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       Vdda or to an external voltage reference).
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      ##### How to use this driver #####
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ==============================================================================
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      ============================================================
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Enable the ADC interface
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              Caution: On STM32G0, ADC clock frequency max is 35MHz (refer
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       to device datasheet).
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       Therefore, ADC clock source from RCC and ADC clock
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       prescaler must be configured to remain below
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       this maximum frequency.
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    Four possible clock sources: synchronous clock from APB clock (same as ADC core 
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    or asynchronous clock from RCC level: SYSCLK, HSI16, PLLPCLK.
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              (+++) Example:
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    other device clock parameters configuration:
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory: core clock)
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) ADC pins configuration
ARM GAS  /tmp/ccrGR9oZ.s 			page 87


  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_GPIO_Init()
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Configure the NVIC for ADC
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               ADCx_IRQHandler().
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_DMA_Init().
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      ================================================================
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         using function HAL_ADC_Init().
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         monitored, thresholds, ...)
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      *** Execution of ADC conversions ***
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      ====================================
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         conversion accuracy
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         transfer by DMA.
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC conversion by polling:
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Start()
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Retrieve conversion results
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Stop()
ARM GAS  /tmp/ccrGR9oZ.s 			page 88


 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC conversion by interruption:
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 (this function must be implemented in user program)
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Retrieve conversion results
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 (these functions must be implemented in user program)
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 destination variable address.
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      *** Deinitialization of ADC ***
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      ============================================================
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Disable the ADC interface
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC clock disable
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              (+++) Example:
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    other device clock parameters configuration:
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) ADC pins configuration
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
ARM GAS  /tmp/ccrGR9oZ.s 			page 89


 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Deinitialize the DMA
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_DMA_Init().
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     *** Callback registration ***
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     =============================================
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Use Functions HAL_ADC_RegisterCallback()
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      to register an interrupt callback.
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Function HAL_ADC_RegisterCallback() allows to register following callbacks:
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      and a pointer to the user callback function.
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Use function HAL_ADC_UnRegisterCallback to reset a callback to the default
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      weak function.
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      and the Callback ID.
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      This function allows to reset following callbacks:
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      By default, after the HAL_ADC_Init() and when the state is HAL_ADC_STATE_RESET
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      examples HAL_ADC_ConvCpltCallback(), HAL_ADC_ErrorCallback().
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      reset to the legacy weak functions in the HAL_ADC_Init()/HAL_ADC_DeInit() only when
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  /tmp/ccrGR9oZ.s 			page 90


 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the HAL_ADC_Init()/HAL_ADC_DeInit()
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Callbacks can be registered/unregistered in HAL_ADC_STATE_READY state only.
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      in HAL_ADC_STATE_READY or HAL_ADC_STATE_RESET state,
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      using HAL_ADC_RegisterCallback() before calling HAL_ADC_DeInit()
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      or HAL_ADC_Init() function.
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      are set to the corresponding weak functions.
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   @endverbatim
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #include "stm32g0xx_hal.h"
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @addtogroup STM32G0xx_HAL_Driver
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC ADC
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief ADC HAL module driver
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Fixed timeout values for ADC calibration, enable settling time, disable  */
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* settling time.                                                           */
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Values defined to be higher than worst cases: low clock frequency,       */
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* maximum prescaler.                                                       */
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* prescaler 4, sampling time 7.5 ADC clock cycles, resolution 12 bits.     */
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Unit: ms                                                                 */
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_STOP_CONVERSION_TIMEOUT     (2UL)
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_CHANNEL_CONF_RDY_TIMEOUT    (1UL)
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Register CHSELR bits corresponding to ranks 2 to 8 .                     */
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_CHSELR_SQ2_TO_SQ8           (ADC_CHSELR_SQ2 | ADC_CHSELR_SQ3 | ADC_CHSELR_SQ4 | \
ARM GAS  /tmp/ccrGR9oZ.s 			page 91


 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ADC_CHSELR_SQ5 | ADC_CHSELR_SQ6 | ADC_CHSELR_SQ7 | ADC_CHS
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Exported functions ---------------------------------------------------------*/
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @verbatim
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) De-initialize the ADC.
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @endverbatim
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         in header of this file).
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         before HAL_ADC_Init().
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
ARM GAS  /tmp/ccrGR9oZ.s 			page 92


 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpCFGR2 = 0UL;
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check ADC handle */
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc == NULL)
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     return HAL_ERROR;
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_TRIGGER_FREQ(hadc->Init.TriggerFrequencyMode));
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ADC group regular discontinuous mode can be enabled only if              */
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* continuous mode is disabled.                                             */
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  /tmp/ccrGR9oZ.s 			page 93


 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Init the ADC Callback settings */
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Init the low level hardware */
 451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Init the low level hardware */
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC error code to none */
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Initialize Lock */
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Wait loop initialization and execution */
 471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       wait_loop_index--;
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update ADC state machine to error */
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
ARM GAS  /tmp/ccrGR9oZ.s 			page 94


 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      )
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - Internal voltage regulator (no parameter in HAL ADC init structure) */
 515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - Clock configuration                                                 */
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - ADC resolution                                                      */
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - Oversampling                                                        */
 518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - discontinuous mode                                                  */
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - LowPowerAutoWait mode                                               */
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - LowPowerAutoPowerOff mode                                           */
 521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - overrun                                                             */
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - external trigger to start conversion                                */
 524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - external trigger polarity                                           */
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - data alignment                                                      */
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - resolution                                                          */
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - scan direction                                                      */
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - DMA continuous request                                              */
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - Trigger frequency mode                                              */
 530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: If low power mode AutoPowerOff is enabled, ADC enable            */
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       and disable phases are performed automatically by hardware       */
 532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       (in this case, flag ADC_FLAG_RDY is not set).                    */
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Some parameters of this register are not reset, since they are set   */
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* by other functions and must be kept in case of usage of this         */
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* parameters):                                                         */
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*   - internal measurement paths (VrefInt, ...)                        */
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*     (set into HAL_ADC_ConfigChannel() )                              */
 542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmpCFGR1 |= (hadc->Init.Resolution                                          |
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
ARM GAS  /tmp/ccrGR9oZ.s 			page 95


 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    hadc->Init.DataAlign                                           |
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update setting of discontinuous mode only if continuous mode is disabled */
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (hadc->Init.DiscontinuousConvMode == ENABLE)
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (hadc->Init.ContinuousConvMode == DISABLE)
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Enable the selected ADC group regular discontinuous mode */
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           tmpCFGR1 |= ADC_CFGR1_DISCEN;
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* ADC regular group discontinuous was intended to be enabled,        */
 563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* but ADC regular group modes continuous and sequencer discontinuous */
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* cannot be enabled simultaneously.                                  */
 565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update ADC state machine to error */
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable external trigger if trigger selection is different of software  */
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* start.                                                                 */
 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: This configuration keeps the hardware feature of parameter       */
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       software start.                                                  */
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmpCFGR1 |= ((hadc->Init.ExternalTrigConv & ADC_CFGR1_EXTSEL) |
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC configuration register with previous settings */
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR1,
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_RES     |
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_DISCEN  |
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_AUTOFF  |
 590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_WAIT    |
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_CONT    |
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_OVRMOD  |
 593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_EXTSEL  |
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_EXTEN   |
 595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_ALIGN   |
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_SCANDIR |
 597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_DMACFG,
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  tmpCFGR1);
 599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmpCFGR2 |= ((hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
ARM GAS  /tmp/ccrGR9oZ.s 			page 96


 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                   );
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmpCFGR2 |= (ADC_CFGR2_OVSE |
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.Oversampling.Ratio         |
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     );
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2,
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_CKMODE |
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_LFTRIG |
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_OVSE   |
 618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_OVSR   |
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_OVSS   |
 620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_TOVS,
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  tmpCFGR2);
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Configuration of ADC clock mode: asynchronous clock source           */
 624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* with selectable prescaler.                                           */
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV1) &&
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         MODIFY_REG(ADC1_COMMON->CCR,
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CCR_PRESC,
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    hadc->Init.ClockPrescaler & ADC_CCR_PRESC);
 632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Channel sampling time configuration */
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_1, hadc->Init.S
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   Channels must be configured into each rank using function            */
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   "HAL_ADC_ConfigChannel()".                                           */
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set sequencer scan length by clearing ranks above rank 1             */
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* and do not modify rank 1 value.                                      */
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->Instance->CHSELR,
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC group regular sequencer:                                   */
ARM GAS  /tmp/ccrGR9oZ.s 			page 97


 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*  - Set ADC group regular sequencer to value memorized              */
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*    in HAL ADC handle                                               */
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*    Note: This value maybe be initialized at a unknown value,       */
 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*          therefore after the first call of "HAL_ADC_Init()",       */
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*          each rank corresponding to parameter "NbrOfConversion"    */
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*          must be set using "HAL_ADC_ConfigChannel()".              */
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*  - Set sequencer scan length by clearing ranks above maximum rank  */
 666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*    and do not modify other ranks value.                            */
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CHSELR,
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CHSELR_SQ_ALL,
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  (ADC_CHSELR_SQ2_TO_SQ8 << (((hadc->Init.NbrOfConversion - 1UL) * ADC_REGULAR_RANK_
 670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  | (hadc->ADCGroupRegularSequencerRanks)
 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 );
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* ensure of no potential problem of ADC core peripheral clocking.        */
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if(LL_ADC_GetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_1)
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       == hadc->Init.SamplingTimeCommon1)
 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to none */
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set the ADC state */
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC state machine to error */
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
 702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update ADC state machine to error */
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
ARM GAS  /tmp/ccrGR9oZ.s 			page 98


 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         common group is still running.
 724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
 725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
 726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check ADC handle */
 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc == NULL)
 733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     return HAL_ERROR;
 735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
 738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC state */
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Stop potential conversion on going, on regular group */
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
 745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable the ADC peripheral */
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Change ADC state */
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC internal voltage regulator */
 760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register IER */
 771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 |
 772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
ARM GAS  /tmp/ccrGR9oZ.s 			page 99


 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register ISR */
 777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 |
 778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CR */
 783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Bits ADC_CR_ADCAL, ADC_CR_ADSTP, ADC_CR_ADSTART are in access mode     */
 784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* "read-set": no direct reset applicable.                                */
 785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CFGR1 */
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->CFGR1 &= ~(ADC_CFGR1_AWD1CH   | ADC_CFGR1_AWD1EN  | ADC_CFGR1_AWD1SGL | ADC_CFGR1
 788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_EXTEN   | ADC_CFGR1_EXTSEL | ADC_CFGR1_ALIGN  | ADC_CFGR1_RE
 790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_SCANDIR | ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN);
 791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CFGR2 */
 793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: Update of ADC clock mode is conditioned to ADC state disabled:   */
 794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       already done above.                                              */
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->CFGR2 &= ~ADC_CFGR2_CKMODE;
 796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register SMPR */
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->SMPR &= ~ADC_SMPR_SMP1;
 799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset registers AWDxTR */
 801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD1TR &= ~(ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1);
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CHSELR */
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->CHSELR &= ~(ADC_CHSELR_SQ_ALL);
 807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register DR */
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable */
 810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CCR */
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC1_COMMON->CCR &= ~(ADC_CCR_VBATEN | ADC_CCR_TSEN | ADC_CCR_VREFEN | ADC_CCR_PRESC);
 813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Hard reset ADC peripheral ========== */
 815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Performs a global reset of the entire ADC peripheral: ADC state is     */
 816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* forced to a similar state after device power-on.                       */
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: A possible implementation is to add RCC bus reset of ADC         */
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* (for example, using macro                                              */
 819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  __HAL_RCC_ADC..._FORCE_RESET()/..._RELEASE_RESET()/..._CLK_DISABLE()) */
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* in function "void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)":         */
 821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
 823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* DeInit the low level hardware */
 828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
ARM GAS  /tmp/ccrGR9oZ.s 			page 100


 830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* DeInit the low level hardware */
 831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset HAL ADC handle variable */
 835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->ADCGroupRegularSequencerRanks = 0x00000000UL;
 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC error code to none */
 838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC state */
 841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
 846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
 851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
 852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 126              		.loc 1 854 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
 131              		.loc 1 856 3 view .LVU23
 857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****    */
 861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 132              		.loc 1 861 1 is_stmt 0 view .LVU24
 133              		@ sp needed
 134 0000 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE422:
 138              		.global	__aeabi_uidiv
 139              		.section	.text.HAL_ADC_Init,"ax",%progbits
 140              		.align	1
 141              		.global	HAL_ADC_Init
 142              		.syntax unified
 143              		.code	16
 144              		.thumb_func
 146              	HAL_ADC_Init:
 147              	.LVL10:
 148              	.LFB420:
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 149              		.loc 1 379 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccrGR9oZ.s 			page 101


 152              		@ frame_needed = 0, uses_anonymous_args = 0
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 153              		.loc 1 380 3 view .LVU26
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpCFGR2 = 0UL;
 154              		.loc 1 381 3 view .LVU27
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 155              		.loc 1 382 3 view .LVU28
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 156              		.loc 1 383 3 view .LVU29
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 157              		.loc 1 384 3 view .LVU30
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 158              		.loc 1 384 17 is_stmt 0 view .LVU31
 159 0000 0023     		movs	r3, #0
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 160              		.loc 1 379 1 view .LVU32
 161 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 162              	.LCFI1:
 163              		.cfi_def_cfa_offset 20
 164              		.cfi_offset 4, -20
 165              		.cfi_offset 5, -16
 166              		.cfi_offset 6, -12
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0004 85B0     		sub	sp, sp, #20
 170              	.LCFI2:
 171              		.cfi_def_cfa_offset 40
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 172              		.loc 1 379 1 view .LVU33
 173 0006 0400     		movs	r4, r0
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 174              		.loc 1 384 17 view .LVU34
 175 0008 0393     		str	r3, [sp, #12]
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 176              		.loc 1 387 3 is_stmt 1 view .LVU35
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 177              		.loc 1 387 6 is_stmt 0 view .LVU36
 178 000a 9842     		cmp	r0, r3
 179 000c 00D1     		bne	.LCB129
 180 000e F0E0     		b	.L9	@long jump
 181              	.LCB129:
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 182              		.loc 1 393 3 is_stmt 1 view .LVU37
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 183              		.loc 1 394 3 view .LVU38
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 184              		.loc 1 395 3 view .LVU39
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 185              		.loc 1 396 3 view .LVU40
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 186              		.loc 1 397 3 view .LVU41
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 187              		.loc 1 398 3 view .LVU42
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 188              		.loc 1 399 3 view .LVU43
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 189              		.loc 1 400 3 view .LVU44
ARM GAS  /tmp/ccrGR9oZ.s 			page 102


 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 190              		.loc 1 401 3 view .LVU45
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 191              		.loc 1 402 3 view .LVU46
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 192              		.loc 1 403 3 view .LVU47
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 193              		.loc 1 404 3 view .LVU48
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
 194              		.loc 1 405 3 view .LVU49
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
 195              		.loc 1 406 3 view .LVU50
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 196              		.loc 1 407 3 view .LVU51
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
 197              		.loc 1 408 3 view .LVU52
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 198              		.loc 1 409 3 view .LVU53
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 199              		.loc 1 411 5 view .LVU54
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 200              		.loc 1 412 5 view .LVU55
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 201              		.loc 1 413 5 view .LVU56
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 202              		.loc 1 415 3 view .LVU57
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 203              		.loc 1 417 3 view .LVU58
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 204              		.loc 1 419 5 view .LVU59
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 205              		.loc 1 421 5 view .LVU60
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 206              		.loc 1 423 7 view .LVU61
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 207              		.loc 1 429 3 view .LVU62
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 208              		.loc 1 433 3 view .LVU63
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 209              		.loc 1 433 11 is_stmt 0 view .LVU64
 210 0010 856D     		ldr	r5, [r0, #88]
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 211              		.loc 1 433 6 view .LVU65
 212 0012 9D42     		cmp	r5, r3
 213 0014 05D1     		bne	.L10
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 214              		.loc 1 454 5 is_stmt 1 view .LVU66
 215 0016 FFF7FEFF 		bl	HAL_ADC_MspInit
 216              	.LVL11:
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 217              		.loc 1 458 5 view .LVU67
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 218              		.loc 1 461 16 is_stmt 0 view .LVU68
 219 001a 2300     		movs	r3, r4
 220 001c 5433     		adds	r3, r3, #84
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 221              		.loc 1 458 5 view .LVU69
ARM GAS  /tmp/ccrGR9oZ.s 			page 103


 222 001e E565     		str	r5, [r4, #92]
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 223              		.loc 1 461 5 is_stmt 1 view .LVU70
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 224              		.loc 1 461 16 is_stmt 0 view .LVU71
 225 0020 1D70     		strb	r5, [r3]
 226              	.L10:
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 227              		.loc 1 464 3 is_stmt 1 view .LVU72
 228              	.LBB68:
 229              	.LBB69:
4499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 230              		.loc 2 4499 12 is_stmt 0 view .LVU73
 231 0022 8023     		movs	r3, #128
 232              	.LBE69:
 233              	.LBE68:
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 234              		.loc 1 464 7 view .LVU74
 235 0024 2568     		ldr	r5, [r4]
 236              	.LVL12:
 237              	.LBB71:
 238              	.LBI68:
4497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 239              		.loc 2 4497 26 is_stmt 1 view .LVU75
 240              	.LBB70:
4499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 241              		.loc 2 4499 3 view .LVU76
4499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 242              		.loc 2 4499 12 is_stmt 0 view .LVU77
 243 0026 5B05     		lsls	r3, r3, #21
 244 0028 AA68     		ldr	r2, [r5, #8]
4499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 245              		.loc 2 4499 76 view .LVU78
 246 002a 1A42     		tst	r2, r3
 247 002c 00D1     		bne	.LCB187
 248 002e A7E0     		b	.L11	@long jump
 249              	.LCB187:
 250              	.LVL13:
 251              	.L16:
4499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 252              		.loc 2 4499 76 view .LVU79
 253              	.LBE70:
 254              	.LBE71:
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 255              		.loc 1 484 3 is_stmt 1 view .LVU80
 256              	.LBB72:
 257              	.LBI72:
4497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 258              		.loc 2 4497 26 view .LVU81
 259              	.LBB73:
4499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 260              		.loc 2 4499 3 view .LVU82
 261              	.LBE73:
 262              	.LBE72:
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 263              		.loc 1 380 21 is_stmt 0 view .LVU83
 264 0030 0022     		movs	r2, #0
ARM GAS  /tmp/ccrGR9oZ.s 			page 104


 265              	.LBB76:
 266              	.LBB74:
4499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 267              		.loc 2 4499 12 view .LVU84
 268 0032 AB68     		ldr	r3, [r5, #8]
 269              	.LBE74:
 270              	.LBE76:
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 271              		.loc 1 380 21 view .LVU85
 272 0034 0192     		str	r2, [sp, #4]
 273              	.LBB77:
 274              	.LBB75:
4499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 275              		.loc 2 4499 76 view .LVU86
 276 0036 DB00     		lsls	r3, r3, #3
 277 0038 08D4     		bmi	.L12
 278              	.LVL14:
4499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 279              		.loc 2 4499 76 view .LVU87
 280              	.LBE75:
 281              	.LBE77:
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 282              		.loc 1 487 5 is_stmt 1 view .LVU88
 283 003a 1023     		movs	r3, #16
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 284              		.loc 1 490 5 is_stmt 0 view .LVU89
 285 003c 0126     		movs	r6, #1
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 286              		.loc 1 487 5 view .LVU90
 287 003e A26D     		ldr	r2, [r4, #88]
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 288              		.loc 1 492 20 view .LVU91
 289 0040 0196     		str	r6, [sp, #4]
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 290              		.loc 1 487 5 view .LVU92
 291 0042 1343     		orrs	r3, r2
 292 0044 A365     		str	r3, [r4, #88]
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 293              		.loc 1 490 5 is_stmt 1 view .LVU93
 294 0046 E36D     		ldr	r3, [r4, #92]
 295 0048 3343     		orrs	r3, r6
 296 004a E365     		str	r3, [r4, #92]
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 297              		.loc 1 492 5 view .LVU94
 298              	.LVL15:
 299              	.L12:
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 300              		.loc 1 499 3 view .LVU95
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 301              		.loc 1 499 40 is_stmt 0 view .LVU96
 302 004c 2800     		movs	r0, r5
 303 004e FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 304              	.LVL16:
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 305              		.loc 1 501 3 is_stmt 1 view .LVU97
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 306              		.loc 1 501 21 is_stmt 0 view .LVU98
ARM GAS  /tmp/ccrGR9oZ.s 			page 105


 307 0052 1022     		movs	r2, #16
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 308              		.loc 1 501 13 view .LVU99
 309 0054 A36D     		ldr	r3, [r4, #88]
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 310              		.loc 1 501 21 view .LVU100
 311 0056 1340     		ands	r3, r2
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 312              		.loc 1 501 6 view .LVU101
 313 0058 0343     		orrs	r3, r0
 314 005a 00D0     		beq	.LCB245
 315 005c CCE0     		b	.L17	@long jump
 316              	.LCB245:
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 317              		.loc 1 506 5 is_stmt 1 view .LVU102
 318 005e A26D     		ldr	r2, [r4, #88]
 319 0060 674B     		ldr	r3, .L43
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 320              		.loc 1 549 20 is_stmt 0 view .LVU103
 321 0062 2069     		ldr	r0, [r4, #16]
 322              	.LVL17:
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 323              		.loc 1 506 5 view .LVU104
 324 0064 1A40     		ands	r2, r3
 325 0066 0633     		adds	r3, r3, #6
 326 0068 FF33     		adds	r3, r3, #255
 327 006a 1343     		orrs	r3, r2
 328 006c A365     		str	r3, [r4, #88]
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 329              		.loc 1 533 5 is_stmt 1 view .LVU105
 330              	.LVL18:
 331              	.LBB78:
 332              	.LBI78:
4557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 333              		.loc 2 4557 26 view .LVU106
 334              	.LBB79:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 335              		.loc 2 4559 3 view .LVU107
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 336              		.loc 2 4559 12 is_stmt 0 view .LVU108
 337 006e AB68     		ldr	r3, [r5, #8]
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 338              		.loc 2 4559 68 view .LVU109
 339 0070 DB07     		lsls	r3, r3, #31
 340 0072 61D4     		bmi	.L19
 341              	.LVL19:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 342              		.loc 2 4559 68 view .LVU110
 343              	.LBE79:
 344              	.LBE78:
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 345              		.loc 1 543 7 is_stmt 1 view .LVU111
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    hadc->Init.DataAlign                                           |
 346              		.loc 1 547 20 is_stmt 0 view .LVU112
 347 0074 276B     		ldr	r7, [r4, #48]
 348 0076 E168     		ldr	r1, [r4, #12]
 349 0078 7B1E     		subs	r3, r7, #1
ARM GAS  /tmp/ccrGR9oZ.s 			page 106


 350 007a 9F41     		sbcs	r7, r7, r3
 351 007c A368     		ldr	r3, [r4, #8]
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 352              		.loc 1 546 20 view .LVU113
 353 007e A27E     		ldrb	r2, [r4, #26]
 354 0080 0B43     		orrs	r3, r1
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 355              		.loc 1 544 20 view .LVU114
 356 0082 217E     		ldrb	r1, [r4, #24]
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    hadc->Init.DataAlign                                           |
 357              		.loc 1 547 20 view .LVU115
 358 0084 3F03     		lsls	r7, r7, #12
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 359              		.loc 1 544 20 view .LVU116
 360 0086 8903     		lsls	r1, r1, #14
 361 0088 0B43     		orrs	r3, r1
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 362              		.loc 1 545 20 view .LVU117
 363 008a 617E     		ldrb	r1, [r4, #25]
 364 008c C903     		lsls	r1, r1, #15
 365 008e 0B43     		orrs	r3, r1
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 366              		.loc 1 546 20 view .LVU118
 367 0090 5103     		lsls	r1, r2, #13
 368 0092 0B43     		orrs	r3, r1
 369 0094 9C46     		mov	ip, r3
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 370              		.loc 1 549 20 view .LVU119
 371 0096 0028     		cmp	r0, #0
 372 0098 00DB     		blt	.LCB288
 373 009a 86E0     		b	.L32	@long jump
 374              	.LCB288:
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 375              		.loc 1 549 20 discriminator 1 view .LVU120
 376 009c 4100     		lsls	r1, r0, #1
 377 009e 4908     		lsrs	r1, r1, #1
 378              	.L20:
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 379              		.loc 1 550 20 view .LVU121
 380 00a0 2300     		movs	r3, r4
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 381              		.loc 1 549 83 view .LVU122
 382 00a2 6646     		mov	r6, ip
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 383              		.loc 1 550 20 view .LVU123
 384 00a4 2C33     		adds	r3, r3, #44
 385 00a6 1B78     		ldrb	r3, [r3]
 386 00a8 5B00     		lsls	r3, r3, #1
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 387              		.loc 1 549 83 view .LVU124
 388 00aa 3343     		orrs	r3, r6
 389 00ac 3B43     		orrs	r3, r7
 390 00ae 0B43     		orrs	r3, r1
 391              	.LVL20:
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 392              		.loc 1 553 7 is_stmt 1 view .LVU125
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
ARM GAS  /tmp/ccrGR9oZ.s 			page 107


 393              		.loc 1 553 21 is_stmt 0 view .LVU126
 394 00b0 611C     		adds	r1, r4, #1
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 395              		.loc 1 553 10 view .LVU127
 396 00b2 C97F     		ldrb	r1, [r1, #31]
 397 00b4 0129     		cmp	r1, #1
 398 00b6 05D1     		bne	.L23
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 399              		.loc 1 555 9 is_stmt 1 view .LVU128
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 400              		.loc 1 555 12 is_stmt 0 view .LVU129
 401 00b8 002A     		cmp	r2, #0
 402 00ba 00D0     		beq	.LCB309
 403 00bc 78E0     		b	.L22	@long jump
 404              	.LCB309:
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 405              		.loc 1 558 11 is_stmt 1 view .LVU130
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 406              		.loc 1 558 20 is_stmt 0 view .LVU131
 407 00be 8022     		movs	r2, #128
 408 00c0 5202     		lsls	r2, r2, #9
 409 00c2 1343     		orrs	r3, r2
 410              	.LVL21:
 411              	.L23:
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 412              		.loc 1 579 7 is_stmt 1 view .LVU132
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 413              		.loc 1 579 21 is_stmt 0 view .LVU133
 414 00c4 626A     		ldr	r2, [r4, #36]
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 415              		.loc 1 579 10 view .LVU134
 416 00c6 002A     		cmp	r2, #0
 417 00c8 05D0     		beq	.L24
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 418              		.loc 1 581 9 is_stmt 1 view .LVU135
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 419              		.loc 1 581 51 is_stmt 0 view .LVU136
 420 00ca E021     		movs	r1, #224
 421 00cc 4900     		lsls	r1, r1, #1
 422 00ce 0A40     		ands	r2, r1
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 423              		.loc 1 581 71 view .LVU137
 424 00d0 A16A     		ldr	r1, [r4, #40]
 425 00d2 0A43     		orrs	r2, r1
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 426              		.loc 1 581 18 view .LVU138
 427 00d4 1343     		orrs	r3, r2
 428              	.LVL22:
 429              	.L24:
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_RES     |
 430              		.loc 1 586 7 is_stmt 1 view .LVU139
 431 00d6 EA68     		ldr	r2, [r5, #12]
 432 00d8 4A49     		ldr	r1, .L43+4
 433 00da 0A40     		ands	r2, r1
 434 00dc 1343     		orrs	r3, r2
 435              	.LVL23:
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_RES     |
ARM GAS  /tmp/ccrGR9oZ.s 			page 108


 436              		.loc 1 586 7 is_stmt 0 view .LVU140
 437 00de EB60     		str	r3, [r5, #12]
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 438              		.loc 1 600 7 is_stmt 1 view .LVU141
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 439              		.loc 1 604 21 is_stmt 0 view .LVU142
 440 00e0 2300     		movs	r3, r4
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 441              		.loc 1 600 31 view .LVU143
 442 00e2 6268     		ldr	r2, [r4, #4]
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 443              		.loc 1 604 21 view .LVU144
 444 00e4 3C33     		adds	r3, r3, #60
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 445              		.loc 1 600 67 view .LVU145
 446 00e6 E16C     		ldr	r1, [r4, #76]
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 447              		.loc 1 604 10 view .LVU146
 448 00e8 1B78     		ldrb	r3, [r3]
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 449              		.loc 1 600 47 view .LVU147
 450 00ea 970F     		lsrs	r7, r2, #30
 451 00ec BF07     		lsls	r7, r7, #30
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 452              		.loc 1 604 10 view .LVU148
 453 00ee 9C46     		mov	ip, r3
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 454              		.loc 1 600 67 view .LVU149
 455 00f0 3943     		orrs	r1, r7
 456              	.LVL24:
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 457              		.loc 1 604 7 is_stmt 1 view .LVU150
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 458              		.loc 1 604 10 is_stmt 0 view .LVU151
 459 00f2 012B     		cmp	r3, #1
 460 00f4 08D1     		bne	.L25
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 461              		.loc 1 606 9 is_stmt 1 view .LVU152
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 462              		.loc 1 606 18 is_stmt 0 view .LVU153
 463 00f6 236C     		ldr	r3, [r4, #64]
 464 00f8 666C     		ldr	r6, [r4, #68]
 465 00fa 3343     		orrs	r3, r6
 466 00fc 0B43     		orrs	r3, r1
 467 00fe A16C     		ldr	r1, [r4, #72]
 468              	.LVL25:
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 469              		.loc 1 606 18 view .LVU154
 470 0100 0B43     		orrs	r3, r1
 471 0102 6146     		mov	r1, ip
 472 0104 3B43     		orrs	r3, r7
 473 0106 1943     		orrs	r1, r3
 474              	.LVL26:
 475              	.L25:
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_CKMODE |
 476              		.loc 1 614 7 is_stmt 1 view .LVU155
 477 0108 2B69     		ldr	r3, [r5, #16]
ARM GAS  /tmp/ccrGR9oZ.s 			page 109


 478 010a 3F4F     		ldr	r7, .L43+8
 479 010c 3B40     		ands	r3, r7
 480 010e 0B43     		orrs	r3, r1
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 481              		.loc 1 625 10 is_stmt 0 view .LVU156
 482 0110 8021     		movs	r1, #128
 483              	.LVL27:
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_CKMODE |
 484              		.loc 1 614 7 view .LVU157
 485 0112 2B61     		str	r3, [r5, #16]
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 486              		.loc 1 625 7 is_stmt 1 view .LVU158
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 487              		.loc 1 625 10 is_stmt 0 view .LVU159
 488 0114 5300     		lsls	r3, r2, #1
 489 0116 5B08     		lsrs	r3, r3, #1
 490 0118 C905     		lsls	r1, r1, #23
 491 011a 8B42     		cmp	r3, r1
 492 011c 0CD0     		beq	.L19
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 493              		.loc 1 626 69 view .LVU160
 494 011e 8023     		movs	r3, #128
 495 0120 1B06     		lsls	r3, r3, #24
 496 0122 9A42     		cmp	r2, r3
 497 0124 08D0     		beq	.L19
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CCR_PRESC,
 498              		.loc 1 629 9 is_stmt 1 view .LVU161
 499 0126 3949     		ldr	r1, .L43+12
 500 0128 394F     		ldr	r7, .L43+16
 501 012a 0B68     		ldr	r3, [r1]
 502 012c 3B40     		ands	r3, r7
 503 012e F027     		movs	r7, #240
 504 0130 BF03     		lsls	r7, r7, #14
 505 0132 3A40     		ands	r2, r7
 506 0134 1343     		orrs	r3, r2
 507 0136 0B60     		str	r3, [r1]
 508              	.LVL28:
 509              	.L19:
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 510              		.loc 1 636 5 view .LVU162
 511              	.LBB80:
 512              	.LBB81:
2502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 513              		.loc 2 2502 3 is_stmt 0 view .LVU163
 514 0138 0721     		movs	r1, #7
 515              	.LBE81:
 516              	.LBE80:
 517              	.LBB84:
 518              	.LBB85:
 519 013a 7027     		movs	r7, #112
 520              	.LBE85:
 521              	.LBE84:
 522              	.LBB87:
 523              	.LBB82:
 524 013c 6B69     		ldr	r3, [r5, #20]
 525              	.LBE82:
 526              	.LBE87:
ARM GAS  /tmp/ccrGR9oZ.s 			page 110


 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 527              		.loc 1 636 5 view .LVU164
 528 013e 626B     		ldr	r2, [r4, #52]
 529              	.LVL29:
 530              	.LBB88:
 531              	.LBI80:
2499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                           uint32_t SamplingTime)
 532              		.loc 2 2499 22 is_stmt 1 view .LVU165
 533              	.LBB83:
2502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 534              		.loc 2 2502 3 view .LVU166
 535 0140 8B43     		bics	r3, r1
 536 0142 1343     		orrs	r3, r2
 537 0144 6B61     		str	r3, [r5, #20]
 538              	.LVL30:
2502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 539              		.loc 2 2502 3 is_stmt 0 view .LVU167
 540              	.LBE83:
 541              	.LBE88:
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 542              		.loc 1 637 5 is_stmt 1 view .LVU168
 543              	.LBB89:
 544              	.LBI84:
2499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                           uint32_t SamplingTime)
 545              		.loc 2 2499 22 view .LVU169
 546              	.LBB86:
2502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 547              		.loc 2 2502 3 view .LVU170
 548 0146 6969     		ldr	r1, [r5, #20]
 549 0148 A36B     		ldr	r3, [r4, #56]
 550 014a B943     		bics	r1, r7
 551 014c 1B01     		lsls	r3, r3, #4
 552 014e 0B43     		orrs	r3, r1
 553 0150 6B61     		str	r3, [r5, #20]
 554              	.LVL31:
2502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 555              		.loc 2 2502 3 is_stmt 0 view .LVU171
 556              	.LBE86:
 557              	.LBE89:
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 558              		.loc 1 649 5 is_stmt 1 view .LVU172
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 559              		.loc 1 649 8 is_stmt 0 view .LVU173
 560 0152 0028     		cmp	r0, #0
 561 0154 34D1     		bne	.L27
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 562              		.loc 1 653 7 is_stmt 1 view .LVU174
 563 0156 1023     		movs	r3, #16
 564 0158 A96A     		ldr	r1, [r5, #40]
 565 015a 5B42     		rsbs	r3, r3, #0
 566              	.L42:
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CHSELR_SQ_ALL,
 567              		.loc 1 667 7 is_stmt 0 view .LVU175
 568 015c 0B43     		orrs	r3, r1
 569 015e AB62     		str	r3, [r5, #40]
 570              	.L28:
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       == hadc->Init.SamplingTimeCommon1)
ARM GAS  /tmp/ccrGR9oZ.s 			page 111


 571              		.loc 1 676 5 is_stmt 1 view .LVU176
 572              	.LVL32:
 573              	.LBB90:
 574              	.LBI90:
2532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 575              		.loc 2 2532 26 view .LVU177
 576              	.LBB91:
2534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 577              		.loc 2 2534 3 view .LVU178
2534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 578              		.loc 2 2534 22 is_stmt 0 view .LVU179
 579 0160 0721     		movs	r1, #7
 580 0162 6B69     		ldr	r3, [r5, #20]
 581              	.LVL33:
2534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 582              		.loc 2 2534 22 view .LVU180
 583 0164 0B40     		ands	r3, r1
 584              	.LBE91:
 585              	.LBE90:
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       == hadc->Init.SamplingTimeCommon1)
 586              		.loc 1 676 7 view .LVU181
 587 0166 9A42     		cmp	r2, r3
 588 0168 39D1     		bne	.L29
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 589              		.loc 1 680 7 is_stmt 1 view .LVU182
 590 016a 0023     		movs	r3, #0
 591 016c E365     		str	r3, [r4, #92]
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 592              		.loc 1 683 7 view .LVU183
 593 016e A26D     		ldr	r2, [r4, #88]
 594 0170 0333     		adds	r3, r3, #3
 595 0172 9A43     		bics	r2, r3
 596 0174 023B     		subs	r3, r3, #2
 597 0176 1343     		orrs	r3, r2
 598 0178 A365     		str	r3, [r4, #88]
 599              	.LVL34:
 600              	.L30:
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 601              		.loc 1 710 1 is_stmt 0 view .LVU184
 602 017a 0198     		ldr	r0, [sp, #4]
 603 017c 05B0     		add	sp, sp, #20
 604              		@ sp needed
 605              	.LVL35:
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 606              		.loc 1 710 1 view .LVU185
 607 017e F0BD     		pop	{r4, r5, r6, r7, pc}
 608              	.LVL36:
 609              	.L11:
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 610              		.loc 1 467 5 is_stmt 1 view .LVU186
 611              	.LBB92:
 612              	.LBI92:
4467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 613              		.loc 2 4467 22 view .LVU187
 614              	.LBB93:
4472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 615              		.loc 2 4472 3 view .LVU188
ARM GAS  /tmp/ccrGR9oZ.s 			page 112


 616 0180 AA68     		ldr	r2, [r5, #8]
 617 0182 2449     		ldr	r1, .L43+20
 618 0184 0A40     		ands	r2, r1
 619 0186 1343     		orrs	r3, r2
 620 0188 AB60     		str	r3, [r5, #8]
 621              	.LVL37:
4472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 622              		.loc 2 4472 3 is_stmt 0 view .LVU189
 623              	.LBE93:
 624              	.LBE92:
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 625              		.loc 1 474 5 is_stmt 1 view .LVU190
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 626              		.loc 1 474 89 is_stmt 0 view .LVU191
 627 018a 234B     		ldr	r3, .L43+24
 628 018c 2349     		ldr	r1, .L43+28
 629 018e 1868     		ldr	r0, [r3]
 630 0190 FFF7FEFF 		bl	__aeabi_uidiv
 631              	.LVL38:
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 632              		.loc 1 474 109 view .LVU192
 633 0194 0130     		adds	r0, r0, #1
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 634              		.loc 1 474 69 view .LVU193
 635 0196 4000     		lsls	r0, r0, #1
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 636              		.loc 1 474 21 view .LVU194
 637 0198 0390     		str	r0, [sp, #12]
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 638              		.loc 1 475 5 is_stmt 1 view .LVU195
 639              	.L14:
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 640              		.loc 1 475 28 view .LVU196
 641 019a 039B     		ldr	r3, [sp, #12]
 642 019c 002B     		cmp	r3, #0
 643 019e 00D1     		bne	.LCB553
 644 01a0 46E7     		b	.L16	@long jump
 645              	.LCB553:
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 646              		.loc 1 477 7 view .LVU197
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 647              		.loc 1 477 22 is_stmt 0 view .LVU198
 648 01a2 039B     		ldr	r3, [sp, #12]
 649 01a4 013B     		subs	r3, r3, #1
 650 01a6 0393     		str	r3, [sp, #12]
 651 01a8 F7E7     		b	.L14
 652              	.LVL39:
 653              	.L32:
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 654              		.loc 1 549 20 discriminator 2 view .LVU199
 655 01aa 8021     		movs	r1, #128
 656 01ac 8903     		lsls	r1, r1, #14
 657 01ae 77E7     		b	.L20
 658              	.LVL40:
 659              	.L22:
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 660              		.loc 1 567 11 is_stmt 1 view .LVU200
ARM GAS  /tmp/ccrGR9oZ.s 			page 113


 661 01b0 2022     		movs	r2, #32
 662 01b2 A76D     		ldr	r7, [r4, #88]
 663 01b4 3A43     		orrs	r2, r7
 664 01b6 A265     		str	r2, [r4, #88]
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 665              		.loc 1 570 11 view .LVU201
 666 01b8 E26D     		ldr	r2, [r4, #92]
 667 01ba 1143     		orrs	r1, r2
 668 01bc E165     		str	r1, [r4, #92]
 669 01be 81E7     		b	.L23
 670              	.LVL41:
 671              	.L27:
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 672              		.loc 1 656 10 view .LVU202
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 673              		.loc 1 656 13 is_stmt 0 view .LVU203
 674 01c0 8023     		movs	r3, #128
 675 01c2 9B03     		lsls	r3, r3, #14
 676 01c4 9842     		cmp	r0, r3
 677 01c6 CBD1     		bne	.L28
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CHSELR_SQ_ALL,
 678              		.loc 1 667 7 is_stmt 1 view .LVU204
 679 01c8 1C21     		movs	r1, #28
 680 01ca AB6A     		ldr	r3, [r5, #40]
 681 01cc E369     		ldr	r3, [r4, #28]
 682 01ce 013B     		subs	r3, r3, #1
 683 01d0 9B00     		lsls	r3, r3, #2
 684 01d2 0B40     		ands	r3, r1
 685 01d4 2C39     		subs	r1, r1, #44
 686 01d6 9940     		lsls	r1, r1, r3
 687 01d8 0B00     		movs	r3, r1
 688 01da 216E     		ldr	r1, [r4, #96]
 689 01dc BEE7     		b	.L42
 690              	.L29:
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 691              		.loc 1 690 7 view .LVU205
 692 01de 1223     		movs	r3, #18
 693 01e0 A26D     		ldr	r2, [r4, #88]
 694 01e2 9A43     		bics	r2, r3
 695 01e4 023B     		subs	r3, r3, #2
 696 01e6 1343     		orrs	r3, r2
 697 01e8 A365     		str	r3, [r4, #88]
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 698              		.loc 1 695 7 view .LVU206
 699 01ea 0123     		movs	r3, #1
 700 01ec E26D     		ldr	r2, [r4, #92]
 701 01ee 1343     		orrs	r3, r2
 702 01f0 E365     		str	r3, [r4, #92]
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 703              		.loc 1 697 7 view .LVU207
 704              	.LVL42:
 705              	.L9:
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 706              		.loc 1 389 12 is_stmt 0 view .LVU208
 707 01f2 0123     		movs	r3, #1
 708 01f4 0193     		str	r3, [sp, #4]
 709 01f6 C0E7     		b	.L30
ARM GAS  /tmp/ccrGR9oZ.s 			page 114


 710              	.LVL43:
 711              	.L17:
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 712              		.loc 1 704 5 is_stmt 1 view .LVU209
 713 01f8 A36D     		ldr	r3, [r4, #88]
 714 01fa 1A43     		orrs	r2, r3
 715 01fc A265     		str	r2, [r4, #88]
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 716              		.loc 1 706 5 view .LVU210
 717              	.LVL44:
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 718              		.loc 1 706 5 is_stmt 0 view .LVU211
 719 01fe F8E7     		b	.L9
 720              	.L44:
 721              		.align	2
 722              	.L43:
 723 0200 FDFEFFFF 		.word	-259
 724 0204 0102FEFF 		.word	-130559
 725 0208 02FCFF1F 		.word	536869890
 726 020c 08270140 		.word	1073817352
 727 0210 FFFFC3FF 		.word	-3932161
 728 0214 E8FFFF6F 		.word	1879048168
 729 0218 00000000 		.word	SystemCoreClock
 730 021c 400D0300 		.word	200000
 731              		.cfi_endproc
 732              	.LFE420:
 734              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 735              		.align	1
 736              		.weak	HAL_ADC_MspDeInit
 737              		.syntax unified
 738              		.code	16
 739              		.thumb_func
 741              	HAL_ADC_MspDeInit:
 742              	.LFB449:
 743              		.cfi_startproc
 862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
 866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
 869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 744              		.loc 1 870 13 is_stmt 1 view -0
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748              		@ sp needed
 749 0000 7047     		bx	lr
 750              		.cfi_endproc
 751              	.LFE449:
 753              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 754              		.align	1
 755              		.global	HAL_ADC_PollForConversion
 756              		.syntax unified
 757              		.code	16
ARM GAS  /tmp/ccrGR9oZ.s 			page 115


 758              		.thumb_func
 760              	HAL_ADC_PollForConversion:
 761              	.LVL45:
 762              	.LFB426:
 871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
 874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****    */
 878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This parameter can be one of the following values:
 888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
 901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                            pADC_CallbackTypeDef pCallback)
 904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (pCallback == NULL)
 908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update the error code */
 910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     return HAL_ERROR;
 913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     switch (CallbackID)
 918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
ARM GAS  /tmp/ccrGR9oZ.s 			page 116


 924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
 936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
 937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
 940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
 941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
 944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
 945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       default :
 956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update the error code */
 957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Return error status */
 960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         status = HAL_ERROR;
 961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     switch (CallbackID)
 967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       default :
 977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update the error code */
 978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Return error status */
ARM GAS  /tmp/ccrGR9oZ.s 			page 117


 981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         status = HAL_ERROR;
 982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
 986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update the error code */
 988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Return error status */
 991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     status =  HAL_ERROR;
 992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return status;
 995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
 999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This parameter can be one of the following values:
1004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0)
1022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     switch (CallbackID)
1024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
ARM GAS  /tmp/ccrGR9oZ.s 			page 118


1038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       default :
1062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update the error code */
1063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Return error status */
1066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         status =  HAL_ERROR;
1067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     switch (CallbackID)
1073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       default :
1083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update the error code */
1084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Return error status */
1087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         status =  HAL_ERROR;
1088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
1092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update the error code */
1094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
ARM GAS  /tmp/ccrGR9oZ.s 			page 119


1095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Return error status */
1097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     status =  HAL_ERROR;
1098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return status;
1101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
1107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *  @brief    ADC IO operation functions
1111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
1112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @verbatim
1113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
1114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       ##### IO operation functions #####
1115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
1116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Start conversion of regular group.
1118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Stop conversion of regular group.
1119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Poll for conversion event.
1121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Handle ADC interrupt request
1125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @endverbatim
1128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
1129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  /tmp/ccrGR9oZ.s 			page 120


1152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state                                                        */
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code */
1163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Reset all ADC error code fields */
1164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Process unlocked */
1171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* trigger event.                                                       */
1179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Start ADC group regular conversion */
1180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
1183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
1188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
1203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccrGR9oZ.s 			page 121


1209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 763              		.loc 1 1256 1 view -0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 8
 766              		@ frame_needed = 0, uses_anonymous_args = 0
1257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 767              		.loc 1 1257 3 view .LVU214
1258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_flag_end;
 768              		.loc 1 1258 3 view .LVU215
1259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  /tmp/ccrGR9oZ.s 			page 122


1260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 769              		.loc 1 1261 3 view .LVU216
1262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 770              		.loc 1 1264 3 view .LVU217
1256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 771              		.loc 1 1256 1 is_stmt 0 view .LVU218
 772 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 773              	.LCFI3:
 774              		.cfi_def_cfa_offset 32
 775              		.cfi_offset 0, -32
 776              		.cfi_offset 1, -28
 777              		.cfi_offset 2, -24
 778              		.cfi_offset 4, -20
 779              		.cfi_offset 5, -16
 780              		.cfi_offset 6, -12
 781              		.cfi_offset 7, -8
 782              		.cfi_offset 14, -4
 783              		.loc 1 1264 17 view .LVU219
 784 0002 4669     		ldr	r6, [r0, #20]
1256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 785              		.loc 1 1256 1 view .LVU220
 786 0004 0400     		movs	r4, r0
 787 0006 0F00     		movs	r7, r1
 788              		.loc 1 1264 6 view .LVU221
 789 0008 082E     		cmp	r6, #8
 790 000a 0AD0     		beq	.L47
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_flag_end = ADC_FLAG_EOS;
1267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* each conversion:                                                       */
1273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ADC_CFGR1_DMAEN) != 0UL)
 791              		.loc 1 1277 5 is_stmt 1 view .LVU222
 792              		.loc 1 1277 14 is_stmt 0 view .LVU223
 793 000c 0368     		ldr	r3, [r0]
 794              		.loc 1 1277 32 view .LVU224
 795 000e 0120     		movs	r0, #1
 796              	.LVL46:
 797              		.loc 1 1277 24 view .LVU225
 798 0010 DB68     		ldr	r3, [r3, #12]
1278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC state machine to error */
1280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       return HAL_ERROR;
1283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
ARM GAS  /tmp/ccrGR9oZ.s 			page 123


1285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_flag_end = (ADC_FLAG_EOC);
 799              		.loc 1 1286 20 view .LVU226
 800 0012 0426     		movs	r6, #4
1277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 801              		.loc 1 1277 8 view .LVU227
 802 0014 0342     		tst	r3, r0
 803 0016 04D0     		beq	.L47
1280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 804              		.loc 1 1280 7 is_stmt 1 view .LVU228
 805 0018 2023     		movs	r3, #32
 806 001a A26D     		ldr	r2, [r4, #88]
 807 001c 1343     		orrs	r3, r2
 808 001e A365     		str	r3, [r4, #88]
1282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 809              		.loc 1 1282 7 view .LVU229
 810              	.LVL47:
 811              	.L48:
1287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Get tick count */
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tickstart = HAL_GetTick();
1292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_flag_end) == 0UL)
1295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
1298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
1300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if ((hadc->Instance->ISR & tmp_flag_end) == 0UL)
1303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
1304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
1308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           return HAL_TIMEOUT;
1310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
1311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Update ADC state machine */
1316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
1322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      )
1323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
ARM GAS  /tmp/ccrGR9oZ.s 			page 124


1326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
1328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* ADSTART==0 (no conversion on going)                                  */
1329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Disable ADC end of single conversion interrupt on group regular */
1332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* HAL_Start_IT(), but is not disabled here because can be used       */
1334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* by overrun IRQ process below.                                      */
1335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
1336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC state */
1338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY,
1340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                           HAL_ADC_STATE_READY);
1341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
1343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Change ADC state to error state */
1345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
1348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Clear end of conversion flag of regular group if low power feature       */
1354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
1355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* until data register is read using function HAL_ADC_GetValue().           */
1356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.LowPowerAutoWait == DISABLE)
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear regular group conversion flag */
1359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
1360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
1363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
1364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 812              		.loc 1 1364 1 is_stmt 0 view .LVU230
 813              		@ sp needed
 814              	.LVL48:
 815              		.loc 1 1364 1 view .LVU231
 816 0020 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 817              	.LVL49:
 818              	.L47:
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 819              		.loc 1 1291 3 is_stmt 1 view .LVU232
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 820              		.loc 1 1291 15 is_stmt 0 view .LVU233
 821 0022 FFF7FEFF 		bl	HAL_GetTick
 822              	.LVL50:
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 823              		.loc 1 1291 15 view .LVU234
 824 0026 0190     		str	r0, [sp, #4]
 825              	.LVL51:
1294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
ARM GAS  /tmp/ccrGR9oZ.s 			page 125


 826              		.loc 1 1294 3 is_stmt 1 view .LVU235
 827              	.L63:
1294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 828              		.loc 1 1294 15 is_stmt 0 view .LVU236
 829 0028 2568     		ldr	r5, [r4]
 830              	.L50:
1294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 831              		.loc 1 1294 47 is_stmt 1 view .LVU237
1294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 832              		.loc 1 1294 25 is_stmt 0 view .LVU238
 833 002a 2B68     		ldr	r3, [r5]
1294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 834              		.loc 1 1294 47 view .LVU239
 835 002c 1E42     		tst	r6, r3
 836 002e 24D0     		beq	.L52
1316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 837              		.loc 1 1316 3 is_stmt 1 view .LVU240
 838 0030 8023     		movs	r3, #128
 839 0032 A26D     		ldr	r2, [r4, #88]
 840 0034 9B00     		lsls	r3, r3, #2
 841 0036 1343     		orrs	r3, r2
 842 0038 A365     		str	r3, [r4, #88]
1320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 843              		.loc 1 1320 3 view .LVU241
 844              	.LVL52:
 845              	.LBB96:
 846              	.LBI96:
2640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 847              		.loc 2 2640 26 view .LVU242
 848              	.LBB97:
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 849              		.loc 2 2642 3 view .LVU243
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 850              		.loc 2 2642 12 is_stmt 0 view .LVU244
 851 003a C023     		movs	r3, #192
 852 003c EA68     		ldr	r2, [r5, #12]
 853 003e 1B01     		lsls	r3, r3, #4
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 854              		.loc 2 2642 106 view .LVU245
 855 0040 1A42     		tst	r2, r3
 856 0042 15D1     		bne	.L53
 857              	.LVL53:
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 858              		.loc 2 2642 106 view .LVU246
 859              	.LBE97:
 860              	.LBE96:
1321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      )
 861              		.loc 1 1321 7 view .LVU247
 862 0044 A37E     		ldrb	r3, [r4, #26]
 863 0046 002B     		cmp	r3, #0
 864 0048 12D1     		bne	.L53
1325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 865              		.loc 1 1325 5 is_stmt 1 view .LVU248
1325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 866              		.loc 1 1325 9 is_stmt 0 view .LVU249
 867 004a 2B68     		ldr	r3, [r5]
1325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
ARM GAS  /tmp/ccrGR9oZ.s 			page 126


 868              		.loc 1 1325 8 view .LVU250
 869 004c 1B07     		lsls	r3, r3, #28
 870 004e 0FD5     		bpl	.L53
1329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 871              		.loc 1 1329 7 is_stmt 1 view .LVU251
1329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 872              		.loc 1 1329 11 is_stmt 0 view .LVU252
 873 0050 2800     		movs	r0, r5
 874 0052 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 875              	.LVL54:
1329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 876              		.loc 1 1329 10 discriminator 1 view .LVU253
 877 0056 0028     		cmp	r0, #0
 878 0058 27D1     		bne	.L54
1335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 879              		.loc 1 1335 9 is_stmt 1 view .LVU254
 880 005a 0C22     		movs	r2, #12
 881 005c 6B68     		ldr	r3, [r5, #4]
 882 005e 9343     		bics	r3, r2
 883 0060 6B60     		str	r3, [r5, #4]
1338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY,
 884              		.loc 1 1338 9 view .LVU255
 885 0062 A26D     		ldr	r2, [r4, #88]
 886 0064 174B     		ldr	r3, .L70
 887 0066 1A40     		ands	r2, r3
 888 0068 0433     		adds	r3, r3, #4
 889 006a FF33     		adds	r3, r3, #255
 890 006c 1343     		orrs	r3, r2
 891 006e A365     		str	r3, [r4, #88]
 892              	.L53:
1356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 893              		.loc 1 1356 3 view .LVU256
1356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 894              		.loc 1 1356 6 is_stmt 0 view .LVU257
 895 0070 237E     		ldrb	r3, [r4, #24]
 896 0072 002B     		cmp	r3, #0
 897 0074 22D0     		beq	.L55
 898              	.L56:
1363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 899              		.loc 1 1363 10 view .LVU258
 900 0076 0020     		movs	r0, #0
 901 0078 D2E7     		b	.L48
 902              	.L52:
1297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 903              		.loc 1 1297 5 is_stmt 1 view .LVU259
1297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 904              		.loc 1 1297 8 is_stmt 0 view .LVU260
 905 007a 7B1C     		adds	r3, r7, #1
 906 007c D5D0     		beq	.L50
1299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 907              		.loc 1 1299 7 is_stmt 1 view .LVU261
1299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 908              		.loc 1 1299 13 is_stmt 0 view .LVU262
 909 007e FFF7FEFF 		bl	HAL_GetTick
 910              	.LVL55:
1299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 911              		.loc 1 1299 27 discriminator 1 view .LVU263
ARM GAS  /tmp/ccrGR9oZ.s 			page 127


 912 0082 019B     		ldr	r3, [sp, #4]
 913 0084 C01A     		subs	r0, r0, r3
1299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 914              		.loc 1 1299 10 discriminator 1 view .LVU264
 915 0086 B842     		cmp	r0, r7
 916 0088 01D8     		bhi	.L51
1299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 917              		.loc 1 1299 51 discriminator 1 view .LVU265
 918 008a 002F     		cmp	r7, #0
 919 008c CCD1     		bne	.L63
 920              	.L51:
1302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 921              		.loc 1 1302 9 is_stmt 1 view .LVU266
1302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 922              		.loc 1 1302 34 is_stmt 0 view .LVU267
 923 008e 3200     		movs	r2, r6
1302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 924              		.loc 1 1302 18 view .LVU268
 925 0090 2368     		ldr	r3, [r4]
1302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 926              		.loc 1 1302 28 view .LVU269
 927 0092 1B68     		ldr	r3, [r3]
1302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 928              		.loc 1 1302 34 view .LVU270
 929 0094 1A40     		ands	r2, r3
1302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 930              		.loc 1 1302 12 view .LVU271
 931 0096 1E42     		tst	r6, r3
 932 0098 C6D1     		bne	.L63
1305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 933              		.loc 1 1305 11 is_stmt 1 view .LVU272
 934 009a 0423     		movs	r3, #4
 935 009c A16D     		ldr	r1, [r4, #88]
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 936              		.loc 1 1307 11 is_stmt 0 view .LVU273
 937 009e 5434     		adds	r4, r4, #84
 938              	.LVL56:
1305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 939              		.loc 1 1305 11 view .LVU274
 940 00a0 0B43     		orrs	r3, r1
 941 00a2 6360     		str	r3, [r4, #4]
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 942              		.loc 1 1307 11 is_stmt 1 view .LVU275
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 943              		.loc 1 1307 11 view .LVU276
1309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 944              		.loc 1 1309 18 is_stmt 0 view .LVU277
 945 00a4 0320     		movs	r0, #3
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 946              		.loc 1 1307 11 view .LVU278
 947 00a6 2270     		strb	r2, [r4]
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 948              		.loc 1 1307 11 is_stmt 1 view .LVU279
1309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 949              		.loc 1 1309 11 view .LVU280
1309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 950              		.loc 1 1309 18 is_stmt 0 view .LVU281
ARM GAS  /tmp/ccrGR9oZ.s 			page 128


 951 00a8 BAE7     		b	.L48
 952              	.LVL57:
 953              	.L54:
1345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 954              		.loc 1 1345 9 is_stmt 1 view .LVU282
 955 00aa 2023     		movs	r3, #32
 956 00ac A26D     		ldr	r2, [r4, #88]
 957 00ae 1343     		orrs	r3, r2
 958 00b0 A365     		str	r3, [r4, #88]
1348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 959              		.loc 1 1348 9 view .LVU283
 960 00b2 0123     		movs	r3, #1
 961 00b4 E26D     		ldr	r2, [r4, #92]
 962 00b6 1343     		orrs	r3, r2
 963 00b8 E365     		str	r3, [r4, #92]
 964 00ba D9E7     		b	.L53
 965              	.L55:
1359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 966              		.loc 1 1359 5 view .LVU284
 967 00bc 0C23     		movs	r3, #12
 968 00be 2B60     		str	r3, [r5]
 969 00c0 D9E7     		b	.L56
 970              	.L71:
 971 00c2 C046     		.align	2
 972              	.L70:
 973 00c4 FEFEFFFF 		.word	-258
 974              		.cfi_endproc
 975              	.LFE426:
 977              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 978              		.align	1
 979              		.global	HAL_ADC_PollForEvent
 980              		.syntax unified
 981              		.code	16
 982              		.thumb_func
 984              	HAL_ADC_PollForEvent:
 985              	.LVL58:
 986              	.LFB427:
1365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Poll for ADC event.
1368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param EventType the ADC event type.
1370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          This parameter can be one of the following values:
1371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                                       STM32 series)
1374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                                       STM32 series)
1376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                                       STM32 series)
1378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
ARM GAS  /tmp/ccrGR9oZ.s 			page 129


1385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 987              		.loc 1 1389 1 view -0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
1390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 991              		.loc 1 1390 3 view .LVU286
1391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 992              		.loc 1 1393 3 view .LVU287
1394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 993              		.loc 1 1394 3 view .LVU288
1395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Get tick count */
1397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tickstart = HAL_GetTick();
 994              		.loc 1 1397 3 view .LVU289
1389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 995              		.loc 1 1389 1 is_stmt 0 view .LVU290
 996 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 997              	.LCFI4:
 998              		.cfi_def_cfa_offset 24
 999              		.cfi_offset 3, -24
 1000              		.cfi_offset 4, -20
 1001              		.cfi_offset 5, -16
 1002              		.cfi_offset 6, -12
 1003              		.cfi_offset 7, -8
 1004              		.cfi_offset 14, -4
1389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 1005              		.loc 1 1389 1 view .LVU291
 1006 0002 0400     		movs	r4, r0
 1007 0004 0D00     		movs	r5, r1
 1008 0006 1600     		movs	r6, r2
 1009              		.loc 1 1397 15 view .LVU292
 1010 0008 FFF7FEFF 		bl	HAL_GetTick
 1011              	.LVL59:
 1012              		.loc 1 1397 15 view .LVU293
 1013 000c 0700     		movs	r7, r0
 1014              	.LVL60:
1398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check selected event flag */
1400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 1015              		.loc 1 1400 3 is_stmt 1 view .LVU294
 1016              	.L87:
 1017              		.loc 1 1400 10 is_stmt 0 view .LVU295
 1018 000e 2368     		ldr	r3, [r4]
 1019              	.L74:
 1020              		.loc 1 1400 46 is_stmt 1 view .LVU296
 1021              		.loc 1 1400 10 is_stmt 0 view .LVU297
 1022 0010 1A68     		ldr	r2, [r3]
 1023 0012 2A40     		ands	r2, r5
 1024              		.loc 1 1400 46 view .LVU298
 1025 0014 AA42     		cmp	r2, r5
ARM GAS  /tmp/ccrGR9oZ.s 			page 130


 1026 0016 15D1     		bne	.L77
1401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
1404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
1406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
1409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
1410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
1414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           return HAL_TIMEOUT;
1416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
1417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   switch (EventType)
 1027              		.loc 1 1421 3 is_stmt 1 view .LVU299
 1028 0018 8022     		movs	r2, #128
 1029 001a 5200     		lsls	r2, r2, #1
 1030 001c 9542     		cmp	r5, r2
 1031 001e 3CD0     		beq	.L78
 1032 0020 27D8     		bhi	.L79
 1033 0022 022D     		cmp	r5, #2
 1034 0024 2DD0     		beq	.L80
 1035 0026 802D     		cmp	r5, #128
 1036 0028 33D0     		beq	.L81
 1037              	.L82:
1422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* End Of Sampling event */
1424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       break;
1432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* For example:                                                             */
1438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     case ADC_AWD_EVENT:
1444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
ARM GAS  /tmp/ccrGR9oZ.s 			page 131


1446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
1449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       break;
1451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       break;
1461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       break;
1471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Overrun event */
1473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* considered as an error.                                                */
1476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* overrun ")                                                             */
1478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
 1038              		.loc 1 1478 7 view .LVU300
 1039              		.loc 1 1478 10 is_stmt 0 view .LVU301
 1040 002a 226B     		ldr	r2, [r4, #48]
 1041 002c 002A     		cmp	r2, #0
 1042 002e 38D1     		bne	.L85
1479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC state */
1481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 1043              		.loc 1 1481 9 is_stmt 1 view .LVU302
 1044 0030 8023     		movs	r3, #128
 1045 0032 A26D     		ldr	r2, [r4, #88]
 1046 0034 DB00     		lsls	r3, r3, #3
 1047 0036 1343     		orrs	r3, r2
 1048 0038 A365     		str	r3, [r4, #88]
1482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC error code to overrun */
1484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 1049              		.loc 1 1484 9 view .LVU303
 1050 003a 0223     		movs	r3, #2
 1051 003c E26D     		ldr	r2, [r4, #92]
 1052 003e 1343     		orrs	r3, r2
 1053 0040 E365     		str	r3, [r4, #92]
 1054 0042 24E0     		b	.L84
 1055              	.L77:
ARM GAS  /tmp/ccrGR9oZ.s 			page 132


1403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1056              		.loc 1 1403 5 view .LVU304
1403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1057              		.loc 1 1403 8 is_stmt 0 view .LVU305
 1058 0044 721C     		adds	r2, r6, #1
 1059 0046 E3D0     		beq	.L74
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1060              		.loc 1 1405 7 is_stmt 1 view .LVU306
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1061              		.loc 1 1405 13 is_stmt 0 view .LVU307
 1062 0048 FFF7FEFF 		bl	HAL_GetTick
 1063              	.LVL61:
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1064              		.loc 1 1405 27 discriminator 1 view .LVU308
 1065 004c C01B     		subs	r0, r0, r7
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1066              		.loc 1 1405 10 discriminator 1 view .LVU309
 1067 004e B042     		cmp	r0, r6
 1068 0050 01D8     		bhi	.L75
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1069              		.loc 1 1405 51 discriminator 1 view .LVU310
 1070 0052 002E     		cmp	r6, #0
 1071 0054 DBD1     		bne	.L87
 1072              	.L75:
1408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1073              		.loc 1 1408 9 is_stmt 1 view .LVU311
1408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1074              		.loc 1 1408 13 is_stmt 0 view .LVU312
 1075 0056 2368     		ldr	r3, [r4]
 1076 0058 1B68     		ldr	r3, [r3]
 1077 005a 2B40     		ands	r3, r5
1408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1078              		.loc 1 1408 12 view .LVU313
 1079 005c AB42     		cmp	r3, r5
 1080 005e D6D0     		beq	.L87
1411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1081              		.loc 1 1411 11 is_stmt 1 view .LVU314
 1082 0060 0423     		movs	r3, #4
 1083 0062 A26D     		ldr	r2, [r4, #88]
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 1084              		.loc 1 1415 18 is_stmt 0 view .LVU315
 1085 0064 0320     		movs	r0, #3
1411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1086              		.loc 1 1411 11 view .LVU316
 1087 0066 1343     		orrs	r3, r2
 1088 0068 A365     		str	r3, [r4, #88]
1413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1089              		.loc 1 1413 11 is_stmt 1 view .LVU317
1413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1090              		.loc 1 1413 11 view .LVU318
 1091 006a 0023     		movs	r3, #0
 1092 006c 5434     		adds	r4, r4, #84
 1093              	.LVL62:
1413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1094              		.loc 1 1413 11 is_stmt 0 view .LVU319
 1095 006e 2370     		strb	r3, [r4]
1413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  /tmp/ccrGR9oZ.s 			page 133


 1096              		.loc 1 1413 11 is_stmt 1 view .LVU320
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 1097              		.loc 1 1415 11 view .LVU321
 1098              	.LVL63:
 1099              	.L76:
1485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
1487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****            as OVR is cleared. */
1491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       break;
1494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
1497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
1498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1100              		.loc 1 1498 1 is_stmt 0 view .LVU322
 1101              		@ sp needed
 1102              	.LVL64:
 1103              	.LVL65:
 1104              	.LVL66:
 1105              		.loc 1 1498 1 view .LVU323
 1106 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1107              	.LVL67:
 1108              	.L79:
1421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1109              		.loc 1 1421 3 view .LVU324
 1110 0072 8022     		movs	r2, #128
 1111 0074 9200     		lsls	r2, r2, #2
 1112 0076 9542     		cmp	r5, r2
 1113 0078 D7D1     		bne	.L82
1465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1114              		.loc 1 1465 7 is_stmt 1 view .LVU325
 1115 007a 8022     		movs	r2, #128
 1116 007c A16D     		ldr	r1, [r4, #88]
 1117 007e D202     		lsls	r2, r2, #11
 1118 0080 02E0     		b	.L90
 1119              	.L80:
1426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1120              		.loc 1 1426 7 view .LVU326
 1121 0082 8022     		movs	r2, #128
 1122 0084 A16D     		ldr	r1, [r4, #88]
 1123 0086 1201     		lsls	r2, r2, #4
 1124              	.L90:
 1125 0088 0A43     		orrs	r2, r1
 1126 008a A265     		str	r2, [r4, #88]
1429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1127              		.loc 1 1429 7 view .LVU327
 1128 008c 1D60     		str	r5, [r3]
1431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1129              		.loc 1 1431 7 view .LVU328
 1130              	.L84:
1497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1131              		.loc 1 1497 10 is_stmt 0 view .LVU329
ARM GAS  /tmp/ccrGR9oZ.s 			page 134


 1132 008e 0020     		movs	r0, #0
 1133 0090 EEE7     		b	.L76
 1134              	.L81:
1445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1135              		.loc 1 1445 7 is_stmt 1 view .LVU330
 1136 0092 8022     		movs	r2, #128
 1137 0094 A16D     		ldr	r1, [r4, #88]
 1138 0096 5202     		lsls	r2, r2, #9
 1139 0098 F6E7     		b	.L90
 1140              	.L78:
1455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1141              		.loc 1 1455 7 view .LVU331
 1142 009a 8022     		movs	r2, #128
 1143 009c A16D     		ldr	r1, [r4, #88]
 1144 009e 9202     		lsls	r2, r2, #10
 1145 00a0 F2E7     		b	.L90
 1146              	.L85:
1491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 1147              		.loc 1 1491 9 view .LVU332
 1148 00a2 1022     		movs	r2, #16
 1149 00a4 1A60     		str	r2, [r3]
 1150 00a6 F2E7     		b	.L84
 1151              		.cfi_endproc
 1152              	.LFE427:
 1154              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1155              		.align	1
 1156              		.global	HAL_ADC_GetValue
 1157              		.syntax unified
 1158              		.code	16
 1159              		.thumb_func
 1161              	HAL_ADC_GetValue:
 1162              	.LVL68:
 1163              	.LFB432:
1499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         OVR overrun.
1505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         mode), the user must:
1512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccrGR9oZ.s 			page 135


1523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state                                                        */
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code */
1545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Reset all ADC error code fields */
1546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Process unlocked */
1553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
1566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         default:
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
1570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
ARM GAS  /tmp/ccrGR9oZ.s 			page 136


1580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* trigger event.                                                       */
1585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Start ADC group regular conversion */
1586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
1589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
1595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
1608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
ARM GAS  /tmp/ccrGR9oZ.s 			page 137


1637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
1650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param pData Destination Buffer address.
1653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
1654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
1655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
1657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Specific case for first call occurrence of this function (DMA transfer */
1669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* not activated and ADC disabled), DMA transfer must be activated        */
1670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* with ADC disabled.                                                     */
1671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ADC_CFGR1_DMAEN) == 0UL)
1672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
1674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Disable ADC */
1676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_Disable(hadc->Instance);
1677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable ADC DMA mode */
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->Instance->CFGR1 |= ADC_CFGR1_DMAEN;
1681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state                                                        */
1690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
ARM GAS  /tmp/ccrGR9oZ.s 			page 138


1694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code */
1697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Reset all ADC error code fields */
1698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set the DMA transfer complete callback */
1701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set the DMA half transfer complete callback */
1704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set the DMA error callback */
1707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
1711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* start (in case of SW start):                                         */
1712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
1714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* operations)                                                          */
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Process unlocked */
1719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Start the DMA channel */
1727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)
1728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* trigger event.                                                       */
1733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Start ADC group regular conversion */
1734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
1738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         ADC peripheral.
1749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
ARM GAS  /tmp/ccrGR9oZ.s 			page 139


1751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
1753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
1762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
1769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
1770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
1774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
1775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update ADC state machine to error */
1777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
1786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
1787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
1790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
1792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (void)ADC_Disable(hadc);
1794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
1806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN);
1807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
ARM GAS  /tmp/ccrGR9oZ.s 			page 140


1808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
1819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            to flag EOC.
1823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         To clear this flag, either use function:
1827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
1829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval ADC group regular conversion data
1832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
1834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1164              		.loc 1 1834 1 view -0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168              		@ link register save eliminated.
1835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1169              		.loc 1 1836 3 view .LVU334
1837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
1839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return ADC converted value */
1842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return hadc->Instance->DR;
 1170              		.loc 1 1842 3 view .LVU335
 1171              		.loc 1 1842 14 is_stmt 0 view .LVU336
 1172 0000 0368     		ldr	r3, [r0]
1843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1173              		.loc 1 1843 1 view .LVU337
 1174              		@ sp needed
1842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1175              		.loc 1 1842 24 view .LVU338
 1176 0002 186C     		ldr	r0, [r3, #64]
 1177              	.LVL69:
 1178              		.loc 1 1843 1 view .LVU339
 1179 0004 7047     		bx	lr
 1180              		.cfi_endproc
 1181              	.LFE432:
 1183              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1184              		.align	1
ARM GAS  /tmp/ccrGR9oZ.s 			page 141


 1185              		.weak	HAL_ADC_ConvCpltCallback
 1186              		.syntax unified
 1187              		.code	16
 1188              		.thumb_func
 1190              	HAL_ADC_ConvCpltCallback:
 1191              	.LFB451:
 1192              		.cfi_startproc
1844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
1847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
1849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
1851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
1853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
1854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
1855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
1859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
1861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
1862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
1864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
1865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* End Of Sampling callback */
1871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
1873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
1874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
1875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear regular group conversion flag */
1878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
1882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
1883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
1884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
1887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
1893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
ARM GAS  /tmp/ccrGR9oZ.s 			page 142


1894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* to disable interruption.                                               */
1895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
1897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        )
1898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
1901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
1903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
1904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
1906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
1907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
1908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
1909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
1910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
1911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC state */
1913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
1914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
1915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_READY);
1916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
1917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
1918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
1919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Change ADC state to error state */
1920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
1923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
1925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Conversion complete callback */
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
1930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
1931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       possibility to use:                                              */
1932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*        " if ( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "               */
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
1936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
1937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear regular group conversion flag */
1940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
1941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
1942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
1943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
1944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
1945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
1948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
1949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
ARM GAS  /tmp/ccrGR9oZ.s 			page 143


1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Level out of window 1 callback */
1954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
1956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
1957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
1958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
1962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
1965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
1966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
1968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Level out of window 2 callback */
1971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
1973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
1974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
1975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
1982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
1983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
1985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Level out of window 3 callback */
1988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
1990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
1991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
1992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
1999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* overrun ")                                                             */
2005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* error.                                                                 */
2007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
ARM GAS  /tmp/ccrGR9oZ.s 			page 144


2008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       overrun_error = 1UL;
2010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Check DMA configuration */
2014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (LL_ADC_REG_GetDMATransfer(hadc->Instance) != LL_ADC_REG_DMA_TRANSFER_NONE)
2015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         overrun_error = 1UL;
2017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (overrun_error == 1UL)
2021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Change ADC state to error state */
2023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to overrun */
2026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Error callback */
2029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC overrun flag */
2041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check channel configuration ready flag ========== */
2045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_CCRDY) == ADC_FLAG_CCRDY) && ((tmp_ier & ADC_IT_CCRDY) == ADC_IT_CCRDY))
2046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Channel configuration ready callback */
2048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADCEx_ChannelConfigReadyCallback(hadc);
2049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_CCRDY);
2052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
 1193              		.loc 1 2060 13 is_stmt 1 view -0
 1194              		@ args = 0, pretend = 0, frame = 0
 1195              		@ frame_needed = 0, uses_anonymous_args = 0
 1196              		@ link register save eliminated.
ARM GAS  /tmp/ccrGR9oZ.s 			page 145


 1197              		@ sp needed
 1198 0000 7047     		bx	lr
 1199              		.cfi_endproc
 1200              	.LFE451:
 1202              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1203              		.align	1
 1204              		.weak	HAL_ADC_ConvHalfCpltCallback
 1205              		.syntax unified
 1206              		.code	16
 1207              		.thumb_func
 1209              	HAL_ADC_ConvHalfCpltCallback:
 1210              	.LFB453:
 1211              		.cfi_startproc
2061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
2064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****    */
2068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
 1212              		.loc 1 2075 13 view -0
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              		@ link register save eliminated.
 1216              		@ sp needed
 1217 0000 7047     		bx	lr
 1218              		.cfi_endproc
 1219              	.LFE453:
 1221              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1222              		.align	1
 1223              		.syntax unified
 1224              		.code	16
 1225              		.thumb_func
 1227              	ADC_DMAHalfConvCplt:
 1228              	.LVL70:
 1229              	.LFB446:
2076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
2079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
ARM GAS  /tmp/ccrGR9oZ.s 			page 146


2089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
2094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
2116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
2124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief    Peripheral Control functions
2128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
2129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @verbatim
2130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
2131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              ##### Peripheral Control functions #####
2132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
2133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Configure channels on regular group
2135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Configure the analog watchdog
2136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @endverbatim
2138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
2139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         These internal paths can be disabled using function
ARM GAS  /tmp/ccrGR9oZ.s 			page 147


2146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         without resetting the ADC.
2152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param pConfig Structure of ADC channel assigned to ADC group regular.
2156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
2157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *pConfig)
2159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(pConfig->Channel));
2167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(pConfig->SamplingTime));
2168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK_SEQ_FIXED(pConfig->Rank));
2173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
2175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
2177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK(pConfig->Rank));
2179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
2182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  - Channel number                                                        */
2187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  - Channel sampling time                                                 */
2188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  - Management of internal measurement channels: VrefInt/TempSensor/Vbat  */
2189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Configure channel: depending on rank setting, add it or remove it from */
2192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* ADC sequencer.                                                         */
2193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* If sequencer set to not fully configurable with channel rank set to    */
2194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* none, remove the channel from the sequencer.                           */
2195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Otherwise (sequencer set to fully configurable or to to not fully      */
2196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* configurable with channel rank to be set), configure the selected      */
2197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* channel.                                                               */
2198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (pConfig->Rank != ADC_RANK_NONE)
2199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Regular sequence configuration */
2201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: ADC channel configuration requires few ADC clock cycles        */
2202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       to be ready. Processing of ADC settings in this function       */
ARM GAS  /tmp/ccrGR9oZ.s 			page 148


2203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       induce that a specific wait time is not necessary.             */
2204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       For more details on ADC channel configuration ready,           */
2205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       refer to function "LL_ADC_IsActiveFlag_CCRDY()".               */
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set the channel by enabling the corresponding bitfield.            */
2211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_REG_SetSequencerChAdd(hadc->Instance, pConfig->Channel);
2212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
2214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Sequencer set to fully configurable:                               */
2216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set the channel by entering it into the selected rank.             */
2217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Memorize the channel set into variable in HAL ADC handle */
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         MODIFY_REG(hadc->ADCGroupRegularSequencerRanks,
2220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
2221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel) << (pConfig->Rank & 0x1FUL));
2222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* If the selected rank is below ADC group regular sequencer length,  */
2224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* apply the configuration in ADC register.                           */
2225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Otherwise, configuration is not applied.                     */
2226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*       To apply it, parameter'NbrOfConversion' must be increased.   */
2227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (((pConfig->Rank >> 2UL) + 1UL) <= hadc->Init.NbrOfConversion)
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_REG_SetSequencerRanks(hadc->Instance, pConfig->Rank, pConfig->Channel);
2230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
2234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfig->Channel, pConfig->SamplingTime);
2235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Management of internal measurement channels: VrefInt/TempSensor/Vbat */
2237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* internal measurement paths enable: If internal channel selected,     */
2238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* enable dedicated internal buffers and path.                          */
2239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using         */
2240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       HAL_ADC_DeInit() or removing the channel from sequencer with   */
2241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       channel configuration parameter "Rank".                        */
2242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfig->Channel))
2243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* If the requested internal measurement path has already been enabled,   */
2247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* bypass the configuration processing.                                   */
2248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if ((pConfig->Channel == ADC_CHANNEL_TEMPSENSOR) &&
2249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
2250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Wait loop initialization and execution */
2256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000
ARM GAS  /tmp/ccrGR9oZ.s 			page 149


2260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
2261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
2262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             wait_loop_index--;
2263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
2264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else if ((pConfig->Channel == ADC_CHANNEL_VBAT)
2266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else if ((pConfig->Channel == ADC_CHANNEL_VREFINT) &&
2272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* nothing to do */
2280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Regular sequencer configuration */
2286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: Case of sequencer set to fully configurable:                   */
2287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       Sequencer rank cannot be disabled, only affected to            */
2288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       another channel.                                               */
2289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       To remove a rank, use parameter 'NbrOfConversion".             */
2290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Reset the channel by disabling the corresponding bitfield.         */
2295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_REG_SetSequencerChRem(hadc->Instance, pConfig->Channel);
2296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
2300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* paths.                                                                 */
2301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfig->Channel))
2302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (pConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
2306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_TEMPSENSOR & tmp_config_internal_cha
2309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else if (pConfig->Channel == ADC_CHANNEL_VBAT)
2311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VBAT & tmp_config_internal_channel);
2314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else if (pConfig->Channel == ADC_CHANNEL_VREFINT)
2316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
ARM GAS  /tmp/ccrGR9oZ.s 			page 150


2317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VREFINT & tmp_config_internal_channe
2319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* nothing to do */
2323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* parameters.                                                              */
2331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
2332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update ADC state machine to error */
2334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
2342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
2350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         the ADC.
2351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds can be modified
2355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         while ADC conversion is on going.
2356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
2357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
2358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
2359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
2360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
2361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
2362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param pAnalogWDGConfig Structure of ADC analog watchdog configuration
2364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
2365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, ADC_AnalogWDGConfTypeDef *pAnalo
2367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
2370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_low_threshold_shifted;
2371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t backup_setting_adc_enable_state = 0UL;
2372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccrGR9oZ.s 			page 151


2374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(pAnalogWDGConfig->WatchdogNumber));
2376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(pAnalogWDGConfig->WatchdogMode));
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(pAnalogWDGConfig->ITMode));
2378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (pAnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)
2380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(pAnalogWDGConfig->Channel));
2382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Verify thresholds range */
2385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
2388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
2389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
2390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, pAnalogWDGConfig->HighThreshold));
2391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, pAnalogWDGConfig->LowThreshold));
2392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
2394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
2396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->HighThreshold));
2397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->LowThreshold));
2398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
2401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* conversion on going on ADC group regular:                                */
2405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
2406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Analog watchdog configuration */
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Constraint of ADC on this STM32 series: ADC must be disable
2412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          to modify bitfields of register ADC_CFGR1 */
2413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
2414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         backup_setting_adc_enable_state = 1UL;
2416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmp_hal_status = ADC_Disable(hadc);
2417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
2420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
2421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*    channels.                                                         */
2422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       switch (pAnalogWDGConfig->WatchdogMode)
2423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
2425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1,
2426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
2427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                                                           LL_ADC_GROUP_REGULAR));
2428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
ARM GAS  /tmp/ccrGR9oZ.s 			page 152


2431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
2432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
2435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
2436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (backup_setting_adc_enable_state == 1UL)
2440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (tmp_hal_status == HAL_OK)
2442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           tmp_hal_status = ADC_Enable(hadc);
2444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
2448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
2451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
2454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
2455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
2457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (pAnalogWDGConfig->ITMode == ENABLE)
2458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
2460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
2462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
2464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
2467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       switch (pAnalogWDGConfig->WatchdogMode)
2470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
2472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
2473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
2474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << __LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig
2477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
2478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           else
2479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << __LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig
2481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
2482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, 
2486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                           pAnalogWDGConfig->WatchdogNumber, 
2487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                           LL_ADC_AWD_ALL_CHANNELS_REG);
ARM GAS  /tmp/ccrGR9oZ.s 			page 153


2488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
2491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, LL_ADC_
2492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
2498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
2501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
2504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
2505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
2507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (pAnalogWDGConfig->ITMode == ENABLE)
2508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
2510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
2514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
2517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
2518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
2520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
2523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
2526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
2527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
2529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (pAnalogWDGConfig->ITMode == ENABLE)
2530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
2532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
2536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Analog watchdog thresholds configuration */
2543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
ARM GAS  /tmp/ccrGR9oZ.s 			page 154


2545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
2546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
2547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* are set to 0.                                                        */
2548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_high_threshold_shifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Hig
2549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
2550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
2552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
2553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* No need to shift the offset with respect to the selected ADC resolution: */
2555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
2556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* are set to 0.                                                        */
2557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_high_threshold_shifted = pAnalogWDGConfig->HighThreshold;
2558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = pAnalogWDGConfig->LowThreshold;
2559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC analog watchdog thresholds value of both thresholds high and low */
2562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, tmp_awd_high_th
2563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                   tmp_awd_low_threshold_shifted);
2564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
2568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
2573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
2576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
2577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
2578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @verbatim
2579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
2580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
2581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
2582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
2583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
2584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     peripheral.
2585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Check the ADC state
2586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Check the ADC error code
2587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @endverbatim
2589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
2590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Return the ADC handle state.
2594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
2595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         compared with states bits.
2596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         For example:
2597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
2598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
2599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
2601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
ARM GAS  /tmp/ccrGR9oZ.s 			page 155


2602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef *hadc)
2603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return ADC handle state */
2608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return hadc->State;
2609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Return the ADC error code.
2613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
2615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
2617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return hadc->ErrorCode;
2622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
2626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
2630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
2633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
2634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Stop ADC conversion.
2638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         stopped to disable the ADC.
2640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  hadc ADC handle
2641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
2642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc)
2644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
2646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Verification if ADC is not already stopped on regular group to bypass    */
2651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* this function if not needed.                                             */
2652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
2653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Stop potential conversion on going on regular group */
2655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
2656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
2657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Stop ADC group regular conversion */
ARM GAS  /tmp/ccrGR9oZ.s 			page 156


2659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_REG_StopConversion(hadc->Instance);
2660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
2663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Get tick count */
2664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tickstart = HAL_GetTick();
2665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADSTART) != 0UL)
2667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
2669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
2671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADSTART) != 0UL)
2672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update ADC state machine to error */
2674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           return HAL_ERROR;
2680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return HAL status */
2687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Enable the selected ADC.
2692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
2693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
2694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
2696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
2698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
2700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
2703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
2704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
2705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
2706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_ADDIS | ADC_CR
2710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC state machine to error */
2712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
2715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
ARM GAS  /tmp/ccrGR9oZ.s 			page 157


2716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       return HAL_ERROR;
2718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable the ADC peripheral */
2721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
2722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) & LL_ADC_PATH_INT
2724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         != 0UL)
2725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Delay for temperature sensor buffer stabilization time */
2727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Wait loop initialization and execution */
2728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: Variable divided by 2 to compensate partially              */
2729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       CPU processing cycles, scaling in us split to not          */
2730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       exceed 32 bits register capacity and handle low frequency. */
2731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US / 10UL) 
2732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                          * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
2733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       while (wait_loop_index != 0UL)
2734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         wait_loop_index--;
2736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
2740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* performed automatically by hardware and flag ADC ready is not set.     */
2741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Wait for ADC effectively enabled */
2744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tickstart = HAL_GetTick();
2745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
2747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
2749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             has been cleared (after a calibration), ADEN bit is reset by the
2750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             calibration logic.
2751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             The workaround is to continue setting ADEN until ADRDY is becomes 1.
2752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
2753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             4 ADC clock cycle duration */
2754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Test of ADC enabled required due to hardware constraint to     */
2755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*       not enable ADC if already enabled.                             */
2756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_Enable(hadc->Instance);
2759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
2762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* New check to avoid false timeout detection in case of preemption */
2764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
2765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
2766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             /* Update ADC state machine to error */
2767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             return HAL_ERROR;
ARM GAS  /tmp/ccrGR9oZ.s 			page 158


2773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
2774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return HAL status */
2780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
2781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Disable the selected ADC.
2785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         stopped.
2787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
2789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
2791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
2793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
2794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
2796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
2797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       disabled.                                                          */
2798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
2799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
2800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      )
2801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
2803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
2804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Disable the ADC peripheral */
2806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
2807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
2808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC state machine to error */
2812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
2815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       return HAL_ERROR;
2818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
2821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Get tick count */
2822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tickstart = HAL_GetTick();
2823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
2825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
2827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
2829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
ARM GAS  /tmp/ccrGR9oZ.s 			page 159


2830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update ADC state machine to error */
2832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           return HAL_ERROR;
2838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return HAL status */
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
2845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
2849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
2853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
2859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
2861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* to disable interruption.                                               */
2866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
2868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        )
2869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
2871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
2874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
2878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
2879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
2880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
2881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC state */
2884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
2885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
2886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_READY);
ARM GAS  /tmp/ccrGR9oZ.s 			page 160


2887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Change ADC state to error state */
2891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Conversion complete callback */
2900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
2907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
2909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
2911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Call ADC DMA error callback */
2920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
2927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
2931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1230              		.loc 1 2931 1 view -0
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 0
 1233              		@ frame_needed = 0, uses_anonymous_args = 0
2932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1234              		.loc 1 2933 3 view .LVU343
2934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Half conversion callback */
2936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
2938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
ARM GAS  /tmp/ccrGR9oZ.s 			page 161


2939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1235              		.loc 1 2939 3 view .LVU344
2931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1236              		.loc 1 2931 1 is_stmt 0 view .LVU345
 1237 0000 10B5     		push	{r4, lr}
 1238              	.LCFI5:
 1239              		.cfi_def_cfa_offset 8
 1240              		.cfi_offset 4, -8
 1241              		.cfi_offset 14, -4
 1242              		.loc 1 2939 3 view .LVU346
 1243 0002 806A     		ldr	r0, [r0, #40]
 1244              	.LVL71:
 1245              		.loc 1 2939 3 view .LVU347
 1246 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1247              	.LVL72:
2940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1248              		.loc 1 2941 1 view .LVU348
 1249              		@ sp needed
 1250 0008 10BD     		pop	{r4, pc}
 1251              		.cfi_endproc
 1252              	.LFE446:
 1254              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1255              		.align	1
 1256              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1257              		.syntax unified
 1258              		.code	16
 1259              		.thumb_func
 1261              	HAL_ADC_LevelOutOfWindowCallback:
 1262              	.LFB455:
 1263              		.cfi_startproc
2090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1264              		.loc 1 2090 13 is_stmt 1 view -0
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267              		@ link register save eliminated.
 1268              		@ sp needed
 1269 0000 7047     		bx	lr
 1270              		.cfi_endproc
 1271              	.LFE455:
 1273              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1274              		.align	1
 1275              		.weak	HAL_ADC_ErrorCallback
 1276              		.syntax unified
 1277              		.code	16
 1278              		.thumb_func
 1280              	HAL_ADC_ErrorCallback:
 1281              	.LFB457:
 1282              		.cfi_startproc
2112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1283              		.loc 1 2112 13 view -0
 1284              		@ args = 0, pretend = 0, frame = 0
 1285              		@ frame_needed = 0, uses_anonymous_args = 0
 1286              		@ link register save eliminated.
 1287              		@ sp needed
 1288 0000 7047     		bx	lr
 1289              		.cfi_endproc
ARM GAS  /tmp/ccrGR9oZ.s 			page 162


 1290              	.LFE457:
 1292              		.section	.text.ADC_DMAError,"ax",%progbits
 1293              		.align	1
 1294              		.syntax unified
 1295              		.code	16
 1296              		.thumb_func
 1298              	ADC_DMAError:
 1299              	.LVL73:
 1300              	.LFB447:
2942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  DMA error callback.
2945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)
2949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1301              		.loc 1 2949 1 view -0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1305              		.loc 1 2951 3 view .LVU352
2952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC state */
2954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1306              		.loc 1 2954 3 is_stmt 0 view .LVU353
 1307 0000 4023     		movs	r3, #64
2951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1308              		.loc 1 2951 22 view .LVU354
 1309 0002 806A     		ldr	r0, [r0, #40]
 1310              	.LVL74:
 1311              		.loc 1 2954 3 is_stmt 1 view .LVU355
2949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1312              		.loc 1 2949 1 is_stmt 0 view .LVU356
 1313 0004 10B5     		push	{r4, lr}
 1314              	.LCFI6:
 1315              		.cfi_def_cfa_offset 8
 1316              		.cfi_offset 4, -8
 1317              		.cfi_offset 14, -4
 1318              		.loc 1 2954 3 view .LVU357
 1319 0006 826D     		ldr	r2, [r0, #88]
2955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC error code to DMA error */
2957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
2958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Error callback */
2960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
2962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
2964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1320              		.loc 1 2965 1 view .LVU358
 1321              		@ sp needed
2954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  /tmp/ccrGR9oZ.s 			page 163


 1322              		.loc 1 2954 3 view .LVU359
 1323 0008 1343     		orrs	r3, r2
 1324 000a 8365     		str	r3, [r0, #88]
2957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1325              		.loc 1 2957 3 is_stmt 1 view .LVU360
 1326 000c 0423     		movs	r3, #4
 1327 000e C26D     		ldr	r2, [r0, #92]
 1328 0010 1343     		orrs	r3, r2
 1329 0012 C365     		str	r3, [r0, #92]
2963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1330              		.loc 1 2963 3 view .LVU361
 1331 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1332              	.LVL75:
 1333              		.loc 1 2965 1 is_stmt 0 view .LVU362
 1334 0018 10BD     		pop	{r4, pc}
 1335              		.cfi_endproc
 1336              	.LFE447:
 1338              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1339              		.align	1
 1340              		.syntax unified
 1341              		.code	16
 1342              		.thumb_func
 1344              	ADC_DMAConvCplt:
 1345              	.LVL76:
 1346              	.LFB445:
2853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1347              		.loc 1 2853 1 is_stmt 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
2855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1351              		.loc 1 2855 3 view .LVU364
2858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1352              		.loc 1 2858 20 is_stmt 0 view .LVU365
 1353 0000 5023     		movs	r3, #80
2853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1354              		.loc 1 2853 1 view .LVU366
 1355 0002 70B5     		push	{r4, r5, r6, lr}
 1356              	.LCFI7:
 1357              		.cfi_def_cfa_offset 16
 1358              		.cfi_offset 4, -16
 1359              		.cfi_offset 5, -12
 1360              		.cfi_offset 6, -8
 1361              		.cfi_offset 14, -4
2855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1362              		.loc 1 2855 22 view .LVU367
 1363 0004 846A     		ldr	r4, [r0, #40]
 1364              	.LVL77:
2858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1365              		.loc 1 2858 3 is_stmt 1 view .LVU368
2858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1366              		.loc 1 2858 12 is_stmt 0 view .LVU369
 1367 0006 A26D     		ldr	r2, [r4, #88]
2858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1368              		.loc 1 2858 6 view .LVU370
 1369 0008 1A42     		tst	r2, r3
 1370 000a 2DD1     		bne	.L99
ARM GAS  /tmp/ccrGR9oZ.s 			page 164


2861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1371              		.loc 1 2861 5 is_stmt 1 view .LVU371
 1372 000c A26D     		ldr	r2, [r4, #88]
 1373 000e B133     		adds	r3, r3, #177
 1374 0010 FF33     		adds	r3, r3, #255
 1375 0012 1343     		orrs	r3, r2
 1376 0014 A365     		str	r3, [r4, #88]
2866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1377              		.loc 1 2866 5 view .LVU372
 1378              	.LBB100:
 1379              	.LBB101:
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1380              		.loc 2 2642 12 is_stmt 0 view .LVU373
 1381 0016 C023     		movs	r3, #192
 1382              	.LBE101:
 1383              	.LBE100:
2866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1384              		.loc 1 2866 10 view .LVU374
 1385 0018 2568     		ldr	r5, [r4]
 1386              	.LVL78:
 1387              	.LBB103:
 1388              	.LBI100:
2640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1389              		.loc 2 2640 26 is_stmt 1 view .LVU375
 1390              	.LBB102:
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1391              		.loc 2 2642 3 view .LVU376
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1392              		.loc 2 2642 12 is_stmt 0 view .LVU377
 1393 001a 1B01     		lsls	r3, r3, #4
 1394 001c EA68     		ldr	r2, [r5, #12]
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1395              		.loc 2 2642 106 view .LVU378
 1396 001e 1A42     		tst	r2, r3
 1397 0020 15D1     		bne	.L100
 1398              	.LVL79:
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1399              		.loc 2 2642 106 view .LVU379
 1400              	.LBE102:
 1401              	.LBE103:
2867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        )
 1402              		.loc 1 2867 9 view .LVU380
 1403 0022 A37E     		ldrb	r3, [r4, #26]
 1404 0024 002B     		cmp	r3, #0
 1405 0026 12D1     		bne	.L100
2871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1406              		.loc 1 2871 7 is_stmt 1 view .LVU381
2871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1407              		.loc 1 2871 11 is_stmt 0 view .LVU382
 1408 0028 2B68     		ldr	r3, [r5]
2871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1409              		.loc 1 2871 10 view .LVU383
 1410 002a 1B07     		lsls	r3, r3, #28
 1411 002c 0FD5     		bpl	.L100
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1412              		.loc 1 2875 9 is_stmt 1 view .LVU384
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
ARM GAS  /tmp/ccrGR9oZ.s 			page 165


 1413              		.loc 1 2875 13 is_stmt 0 view .LVU385
 1414 002e 2800     		movs	r0, r5
 1415              	.LVL80:
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1416              		.loc 1 2875 13 view .LVU386
 1417 0030 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 1418              	.LVL81:
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1419              		.loc 1 2875 12 discriminator 1 view .LVU387
 1420 0034 0028     		cmp	r0, #0
 1421 0036 0ED1     		bne	.L101
2881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1422              		.loc 1 2881 11 is_stmt 1 view .LVU388
 1423 0038 0C22     		movs	r2, #12
 1424 003a 6B68     		ldr	r3, [r5, #4]
 1425 003c 9343     		bics	r3, r2
 1426 003e 6B60     		str	r3, [r5, #4]
2884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 1427              		.loc 1 2884 11 view .LVU389
 1428 0040 A26D     		ldr	r2, [r4, #88]
 1429 0042 0F4B     		ldr	r3, .L108
 1430 0044 1A40     		ands	r2, r3
 1431 0046 0433     		adds	r3, r3, #4
 1432 0048 FF33     		adds	r3, r3, #255
 1433 004a 1343     		orrs	r3, r2
 1434 004c A365     		str	r3, [r4, #88]
 1435              	.L100:
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1436              		.loc 1 2903 5 view .LVU390
 1437 004e 2000     		movs	r0, r4
 1438 0050 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1439              	.LVL82:
 1440              	.L98:
2923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1441              		.loc 1 2923 1 is_stmt 0 view .LVU391
 1442              		@ sp needed
 1443              	.LVL83:
2923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1444              		.loc 1 2923 1 view .LVU392
 1445 0054 70BD     		pop	{r4, r5, r6, pc}
 1446              	.LVL84:
 1447              	.L101:
2891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1448              		.loc 1 2891 11 is_stmt 1 view .LVU393
 1449 0056 2023     		movs	r3, #32
 1450 0058 A26D     		ldr	r2, [r4, #88]
 1451 005a 1343     		orrs	r3, r2
 1452 005c A365     		str	r3, [r4, #88]
2894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 1453              		.loc 1 2894 11 view .LVU394
 1454 005e 0123     		movs	r3, #1
 1455 0060 E26D     		ldr	r2, [r4, #92]
 1456 0062 1343     		orrs	r3, r2
 1457 0064 E365     		str	r3, [r4, #92]
 1458 0066 F2E7     		b	.L100
 1459              	.LVL85:
 1460              	.L99:
ARM GAS  /tmp/ccrGR9oZ.s 			page 166


2908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1461              		.loc 1 2908 5 view .LVU395
2908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1462              		.loc 1 2908 14 is_stmt 0 view .LVU396
 1463 0068 A36D     		ldr	r3, [r4, #88]
2908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1464              		.loc 1 2908 8 view .LVU397
 1465 006a DB06     		lsls	r3, r3, #27
 1466 006c 03D5     		bpl	.L103
2914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1467              		.loc 1 2914 7 is_stmt 1 view .LVU398
 1468 006e 2000     		movs	r0, r4
 1469              	.LVL86:
2914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1470              		.loc 1 2914 7 is_stmt 0 view .LVU399
 1471 0070 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1472              	.LVL87:
 1473 0074 EEE7     		b	.L98
 1474              	.LVL88:
 1475              	.L103:
2920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1476              		.loc 1 2920 7 is_stmt 1 view .LVU400
2920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1477              		.loc 1 2920 23 is_stmt 0 view .LVU401
 1478 0076 236D     		ldr	r3, [r4, #80]
2920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1479              		.loc 1 2920 7 view .LVU402
 1480 0078 5B6B     		ldr	r3, [r3, #52]
 1481 007a 9847     		blx	r3
 1482              	.LVL89:
2923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1483              		.loc 1 2923 1 view .LVU403
 1484 007c EAE7     		b	.L98
 1485              	.L109:
 1486 007e C046     		.align	2
 1487              	.L108:
 1488 0080 FEFEFFFF 		.word	-258
 1489              		.cfi_endproc
 1490              	.LFE445:
 1492              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1493              		.align	1
 1494              		.global	HAL_ADC_IRQHandler
 1495              		.syntax unified
 1496              		.code	16
 1497              		.thumb_func
 1499              	HAL_ADC_IRQHandler:
 1500              	.LVL90:
 1501              	.LFB433:
1851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1502              		.loc 1 1851 1 is_stmt 1 view -0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
1852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1506              		.loc 1 1852 3 view .LVU405
1853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1507              		.loc 1 1853 3 view .LVU406
ARM GAS  /tmp/ccrGR9oZ.s 			page 167


1851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1508              		.loc 1 1851 1 is_stmt 0 view .LVU407
 1509 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1510              	.LCFI8:
 1511              		.cfi_def_cfa_offset 24
 1512              		.cfi_offset 3, -24
 1513              		.cfi_offset 4, -20
 1514              		.cfi_offset 5, -16
 1515              		.cfi_offset 6, -12
 1516              		.cfi_offset 7, -8
 1517              		.cfi_offset 14, -4
1853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1518              		.loc 1 1853 26 view .LVU408
 1519 0002 0368     		ldr	r3, [r0]
1851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1520              		.loc 1 1851 1 view .LVU409
 1521 0004 0400     		movs	r4, r0
1853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1522              		.loc 1 1853 12 view .LVU410
 1523 0006 1E68     		ldr	r6, [r3]
 1524              	.LVL91:
1854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1525              		.loc 1 1854 3 is_stmt 1 view .LVU411
1854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1526              		.loc 1 1854 12 is_stmt 0 view .LVU412
 1527 0008 5D68     		ldr	r5, [r3, #4]
 1528              	.LVL92:
1857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1529              		.loc 1 1857 3 is_stmt 1 view .LVU413
1858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1530              		.loc 1 1858 3 view .LVU414
1861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1531              		.loc 1 1861 3 view .LVU415
1861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1532              		.loc 1 1861 17 is_stmt 0 view .LVU416
 1533 000a 0223     		movs	r3, #2
1861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1534              		.loc 1 1861 6 view .LVU417
 1535 000c 1E42     		tst	r6, r3
 1536 000e 0FD0     		beq	.L111
1861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1537              		.loc 1 1861 54 discriminator 1 view .LVU418
 1538 0010 1D42     		tst	r5, r3
 1539 0012 0DD0     		beq	.L111
1864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1540              		.loc 1 1864 5 is_stmt 1 view .LVU419
1864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1541              		.loc 1 1864 14 is_stmt 0 view .LVU420
 1542 0014 836D     		ldr	r3, [r0, #88]
1864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1543              		.loc 1 1864 8 view .LVU421
 1544 0016 DB06     		lsls	r3, r3, #27
 1545 0018 04D4     		bmi	.L112
1867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1546              		.loc 1 1867 7 is_stmt 1 view .LVU422
 1547 001a 8023     		movs	r3, #128
 1548 001c 826D     		ldr	r2, [r0, #88]
ARM GAS  /tmp/ccrGR9oZ.s 			page 168


 1549 001e 1B01     		lsls	r3, r3, #4
 1550 0020 1343     		orrs	r3, r2
 1551 0022 8365     		str	r3, [r0, #88]
 1552              	.L112:
1874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1553              		.loc 1 1874 5 view .LVU423
 1554 0024 2000     		movs	r0, r4
 1555              	.LVL93:
1874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1556              		.loc 1 1874 5 is_stmt 0 view .LVU424
 1557 0026 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1558              	.LVL94:
1878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1559              		.loc 1 1878 5 is_stmt 1 view .LVU425
 1560 002a 0222     		movs	r2, #2
 1561 002c 2368     		ldr	r3, [r4]
 1562 002e 1A60     		str	r2, [r3]
 1563              	.L111:
1882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1564              		.loc 1 1882 3 view .LVU426
1882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1565              		.loc 1 1882 18 is_stmt 0 view .LVU427
 1566 0030 0423     		movs	r3, #4
1882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1567              		.loc 1 1882 6 view .LVU428
 1568 0032 1E42     		tst	r6, r3
 1569 0034 01D0     		beq	.L113
1882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1570              		.loc 1 1882 51 discriminator 1 view .LVU429
 1571 0036 1D42     		tst	r5, r3
 1572 0038 04D1     		bne	.L114
 1573              	.L113:
1883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1574              		.loc 1 1883 18 view .LVU430
 1575 003a 0823     		movs	r3, #8
1882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1576              		.loc 1 1882 94 discriminator 3 view .LVU431
 1577 003c 1E42     		tst	r6, r3
 1578 003e 2BD0     		beq	.L115
1883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1579              		.loc 1 1883 51 view .LVU432
 1580 0040 1D42     		tst	r5, r3
 1581 0042 29D0     		beq	.L115
 1582              	.L114:
1886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1583              		.loc 1 1886 5 is_stmt 1 view .LVU433
1886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1584              		.loc 1 1886 14 is_stmt 0 view .LVU434
 1585 0044 A36D     		ldr	r3, [r4, #88]
1886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1586              		.loc 1 1886 8 view .LVU435
 1587 0046 DB06     		lsls	r3, r3, #27
 1588 0048 04D4     		bmi	.L116
1889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1589              		.loc 1 1889 7 is_stmt 1 view .LVU436
 1590 004a 8023     		movs	r3, #128
 1591 004c A26D     		ldr	r2, [r4, #88]
ARM GAS  /tmp/ccrGR9oZ.s 			page 169


 1592 004e 9B00     		lsls	r3, r3, #2
 1593 0050 1343     		orrs	r3, r2
 1594 0052 A365     		str	r3, [r4, #88]
 1595              	.L116:
1895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1596              		.loc 1 1895 5 view .LVU437
 1597              	.LBB108:
 1598              	.LBB109:
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1599              		.loc 2 2642 12 is_stmt 0 view .LVU438
 1600 0054 C023     		movs	r3, #192
 1601              	.LBE109:
 1602              	.LBE108:
1895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1603              		.loc 1 1895 10 view .LVU439
 1604 0056 2768     		ldr	r7, [r4]
 1605              	.LVL95:
 1606              	.LBB111:
 1607              	.LBI108:
2640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1608              		.loc 2 2640 26 is_stmt 1 view .LVU440
 1609              	.LBB110:
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1610              		.loc 2 2642 3 view .LVU441
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1611              		.loc 2 2642 12 is_stmt 0 view .LVU442
 1612 0058 1B01     		lsls	r3, r3, #4
 1613 005a FA68     		ldr	r2, [r7, #12]
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1614              		.loc 2 2642 106 view .LVU443
 1615 005c 1A42     		tst	r2, r3
 1616 005e 15D1     		bne	.L117
 1617              	.LVL96:
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1618              		.loc 2 2642 106 view .LVU444
 1619              	.LBE110:
 1620              	.LBE111:
1896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        )
 1621              		.loc 1 1896 9 view .LVU445
 1622 0060 A37E     		ldrb	r3, [r4, #26]
 1623 0062 002B     		cmp	r3, #0
 1624 0064 12D1     		bne	.L117
1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1625              		.loc 1 1900 7 is_stmt 1 view .LVU446
1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1626              		.loc 1 1900 11 is_stmt 0 view .LVU447
 1627 0066 3B68     		ldr	r3, [r7]
1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1628              		.loc 1 1900 10 view .LVU448
 1629 0068 1B07     		lsls	r3, r3, #28
 1630 006a 0FD5     		bpl	.L117
1904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1631              		.loc 1 1904 9 is_stmt 1 view .LVU449
1904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1632              		.loc 1 1904 13 is_stmt 0 view .LVU450
 1633 006c 3800     		movs	r0, r7
 1634 006e FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
ARM GAS  /tmp/ccrGR9oZ.s 			page 170


 1635              	.LVL97:
1904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1636              		.loc 1 1904 12 discriminator 1 view .LVU451
 1637 0072 0028     		cmp	r0, #0
 1638 0074 66D1     		bne	.L118
1910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1639              		.loc 1 1910 11 is_stmt 1 view .LVU452
 1640 0076 0C22     		movs	r2, #12
 1641 0078 7B68     		ldr	r3, [r7, #4]
 1642 007a 9343     		bics	r3, r2
 1643 007c 7B60     		str	r3, [r7, #4]
1913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 1644              		.loc 1 1913 11 view .LVU453
 1645 007e A26D     		ldr	r2, [r4, #88]
 1646 0080 354B     		ldr	r3, .L184
 1647 0082 1A40     		ands	r2, r3
 1648 0084 0433     		adds	r3, r3, #4
 1649 0086 FF33     		adds	r3, r3, #255
 1650 0088 1343     		orrs	r3, r2
 1651 008a A365     		str	r3, [r4, #88]
 1652              	.L117:
1936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1653              		.loc 1 1936 5 view .LVU454
 1654 008c 2000     		movs	r0, r4
 1655 008e FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1656              	.LVL98:
1944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1657              		.loc 1 1944 5 view .LVU455
 1658 0092 0C22     		movs	r2, #12
 1659 0094 2368     		ldr	r3, [r4]
 1660 0096 1A60     		str	r2, [r3]
 1661              	.L115:
1948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1662              		.loc 1 1948 3 view .LVU456
1948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1663              		.loc 1 1948 17 is_stmt 0 view .LVU457
 1664 0098 8027     		movs	r7, #128
1948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1665              		.loc 1 1948 6 view .LVU458
 1666 009a 3E42     		tst	r6, r7
 1667 009c 0BD0     		beq	.L119
1948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1668              		.loc 1 1948 52 discriminator 1 view .LVU459
 1669 009e 3D42     		tst	r5, r7
 1670 00a0 09D0     		beq	.L119
1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1671              		.loc 1 1951 5 is_stmt 1 view .LVU460
 1672 00a2 8023     		movs	r3, #128
 1673 00a4 A26D     		ldr	r2, [r4, #88]
 1674 00a6 5B02     		lsls	r3, r3, #9
 1675 00a8 1343     		orrs	r3, r2
 1676 00aa A365     		str	r3, [r4, #88]
1957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1677              		.loc 1 1957 5 view .LVU461
 1678 00ac 2000     		movs	r0, r4
 1679 00ae FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1680              	.LVL99:
ARM GAS  /tmp/ccrGR9oZ.s 			page 171


1961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1681              		.loc 1 1961 5 view .LVU462
 1682 00b2 2368     		ldr	r3, [r4]
 1683 00b4 1F60     		str	r7, [r3]
 1684              	.L119:
1965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1685              		.loc 1 1965 3 view .LVU463
1965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1686              		.loc 1 1965 17 is_stmt 0 view .LVU464
 1687 00b6 8027     		movs	r7, #128
 1688 00b8 7F00     		lsls	r7, r7, #1
1965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1689              		.loc 1 1965 6 view .LVU465
 1690 00ba 3E42     		tst	r6, r7
 1691 00bc 0BD0     		beq	.L120
1965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1692              		.loc 1 1965 52 discriminator 1 view .LVU466
 1693 00be 3D42     		tst	r5, r7
 1694 00c0 09D0     		beq	.L120
1968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1695              		.loc 1 1968 5 is_stmt 1 view .LVU467
 1696 00c2 8023     		movs	r3, #128
 1697 00c4 A26D     		ldr	r2, [r4, #88]
 1698 00c6 9B02     		lsls	r3, r3, #10
 1699 00c8 1343     		orrs	r3, r2
 1700 00ca A365     		str	r3, [r4, #88]
1974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1701              		.loc 1 1974 5 view .LVU468
 1702 00cc 2000     		movs	r0, r4
 1703 00ce FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1704              	.LVL100:
1978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1705              		.loc 1 1978 5 view .LVU469
 1706 00d2 2368     		ldr	r3, [r4]
 1707 00d4 1F60     		str	r7, [r3]
 1708              	.L120:
1982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1709              		.loc 1 1982 3 view .LVU470
1982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1710              		.loc 1 1982 17 is_stmt 0 view .LVU471
 1711 00d6 8027     		movs	r7, #128
 1712 00d8 BF00     		lsls	r7, r7, #2
1982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1713              		.loc 1 1982 6 view .LVU472
 1714 00da 3E42     		tst	r6, r7
 1715 00dc 0BD0     		beq	.L121
1982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1716              		.loc 1 1982 52 discriminator 1 view .LVU473
 1717 00de 3D42     		tst	r5, r7
 1718 00e0 09D0     		beq	.L121
1985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1719              		.loc 1 1985 5 is_stmt 1 view .LVU474
 1720 00e2 8023     		movs	r3, #128
 1721 00e4 A26D     		ldr	r2, [r4, #88]
 1722 00e6 DB02     		lsls	r3, r3, #11
 1723 00e8 1343     		orrs	r3, r2
 1724 00ea A365     		str	r3, [r4, #88]
ARM GAS  /tmp/ccrGR9oZ.s 			page 172


1991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1725              		.loc 1 1991 5 view .LVU475
 1726 00ec 2000     		movs	r0, r4
 1727 00ee FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1728              	.LVL101:
1995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1729              		.loc 1 1995 5 view .LVU476
 1730 00f2 2368     		ldr	r3, [r4]
 1731 00f4 1F60     		str	r7, [r3]
 1732              	.L121:
1999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1733              		.loc 1 1999 3 view .LVU477
1999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1734              		.loc 1 1999 17 is_stmt 0 view .LVU478
 1735 00f6 1023     		movs	r3, #16
1999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1736              		.loc 1 1999 6 view .LVU479
 1737 00f8 1E42     		tst	r6, r3
 1738 00fa 17D0     		beq	.L122
1999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1739              		.loc 1 1999 50 discriminator 1 view .LVU480
 1740 00fc 1D42     		tst	r5, r3
 1741 00fe 15D0     		beq	.L122
2007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1742              		.loc 1 2007 5 is_stmt 1 view .LVU481
2007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1743              		.loc 1 2007 8 is_stmt 0 view .LVU482
 1744 0100 236B     		ldr	r3, [r4, #48]
 1745 0102 002B     		cmp	r3, #0
 1746 0104 03D0     		beq	.L123
2014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1747              		.loc 1 2014 7 is_stmt 1 view .LVU483
2014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1748              		.loc 1 2014 11 is_stmt 0 view .LVU484
 1749 0106 2368     		ldr	r3, [r4]
 1750              	.LVL102:
 1751              	.LBB112:
 1752              	.LBI112:
3624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1753              		.loc 2 3624 26 is_stmt 1 view .LVU485
 1754              	.LBB113:
3626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1755              		.loc 2 3626 3 view .LVU486
3626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1756              		.loc 2 3626 21 is_stmt 0 view .LVU487
 1757 0108 DB68     		ldr	r3, [r3, #12]
 1758              	.LVL103:
3626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1759              		.loc 2 3626 21 view .LVU488
 1760              	.LBE113:
 1761              	.LBE112:
2014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1762              		.loc 1 2014 10 discriminator 1 view .LVU489
 1763 010a 9B07     		lsls	r3, r3, #30
 1764 010c 0BD0     		beq	.L124
 1765              	.L123:
 1766              	.LVL104:
ARM GAS  /tmp/ccrGR9oZ.s 			page 173


2023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1767              		.loc 1 2023 7 is_stmt 1 view .LVU490
 1768 010e 8023     		movs	r3, #128
 1769 0110 A26D     		ldr	r2, [r4, #88]
 1770 0112 DB00     		lsls	r3, r3, #3
 1771 0114 1343     		orrs	r3, r2
 1772 0116 A365     		str	r3, [r4, #88]
2026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1773              		.loc 1 2026 7 view .LVU491
 1774 0118 0223     		movs	r3, #2
 1775 011a E26D     		ldr	r2, [r4, #92]
2036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1776              		.loc 1 2036 7 is_stmt 0 view .LVU492
 1777 011c 2000     		movs	r0, r4
2026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1778              		.loc 1 2026 7 view .LVU493
 1779 011e 1343     		orrs	r3, r2
 1780 0120 E365     		str	r3, [r4, #92]
2036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1781              		.loc 1 2036 7 is_stmt 1 view .LVU494
 1782 0122 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1783              	.LVL105:
 1784              	.L124:
2041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1785              		.loc 1 2041 5 view .LVU495
 1786 0126 1022     		movs	r2, #16
 1787 0128 2368     		ldr	r3, [r4]
 1788 012a 1A60     		str	r2, [r3]
 1789              	.L122:
2045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1790              		.loc 1 2045 3 view .LVU496
2045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1791              		.loc 1 2045 17 is_stmt 0 view .LVU497
 1792 012c 8027     		movs	r7, #128
 1793 012e BF01     		lsls	r7, r7, #6
2045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1794              		.loc 1 2045 6 view .LVU498
 1795 0130 3E42     		tst	r6, r7
 1796 0132 06D0     		beq	.L110
2045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1797              		.loc 1 2045 54 discriminator 1 view .LVU499
 1798 0134 3D42     		tst	r5, r7
 1799 0136 04D0     		beq	.L110
2048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1800              		.loc 1 2048 5 is_stmt 1 view .LVU500
 1801 0138 2000     		movs	r0, r4
 1802 013a FFF7FEFF 		bl	HAL_ADCEx_ChannelConfigReadyCallback
 1803              	.LVL106:
2051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1804              		.loc 1 2051 5 view .LVU501
 1805 013e 2368     		ldr	r3, [r4]
 1806 0140 1F60     		str	r7, [r3]
 1807              	.L110:
2053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1808              		.loc 1 2053 1 is_stmt 0 view .LVU502
 1809              		@ sp needed
 1810              	.LVL107:
ARM GAS  /tmp/ccrGR9oZ.s 			page 174


 1811              	.LVL108:
 1812              	.LVL109:
2053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1813              		.loc 1 2053 1 view .LVU503
 1814 0142 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1815              	.LVL110:
 1816              	.L118:
1920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1817              		.loc 1 1920 11 is_stmt 1 view .LVU504
 1818 0144 2023     		movs	r3, #32
 1819 0146 A26D     		ldr	r2, [r4, #88]
 1820 0148 1343     		orrs	r3, r2
 1821 014a A365     		str	r3, [r4, #88]
1923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 1822              		.loc 1 1923 11 view .LVU505
 1823 014c 0123     		movs	r3, #1
 1824 014e E26D     		ldr	r2, [r4, #92]
 1825 0150 1343     		orrs	r3, r2
 1826 0152 E365     		str	r3, [r4, #92]
 1827 0154 9AE7     		b	.L117
 1828              	.L185:
 1829 0156 C046     		.align	2
 1830              	.L184:
 1831 0158 FEFEFFFF 		.word	-258
 1832              		.cfi_endproc
 1833              	.LFE433:
 1835              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1836              		.align	1
 1837              		.global	HAL_ADC_ConfigChannel
 1838              		.syntax unified
 1839              		.code	16
 1840              		.thumb_func
 1842              	HAL_ADC_ConfigChannel:
 1843              	.LVL111:
 1844              	.LFB438:
2159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1845              		.loc 1 2159 1 view -0
 1846              		.cfi_startproc
 1847              		@ args = 0, pretend = 0, frame = 16
 1848              		@ frame_needed = 0, uses_anonymous_args = 0
2162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1849              		.loc 1 2162 17 is_stmt 0 view .LVU507
 1850 0000 0023     		movs	r3, #0
2159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1851              		.loc 1 2159 1 view .LVU508
 1852 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1853              	.LCFI9:
 1854              		.cfi_def_cfa_offset 20
 1855              		.cfi_offset 4, -20
 1856              		.cfi_offset 5, -16
 1857              		.cfi_offset 6, -12
 1858              		.cfi_offset 7, -8
 1859              		.cfi_offset 14, -4
 1860 0004 85B0     		sub	sp, sp, #20
 1861              	.LCFI10:
 1862              		.cfi_def_cfa_offset 40
2162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  /tmp/ccrGR9oZ.s 			page 175


 1863              		.loc 1 2162 17 view .LVU509
 1864 0006 0393     		str	r3, [sp, #12]
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1865              		.loc 1 2181 3 view .LVU510
 1866 0008 0300     		movs	r3, r0
2159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1867              		.loc 1 2159 1 view .LVU511
 1868 000a 0091     		str	r1, [sp]
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1869              		.loc 1 2181 3 view .LVU512
 1870 000c 5433     		adds	r3, r3, #84
 1871 000e 1A78     		ldrb	r2, [r3]
2159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1872              		.loc 1 2159 1 view .LVU513
 1873 0010 0400     		movs	r4, r0
2160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 1874              		.loc 1 2160 3 is_stmt 1 view .LVU514
 1875              	.LVL112:
2161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 1876              		.loc 1 2161 3 view .LVU515
2162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1877              		.loc 1 2162 3 view .LVU516
2165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(pConfig->Channel));
 1878              		.loc 1 2165 3 view .LVU517
2166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(pConfig->SamplingTime));
 1879              		.loc 1 2166 3 view .LVU518
2167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1880              		.loc 1 2167 3 view .LVU519
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1881              		.loc 1 2169 3 view .LVU520
2172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1882              		.loc 1 2172 5 view .LVU521
2176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1883              		.loc 1 2176 5 view .LVU522
2178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1884              		.loc 1 2178 5 view .LVU523
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1885              		.loc 1 2181 3 view .LVU524
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1886              		.loc 1 2181 3 view .LVU525
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1887              		.loc 1 2181 3 is_stmt 0 discriminator 1 view .LVU526
 1888 0012 0220     		movs	r0, #2
 1889              	.LVL113:
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1890              		.loc 1 2181 3 view .LVU527
 1891 0014 012A     		cmp	r2, #1
 1892 0016 4DD0     		beq	.L187
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1893              		.loc 1 2181 3 discriminator 2 view .LVU528
 1894 0018 0122     		movs	r2, #1
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1895              		.loc 1 2169 18 view .LVU529
 1896 001a 2769     		ldr	r7, [r4, #16]
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1897              		.loc 1 2181 3 is_stmt 1 discriminator 2 view .LVU530
 1898 001c 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccrGR9oZ.s 			page 176


2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1899              		.loc 1 2181 3 discriminator 2 view .LVU531
2189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1900              		.loc 1 2189 3 view .LVU532
2189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1901              		.loc 1 2189 7 is_stmt 0 view .LVU533
 1902 001e 2568     		ldr	r5, [r4]
 1903 0020 2800     		movs	r0, r5
 1904 0022 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 1905              	.LVL114:
2189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1906              		.loc 1 2189 6 discriminator 1 view .LVU534
 1907 0026 0028     		cmp	r0, #0
 1908 0028 00D0     		beq	.LCB1703
 1909 002a F7E0     		b	.L188	@long jump
 1910              	.LCB1703:
2198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1911              		.loc 1 2198 5 is_stmt 1 view .LVU535
2198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1912              		.loc 1 2198 16 is_stmt 0 view .LVU536
 1913 002c 009B     		ldr	r3, [sp]
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1914              		.loc 1 2206 10 view .LVU537
 1915 002e 0422     		movs	r2, #4
2198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1916              		.loc 1 2198 16 view .LVU538
 1917 0030 5B68     		ldr	r3, [r3, #4]
 1918 0032 8021     		movs	r1, #128
 1919 0034 9C46     		mov	ip, r3
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1920              		.loc 1 2206 10 view .LVU539
 1921 0036 9743     		bics	r7, r2
2198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1922              		.loc 1 2198 8 view .LVU540
 1923 0038 6246     		mov	r2, ip
2211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 1924              		.loc 1 2211 9 view .LVU541
 1925 003a 009B     		ldr	r3, [sp]
 1926 003c 0906     		lsls	r1, r1, #24
 1927 003e 1B68     		ldr	r3, [r3]
2198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1928              		.loc 1 2198 8 view .LVU542
 1929 0040 022A     		cmp	r2, #2
 1930 0042 00D1     		bne	.LCB1717
 1931 0044 BEE0     		b	.L189	@long jump
 1932              	.LCB1717:
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1933              		.loc 1 2206 7 is_stmt 1 view .LVU543
 1934              	.LBB138:
 1935              	.LBB139:
3322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1936              		.loc 2 3322 3 is_stmt 0 view .LVU544
 1937 0046 5A03     		lsls	r2, r3, #13
 1938 0048 520B     		lsrs	r2, r2, #13
 1939              	.LBE139:
 1940              	.LBE138:
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
ARM GAS  /tmp/ccrGR9oZ.s 			page 177


 1941              		.loc 1 2206 10 view .LVU545
 1942 004a 8F42     		cmp	r7, r1
 1943 004c 34D1     		bne	.L190
2211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 1944              		.loc 1 2211 9 is_stmt 1 view .LVU546
 1945              	.LVL115:
 1946              	.LBB141:
 1947              	.LBI138:
3318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1948              		.loc 2 3318 22 view .LVU547
 1949              	.LBB140:
3322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1950              		.loc 2 3322 3 view .LVU548
 1951 004e A96A     		ldr	r1, [r5, #40]
 1952              	.LVL116:
 1953              	.L224:
3322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1954              		.loc 2 3322 3 is_stmt 0 view .LVU549
 1955              	.LBE140:
 1956              	.LBE141:
 1957              	.LBB142:
 1958              	.LBB143:
3057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1959              		.loc 2 3057 3 view .LVU550
 1960 0050 0A43     		orrs	r2, r1
 1961 0052 AA62     		str	r2, [r5, #40]
 1962              	.L191:
 1963              	.LBE143:
 1964              	.LBE142:
2234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1965              		.loc 1 2234 7 is_stmt 1 view .LVU551
 1966              	.LVL117:
 1967              	.LBB145:
 1968              	.LBI145:
3750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1969              		.loc 2 3750 22 view .LVU552
 1970              	.LBB146:
3754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 1971              		.loc 2 3754 3 view .LVU553
 1972 0054 009A     		ldr	r2, [sp]
 1973 0056 6869     		ldr	r0, [r5, #20]
 1974 0058 9268     		ldr	r2, [r2, #8]
 1975 005a 1902     		lsls	r1, r3, #8
 1976 005c 724E     		ldr	r6, .L229
 1977 005e 0A40     		ands	r2, r1
 1978 0060 3240     		ands	r2, r6
 1979 0062 8843     		bics	r0, r1
 1980 0064 0243     		orrs	r2, r0
 1981 0066 6A61     		str	r2, [r5, #20]
 1982              	.LVL118:
3754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 1983              		.loc 2 3754 3 is_stmt 0 view .LVU554
 1984              	.LBE146:
 1985              	.LBE145:
2242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1986              		.loc 1 2242 7 is_stmt 1 view .LVU555
2242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
ARM GAS  /tmp/ccrGR9oZ.s 			page 178


 1987              		.loc 1 2242 10 is_stmt 0 view .LVU556
 1988 0068 002B     		cmp	r3, #0
 1989 006a 1FDA     		bge	.L195
2244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1990              		.loc 1 2244 9 is_stmt 1 view .LVU557
 1991              	.LVL119:
 1992              	.LBB147:
 1993              	.LBI147:
2129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1994              		.loc 2 2129 26 view .LVU558
 1995              	.LBB148:
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1996              		.loc 2 2131 3 view .LVU559
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1997              		.loc 2 2131 10 is_stmt 0 view .LVU560
 1998 006c E021     		movs	r1, #224
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1999              		.loc 2 2131 21 view .LVU561
 2000 006e 6F4A     		ldr	r2, .L229+4
 2001              	.LBE148:
 2002              	.LBE147:
2248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2003              		.loc 1 2248 12 view .LVU562
 2004 0070 6F48     		ldr	r0, .L229+8
 2005              	.LBB150:
 2006              	.LBB149:
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2007              		.loc 2 2131 21 view .LVU563
 2008 0072 1568     		ldr	r5, [r2]
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2009              		.loc 2 2131 10 view .LVU564
 2010 0074 4904     		lsls	r1, r1, #17
 2011 0076 2940     		ands	r1, r5
 2012              	.LVL120:
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2013              		.loc 2 2131 10 view .LVU565
 2014              	.LBE149:
 2015              	.LBE150:
2248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2016              		.loc 1 2248 9 is_stmt 1 view .LVU566
2248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2017              		.loc 1 2248 12 is_stmt 0 view .LVU567
 2018 0078 8342     		cmp	r3, r0
 2019 007a 00D0     		beq	.LCB1798
 2020 007c 8CE0     		b	.L196	@long jump
 2021              	.LCB1798:
2249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2022              		.loc 1 2249 43 view .LVU568
 2023 007e 8020     		movs	r0, #128
 2024 0080 0004     		lsls	r0, r0, #16
2248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2025              		.loc 1 2248 58 discriminator 1 view .LVU569
 2026 0082 0542     		tst	r5, r0
 2027 0084 12D1     		bne	.L195
2251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 2028              		.loc 1 2251 11 is_stmt 1 view .LVU570
 2029              	.LVL121:
ARM GAS  /tmp/ccrGR9oZ.s 			page 179


 2030              	.LBB151:
 2031              	.LBI151:
2035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2032              		.loc 2 2035 22 view .LVU571
 2033              	.LBB152:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2034              		.loc 2 2037 3 view .LVU572
 2035 0086 1368     		ldr	r3, [r2]
 2036 0088 6A4D     		ldr	r5, .L229+12
 2037 008a 2B40     		ands	r3, r5
 2038 008c 0B43     		orrs	r3, r1
 2039 008e 1843     		orrs	r0, r3
 2040              	.LBE152:
 2041              	.LBE151:
2259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2042              		.loc 1 2259 91 is_stmt 0 view .LVU573
 2043 0090 694B     		ldr	r3, .L229+16
 2044              	.LBB154:
 2045              	.LBB153:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2046              		.loc 2 2037 3 view .LVU574
 2047 0092 1060     		str	r0, [r2]
 2048              	.LVL122:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2049              		.loc 2 2037 3 view .LVU575
 2050              	.LBE153:
 2051              	.LBE154:
2259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2052              		.loc 1 2259 11 is_stmt 1 view .LVU576
2259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2053              		.loc 1 2259 91 is_stmt 0 view .LVU577
 2054 0094 1868     		ldr	r0, [r3]
 2055 0096 6949     		ldr	r1, .L229+20
 2056              	.LVL123:
2259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2057              		.loc 1 2259 91 view .LVU578
 2058 0098 FFF7FEFF 		bl	__aeabi_uidiv
 2059              	.LVL124:
2259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2060              		.loc 1 2259 71 view .LVU579
 2061 009c 431C     		adds	r3, r0, #1
 2062 009e 0C20     		movs	r0, #12
 2063 00a0 5843     		muls	r0, r3
2259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2064              		.loc 1 2259 27 view .LVU580
 2065 00a2 0390     		str	r0, [sp, #12]
2260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2066              		.loc 1 2260 11 is_stmt 1 view .LVU581
 2067              	.L198:
2260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2068              		.loc 1 2260 34 view .LVU582
 2069 00a4 039B     		ldr	r3, [sp, #12]
 2070 00a6 002B     		cmp	r3, #0
 2071 00a8 00D0     		beq	.LCB1842
 2072 00aa 71E0     		b	.L199	@long jump
 2073              	.LCB1842:
 2074              	.LVL125:
ARM GAS  /tmp/ccrGR9oZ.s 			page 180


 2075              	.L195:
2160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2076              		.loc 1 2160 21 is_stmt 0 view .LVU583
 2077 00ac 0020     		movs	r0, #0
 2078              	.LVL126:
 2079              	.L201:
2339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2080              		.loc 1 2339 3 is_stmt 1 view .LVU584
2339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2081              		.loc 1 2339 3 view .LVU585
 2082 00ae 0023     		movs	r3, #0
 2083 00b0 5434     		adds	r4, r4, #84
 2084              	.LVL127:
2339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2085              		.loc 1 2339 3 is_stmt 0 view .LVU586
 2086 00b2 2370     		strb	r3, [r4]
2339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2087              		.loc 1 2339 3 is_stmt 1 view .LVU587
2341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2088              		.loc 1 2341 3 view .LVU588
 2089              	.LVL128:
 2090              	.L187:
2342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2091              		.loc 1 2342 1 is_stmt 0 view .LVU589
 2092 00b4 05B0     		add	sp, sp, #20
 2093              	.LVL129:
2342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2094              		.loc 1 2342 1 view .LVU590
 2095              		@ sp needed
 2096 00b6 F0BD     		pop	{r4, r5, r6, r7, pc}
 2097              	.LVL130:
 2098              	.L190:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2099              		.loc 1 2219 9 is_stmt 1 view .LVU591
 2100 00b8 1F21     		movs	r1, #31
 2101 00ba 6746     		mov	r7, ip
 2102 00bc 0F40     		ands	r7, r1
 2103 00be 1039     		subs	r1, r1, #16
 2104 00c0 B940     		lsls	r1, r1, r7
 2105 00c2 CE43     		mvns	r6, r1
 2106 00c4 0196     		str	r6, [sp, #4]
 2107 00c6 266E     		ldr	r6, [r4, #96]
 2108 00c8 8E43     		bics	r6, r1
 2109 00ca 3100     		movs	r1, r6
 2110 00cc 002A     		cmp	r2, #0
 2111 00ce 12D1     		bne	.L192
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2112              		.loc 1 2219 9 is_stmt 0 discriminator 1 view .LVU592
 2113 00d0 980E     		lsrs	r0, r3, #26
 2114 00d2 1F32     		adds	r2, r2, #31
 2115 00d4 1040     		ands	r0, r2
 2116              	.L193:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2117              		.loc 1 2219 9 discriminator 80 view .LVU593
 2118 00d6 B840     		lsls	r0, r0, r7
2227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2119              		.loc 1 2227 29 view .LVU594
ARM GAS  /tmp/ccrGR9oZ.s 			page 181


 2120 00d8 6246     		mov	r2, ip
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2121              		.loc 1 2219 9 discriminator 80 view .LVU595
 2122 00da 0843     		orrs	r0, r1
2227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2123              		.loc 1 2227 29 view .LVU596
 2124 00dc 9208     		lsrs	r2, r2, #2
2227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2125              		.loc 1 2227 12 view .LVU597
 2126 00de E169     		ldr	r1, [r4, #28]
2227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2127              		.loc 1 2227 37 view .LVU598
 2128 00e0 0132     		adds	r2, r2, #1
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2129              		.loc 1 2219 9 discriminator 80 view .LVU599
 2130 00e2 2066     		str	r0, [r4, #96]
2227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2131              		.loc 1 2227 9 is_stmt 1 view .LVU600
2227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2132              		.loc 1 2227 12 is_stmt 0 view .LVU601
 2133 00e4 8A42     		cmp	r2, r1
 2134 00e6 B5D8     		bhi	.L191
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2135              		.loc 1 2229 11 is_stmt 1 view .LVU602
 2136              	.LVL131:
 2137              	.LBB155:
 2138              	.LBI142:
3051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2139              		.loc 2 3051 22 view .LVU603
 2140              	.LBB144:
3057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2141              		.loc 2 3057 3 view .LVU604
 2142 00e8 A96A     		ldr	r1, [r5, #40]
 2143 00ea 0198     		ldr	r0, [sp, #4]
 2144 00ec 9A00     		lsls	r2, r3, #2
 2145 00ee 120F     		lsrs	r2, r2, #28
 2146 00f0 BA40     		lsls	r2, r2, r7
 2147 00f2 0140     		ands	r1, r0
 2148 00f4 ACE7     		b	.L224
 2149              	.LVL132:
 2150              	.L192:
3057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2151              		.loc 2 3057 3 is_stmt 0 view .LVU605
 2152              	.LBE144:
 2153              	.LBE155:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2154              		.loc 1 2219 9 discriminator 2 view .LVU606
 2155 00f6 0122     		movs	r2, #1
 2156 00f8 1342     		tst	r3, r2
 2157 00fa ECD1     		bne	.L193
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2158              		.loc 1 2219 9 discriminator 4 view .LVU607
 2159 00fc 9218     		adds	r2, r2, r2
 2160 00fe 1342     		tst	r3, r2
 2161 0100 24D1     		bne	.L206
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2162              		.loc 1 2219 9 discriminator 6 view .LVU608
ARM GAS  /tmp/ccrGR9oZ.s 			page 182


 2163 0102 0426     		movs	r6, #4
 2164 0104 3342     		tst	r3, r6
 2165 0106 23D1     		bne	.L207
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2166              		.loc 1 2219 9 discriminator 8 view .LVU609
 2167 0108 1A07     		lsls	r2, r3, #28
 2168 010a 23D4     		bmi	.L208
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2169              		.loc 1 2219 9 discriminator 10 view .LVU610
 2170 010c DA06     		lsls	r2, r3, #27
 2171 010e 23D4     		bmi	.L209
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2172              		.loc 1 2219 9 discriminator 12 view .LVU611
 2173 0110 9A06     		lsls	r2, r3, #26
 2174 0112 23D4     		bmi	.L210
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2175              		.loc 1 2219 9 discriminator 14 view .LVU612
 2176 0114 5A06     		lsls	r2, r3, #25
 2177 0116 23D4     		bmi	.L211
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2178              		.loc 1 2219 9 discriminator 16 view .LVU613
 2179 0118 1A06     		lsls	r2, r3, #24
 2180 011a 23D4     		bmi	.L212
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2181              		.loc 1 2219 9 discriminator 18 view .LVU614
 2182 011c DA05     		lsls	r2, r3, #23
 2183 011e 23D4     		bmi	.L213
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2184              		.loc 1 2219 9 discriminator 20 view .LVU615
 2185 0120 9A05     		lsls	r2, r3, #22
 2186 0122 23D4     		bmi	.L214
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2187              		.loc 1 2219 9 discriminator 22 view .LVU616
 2188 0124 5A05     		lsls	r2, r3, #21
 2189 0126 23D4     		bmi	.L215
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2190              		.loc 1 2219 9 discriminator 24 view .LVU617
 2191 0128 1A05     		lsls	r2, r3, #20
 2192 012a 23D4     		bmi	.L216
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2193              		.loc 1 2219 9 discriminator 26 view .LVU618
 2194 012c DA04     		lsls	r2, r3, #19
 2195 012e 23D4     		bmi	.L217
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2196              		.loc 1 2219 9 discriminator 28 view .LVU619
 2197 0130 9A04     		lsls	r2, r3, #18
 2198 0132 23D4     		bmi	.L218
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2199              		.loc 1 2219 9 discriminator 30 view .LVU620
 2200 0134 5A04     		lsls	r2, r3, #17
 2201 0136 23D4     		bmi	.L219
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2202              		.loc 1 2219 9 discriminator 32 view .LVU621
 2203 0138 1A04     		lsls	r2, r3, #16
 2204 013a 23D4     		bmi	.L220
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2205              		.loc 1 2219 9 discriminator 34 view .LVU622
ARM GAS  /tmp/ccrGR9oZ.s 			page 183


 2206 013c DA03     		lsls	r2, r3, #15
 2207 013e 23D4     		bmi	.L221
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2208              		.loc 1 2219 9 discriminator 36 view .LVU623
 2209 0140 9A03     		lsls	r2, r3, #14
 2210 0142 23D4     		bmi	.L222
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2211              		.loc 1 2219 9 discriminator 38 view .LVU624
 2212 0144 5A03     		lsls	r2, r3, #13
 2213 0146 C6D5     		bpl	.L193
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2214              		.loc 1 2219 9 discriminator 40 view .LVU625
 2215 0148 1220     		movs	r0, #18
 2216 014a C4E7     		b	.L193
 2217              	.L206:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2218              		.loc 1 2219 9 discriminator 7 view .LVU626
 2219 014c 0120     		movs	r0, #1
 2220 014e C2E7     		b	.L193
 2221              	.L207:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2222              		.loc 1 2219 9 discriminator 9 view .LVU627
 2223 0150 1000     		movs	r0, r2
 2224 0152 C0E7     		b	.L193
 2225              	.L208:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2226              		.loc 1 2219 9 discriminator 11 view .LVU628
 2227 0154 0320     		movs	r0, #3
 2228 0156 BEE7     		b	.L193
 2229              	.L209:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2230              		.loc 1 2219 9 discriminator 13 view .LVU629
 2231 0158 0420     		movs	r0, #4
 2232 015a BCE7     		b	.L193
 2233              	.L210:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2234              		.loc 1 2219 9 discriminator 15 view .LVU630
 2235 015c 0520     		movs	r0, #5
 2236 015e BAE7     		b	.L193
 2237              	.L211:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2238              		.loc 1 2219 9 discriminator 17 view .LVU631
 2239 0160 0620     		movs	r0, #6
 2240 0162 B8E7     		b	.L193
 2241              	.L212:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2242              		.loc 1 2219 9 discriminator 19 view .LVU632
 2243 0164 0720     		movs	r0, #7
 2244 0166 B6E7     		b	.L193
 2245              	.L213:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2246              		.loc 1 2219 9 discriminator 21 view .LVU633
 2247 0168 0820     		movs	r0, #8
 2248 016a B4E7     		b	.L193
 2249              	.L214:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2250              		.loc 1 2219 9 discriminator 23 view .LVU634
ARM GAS  /tmp/ccrGR9oZ.s 			page 184


 2251 016c 0920     		movs	r0, #9
 2252 016e B2E7     		b	.L193
 2253              	.L215:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2254              		.loc 1 2219 9 discriminator 25 view .LVU635
 2255 0170 0A20     		movs	r0, #10
 2256 0172 B0E7     		b	.L193
 2257              	.L216:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2258              		.loc 1 2219 9 discriminator 27 view .LVU636
 2259 0174 0B20     		movs	r0, #11
 2260 0176 AEE7     		b	.L193
 2261              	.L217:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2262              		.loc 1 2219 9 discriminator 29 view .LVU637
 2263 0178 0C20     		movs	r0, #12
 2264 017a ACE7     		b	.L193
 2265              	.L218:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2266              		.loc 1 2219 9 discriminator 31 view .LVU638
 2267 017c 0D20     		movs	r0, #13
 2268 017e AAE7     		b	.L193
 2269              	.L219:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2270              		.loc 1 2219 9 discriminator 33 view .LVU639
 2271 0180 0E20     		movs	r0, #14
 2272 0182 A8E7     		b	.L193
 2273              	.L220:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2274              		.loc 1 2219 9 discriminator 35 view .LVU640
 2275 0184 0F20     		movs	r0, #15
 2276 0186 A6E7     		b	.L193
 2277              	.L221:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2278              		.loc 1 2219 9 discriminator 37 view .LVU641
 2279 0188 1020     		movs	r0, #16
 2280 018a A4E7     		b	.L193
 2281              	.L222:
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2282              		.loc 1 2219 9 discriminator 39 view .LVU642
 2283 018c 1120     		movs	r0, #17
 2284 018e A2E7     		b	.L193
 2285              	.LVL133:
 2286              	.L199:
2262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2287              		.loc 1 2262 13 is_stmt 1 view .LVU643
2262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2288              		.loc 1 2262 28 is_stmt 0 view .LVU644
 2289 0190 039B     		ldr	r3, [sp, #12]
 2290 0192 013B     		subs	r3, r3, #1
 2291 0194 0393     		str	r3, [sp, #12]
 2292 0196 85E7     		b	.L198
 2293              	.LVL134:
 2294              	.L196:
2265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 2295              		.loc 1 2265 14 is_stmt 1 view .LVU645
2265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
ARM GAS  /tmp/ccrGR9oZ.s 			page 185


 2296              		.loc 1 2265 17 is_stmt 0 view .LVU646
 2297 0198 2948     		ldr	r0, .L229+24
 2298 019a 8342     		cmp	r3, r0
 2299 019c 0BD1     		bne	.L200
2266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2300              		.loc 1 2266 51 view .LVU647
 2301 019e 8020     		movs	r0, #128
 2302 01a0 4004     		lsls	r0, r0, #17
 2303              	.L228:
2266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2304              		.loc 1 2266 18 view .LVU648
 2305 01a2 0542     		tst	r5, r0
 2306 01a4 00D0     		beq	.LCB2126
 2307 01a6 81E7     		b	.L195	@long jump
 2308              	.LCB2126:
2268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 2309              		.loc 1 2268 11 is_stmt 1 view .LVU649
 2310              	.LVL135:
 2311              	.LBB156:
 2312              	.LBI156:
2035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2313              		.loc 2 2035 22 view .LVU650
 2314              	.LBB157:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2315              		.loc 2 2037 3 view .LVU651
 2316 01a8 1368     		ldr	r3, [r2]
 2317 01aa 224D     		ldr	r5, .L229+12
 2318 01ac 2B40     		ands	r3, r5
 2319 01ae 0B43     		orrs	r3, r1
 2320 01b0 1843     		orrs	r0, r3
 2321 01b2 1060     		str	r0, [r2]
 2322              	.LVL136:
2038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2323              		.loc 2 2038 1 is_stmt 0 view .LVU652
 2324 01b4 7AE7     		b	.L195
 2325              	.L200:
2038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2326              		.loc 2 2038 1 view .LVU653
 2327              	.LBE157:
 2328              	.LBE156:
2271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2329              		.loc 1 2271 14 is_stmt 1 view .LVU654
2271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2330              		.loc 1 2271 17 is_stmt 0 view .LVU655
 2331 01b6 2348     		ldr	r0, .L229+28
 2332 01b8 8342     		cmp	r3, r0
 2333 01ba 00D0     		beq	.LCB2152
 2334 01bc 76E7     		b	.L195	@long jump
 2335              	.LCB2152:
2272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2336              		.loc 1 2272 48 view .LVU656
 2337 01be 8020     		movs	r0, #128
 2338 01c0 C003     		lsls	r0, r0, #15
 2339 01c2 EEE7     		b	.L228
 2340              	.LVL137:
 2341              	.L189:
2290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
ARM GAS  /tmp/ccrGR9oZ.s 			page 186


 2342              		.loc 1 2290 7 is_stmt 1 view .LVU657
2290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2343              		.loc 1 2290 10 is_stmt 0 view .LVU658
 2344 01c4 8F42     		cmp	r7, r1
 2345 01c6 04D1     		bne	.L202
2295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 2346              		.loc 1 2295 9 is_stmt 1 view .LVU659
 2347              	.LVL138:
 2348              	.LBB158:
 2349              	.LBI158:
3410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2350              		.loc 2 3410 22 view .LVU660
 2351              	.LBB159:
3414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2352              		.loc 2 3414 3 view .LVU661
 2353 01c8 AA6A     		ldr	r2, [r5, #40]
 2354 01ca 5903     		lsls	r1, r3, #13
 2355 01cc 490B     		lsrs	r1, r1, #13
 2356 01ce 8A43     		bics	r2, r1
 2357 01d0 AA62     		str	r2, [r5, #40]
 2358              	.LVL139:
 2359              	.L202:
3414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2360              		.loc 2 3414 3 is_stmt 0 view .LVU662
 2361              	.LBE159:
 2362              	.LBE158:
2301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2363              		.loc 1 2301 7 is_stmt 1 view .LVU663
2301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2364              		.loc 1 2301 10 is_stmt 0 view .LVU664
 2365 01d2 002B     		cmp	r3, #0
 2366 01d4 00DB     		blt	.LCB2184
 2367 01d6 69E7     		b	.L195	@long jump
 2368              	.LCB2184:
2303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2369              		.loc 1 2303 9 is_stmt 1 view .LVU665
 2370              	.LVL140:
 2371              	.LBB160:
 2372              	.LBI160:
2129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2373              		.loc 2 2129 26 view .LVU666
 2374              	.LBB161:
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2375              		.loc 2 2131 3 view .LVU667
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2376              		.loc 2 2131 21 is_stmt 0 view .LVU668
 2377 01d8 144A     		ldr	r2, .L229+4
 2378              	.LBE161:
 2379              	.LBE160:
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2380              		.loc 1 2305 12 view .LVU669
 2381 01da 1548     		ldr	r0, .L229+8
 2382              	.LBB163:
 2383              	.LBB162:
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2384              		.loc 2 2131 21 view .LVU670
 2385 01dc 1168     		ldr	r1, [r2]
ARM GAS  /tmp/ccrGR9oZ.s 			page 187


 2386              	.LVL141:
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2387              		.loc 2 2131 21 view .LVU671
 2388              	.LBE162:
 2389              	.LBE163:
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2390              		.loc 1 2305 9 is_stmt 1 view .LVU672
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2391              		.loc 1 2305 12 is_stmt 0 view .LVU673
 2392 01de 8342     		cmp	r3, r0
 2393 01e0 08D1     		bne	.L203
2307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_TEMPSENSOR & tmp_config_internal_cha
 2394              		.loc 1 2307 11 is_stmt 1 view .LVU674
 2395              	.LVL142:
 2396              	.LBB164:
 2397              	.LBI164:
2035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2398              		.loc 2 2035 22 view .LVU675
 2399              	.LBB165:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2400              		.loc 2 2037 3 view .LVU676
 2401              	.LBE165:
 2402              	.LBE164:
2307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_TEMPSENSOR & tmp_config_internal_cha
 2403              		.loc 1 2307 11 is_stmt 0 view .LVU677
 2404 01e2 A023     		movs	r3, #160
 2405              	.LBB167:
 2406              	.LBB166:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2407              		.loc 2 2037 3 view .LVU678
 2408 01e4 1068     		ldr	r0, [r2]
 2409              	.LBE166:
 2410              	.LBE167:
2307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_TEMPSENSOR & tmp_config_internal_cha
 2411              		.loc 1 2307 11 view .LVU679
 2412 01e6 5B04     		lsls	r3, r3, #17
 2413              	.LVL143:
 2414              	.L226:
2312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VBAT & tmp_config_internal_channel);
 2415              		.loc 1 2312 11 view .LVU680
 2416 01e8 0B40     		ands	r3, r1
 2417              	.LBB168:
 2418              	.LBB169:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2419              		.loc 2 2037 3 view .LVU681
 2420 01ea 1249     		ldr	r1, .L229+12
 2421              	.LVL144:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2422              		.loc 2 2037 3 view .LVU682
 2423 01ec 0140     		ands	r1, r0
 2424 01ee 0B43     		orrs	r3, r1
 2425 01f0 1360     		str	r3, [r2]
2038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2426              		.loc 2 2038 1 view .LVU683
 2427 01f2 5BE7     		b	.L195
 2428              	.LVL145:
 2429              	.L203:
ARM GAS  /tmp/ccrGR9oZ.s 			page 188


2038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2430              		.loc 2 2038 1 view .LVU684
 2431              	.LBE169:
 2432              	.LBE168:
2310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2433              		.loc 1 2310 14 is_stmt 1 view .LVU685
2310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2434              		.loc 1 2310 17 is_stmt 0 view .LVU686
 2435 01f4 1248     		ldr	r0, .L229+24
 2436 01f6 8342     		cmp	r3, r0
 2437 01f8 03D1     		bne	.L204
2312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VBAT & tmp_config_internal_channel);
 2438              		.loc 1 2312 11 is_stmt 1 view .LVU687
 2439              	.LVL146:
 2440              	.LBB172:
 2441              	.LBI168:
2035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2442              		.loc 2 2035 22 view .LVU688
 2443              	.LBB170:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2444              		.loc 2 2037 3 view .LVU689
 2445              	.LBE170:
 2446              	.LBE172:
2312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VBAT & tmp_config_internal_channel);
 2447              		.loc 1 2312 11 is_stmt 0 view .LVU690
 2448 01fa C023     		movs	r3, #192
 2449              	.LBB173:
 2450              	.LBB171:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2451              		.loc 2 2037 3 view .LVU691
 2452 01fc 1068     		ldr	r0, [r2]
 2453              	.LBE171:
 2454              	.LBE173:
2312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VBAT & tmp_config_internal_channel);
 2455              		.loc 1 2312 11 view .LVU692
 2456 01fe 1B04     		lsls	r3, r3, #16
 2457 0200 F2E7     		b	.L226
 2458              	.LVL147:
 2459              	.L204:
2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2460              		.loc 1 2315 14 is_stmt 1 view .LVU693
2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2461              		.loc 1 2315 17 is_stmt 0 view .LVU694
 2462 0202 1048     		ldr	r0, .L229+28
 2463 0204 8342     		cmp	r3, r0
 2464 0206 00D0     		beq	.LCB2270
 2465 0208 50E7     		b	.L195	@long jump
 2466              	.LCB2270:
2317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VREFINT & tmp_config_internal_channe
 2467              		.loc 1 2317 11 is_stmt 1 view .LVU695
 2468              	.LVL148:
 2469              	.LBB174:
 2470              	.LBI174:
2035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2471              		.loc 2 2035 22 view .LVU696
 2472              	.LBB175:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
ARM GAS  /tmp/ccrGR9oZ.s 			page 189


 2473              		.loc 2 2037 3 view .LVU697
 2474              	.LBE175:
 2475              	.LBE174:
2317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VREFINT & tmp_config_internal_channe
 2476              		.loc 1 2317 11 is_stmt 0 view .LVU698
 2477 020a C020     		movs	r0, #192
 2478 020c 4004     		lsls	r0, r0, #17
 2479              	.LBB178:
 2480              	.LBB176:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2481              		.loc 2 2037 3 view .LVU699
 2482 020e 1368     		ldr	r3, [r2]
 2483              	.LBE176:
 2484              	.LBE178:
2317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VREFINT & tmp_config_internal_channe
 2485              		.loc 1 2317 11 view .LVU700
 2486 0210 0140     		ands	r1, r0
 2487              	.LVL149:
 2488              	.LBB179:
 2489              	.LBB177:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2490              		.loc 2 2037 3 view .LVU701
 2491 0212 0848     		ldr	r0, .L229+12
 2492 0214 0340     		ands	r3, r0
 2493 0216 1943     		orrs	r1, r3
 2494 0218 1160     		str	r1, [r2]
 2495              	.LVL150:
2038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2496              		.loc 2 2038 1 view .LVU702
 2497 021a 47E7     		b	.L195
 2498              	.LVL151:
 2499              	.L188:
2038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2500              		.loc 2 2038 1 view .LVU703
 2501              	.LBE177:
 2502              	.LBE179:
2334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2503              		.loc 1 2334 5 is_stmt 1 view .LVU704
 2504 021c 2023     		movs	r3, #32
 2505 021e A26D     		ldr	r2, [r4, #88]
2336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2506              		.loc 1 2336 20 is_stmt 0 view .LVU705
 2507 0220 0120     		movs	r0, #1
2334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2508              		.loc 1 2334 5 view .LVU706
 2509 0222 1343     		orrs	r3, r2
 2510 0224 A365     		str	r3, [r4, #88]
2336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2511              		.loc 1 2336 5 is_stmt 1 view .LVU707
 2512              	.LVL152:
2336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2513              		.loc 1 2336 5 is_stmt 0 view .LVU708
 2514 0226 42E7     		b	.L201
 2515              	.L230:
 2516              		.align	2
 2517              	.L229:
 2518 0228 00FFFF07 		.word	134217472
ARM GAS  /tmp/ccrGR9oZ.s 			page 190


 2519 022c 08270140 		.word	1073817352
 2520 0230 001000B0 		.word	-1342173184
 2521 0234 FFFF3FFE 		.word	-29360129
 2522 0238 00000000 		.word	SystemCoreClock
 2523 023c 400D0300 		.word	200000
 2524 0240 004000B8 		.word	-1207943168
 2525 0244 002000B4 		.word	-1275060224
 2526              		.cfi_endproc
 2527              	.LFE438:
 2529              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2530              		.align	1
 2531              		.global	HAL_ADC_GetState
 2532              		.syntax unified
 2533              		.code	16
 2534              		.thumb_func
 2536              	HAL_ADC_GetState:
 2537              	.LVL153:
 2538              	.LFB440:
2603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
 2539              		.loc 1 2603 1 is_stmt 1 view -0
 2540              		.cfi_startproc
 2541              		@ args = 0, pretend = 0, frame = 0
 2542              		@ frame_needed = 0, uses_anonymous_args = 0
 2543              		@ link register save eliminated.
2605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2544              		.loc 1 2605 3 view .LVU710
2608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2545              		.loc 1 2608 3 view .LVU711
2608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2546              		.loc 1 2608 14 is_stmt 0 view .LVU712
 2547 0000 806D     		ldr	r0, [r0, #88]
 2548              	.LVL154:
2609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2549              		.loc 1 2609 1 view .LVU713
 2550              		@ sp needed
 2551 0002 7047     		bx	lr
 2552              		.cfi_endproc
 2553              	.LFE440:
 2555              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2556              		.align	1
 2557              		.global	HAL_ADC_GetError
 2558              		.syntax unified
 2559              		.code	16
 2560              		.thumb_func
 2562              	HAL_ADC_GetError:
 2563              	.LVL155:
 2564              	.LFB441:
2617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
 2565              		.loc 1 2617 1 is_stmt 1 view -0
 2566              		.cfi_startproc
 2567              		@ args = 0, pretend = 0, frame = 0
 2568              		@ frame_needed = 0, uses_anonymous_args = 0
 2569              		@ link register save eliminated.
2619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2570              		.loc 1 2619 3 view .LVU715
2621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2571              		.loc 1 2621 3 view .LVU716
ARM GAS  /tmp/ccrGR9oZ.s 			page 191


2621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2572              		.loc 1 2621 14 is_stmt 0 view .LVU717
 2573 0000 C06D     		ldr	r0, [r0, #92]
 2574              	.LVL156:
2622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2575              		.loc 1 2622 1 view .LVU718
 2576              		@ sp needed
 2577 0002 7047     		bx	lr
 2578              		.cfi_endproc
 2579              	.LFE441:
 2581              		.section	.text.ADC_ConversionStop,"ax",%progbits
 2582              		.align	1
 2583              		.global	ADC_ConversionStop
 2584              		.syntax unified
 2585              		.code	16
 2586              		.thumb_func
 2588              	ADC_ConversionStop:
 2589              	.LVL157:
 2590              	.LFB442:
2644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 2591              		.loc 1 2644 1 is_stmt 1 view -0
 2592              		.cfi_startproc
 2593              		@ args = 0, pretend = 0, frame = 0
 2594              		@ frame_needed = 0, uses_anonymous_args = 0
2645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2595              		.loc 1 2645 3 view .LVU720
2648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2596              		.loc 1 2648 3 view .LVU721
2652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2597              		.loc 1 2652 3 view .LVU722
2644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 2598              		.loc 1 2644 1 is_stmt 0 view .LVU723
 2599 0000 70B5     		push	{r4, r5, r6, lr}
 2600              	.LCFI11:
 2601              		.cfi_def_cfa_offset 16
 2602              		.cfi_offset 4, -16
 2603              		.cfi_offset 5, -12
 2604              		.cfi_offset 6, -8
 2605              		.cfi_offset 14, -4
2652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2606              		.loc 1 2652 7 view .LVU724
 2607 0002 0568     		ldr	r5, [r0]
2644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 2608              		.loc 1 2644 1 view .LVU725
 2609 0004 0400     		movs	r4, r0
2652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2610              		.loc 1 2652 7 view .LVU726
 2611 0006 2800     		movs	r0, r5
 2612              	.LVL158:
2652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2613              		.loc 1 2652 7 view .LVU727
 2614 0008 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 2615              	.LVL159:
2652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2616              		.loc 1 2652 6 discriminator 1 view .LVU728
 2617 000c 0028     		cmp	r0, #0
 2618 000e 01D1     		bne	.L234
ARM GAS  /tmp/ccrGR9oZ.s 			page 192


 2619              	.L239:
2687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2620              		.loc 1 2687 10 view .LVU729
 2621 0010 0020     		movs	r0, #0
 2622              	.L235:
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2623              		.loc 1 2688 1 view .LVU730
 2624              		@ sp needed
 2625              	.LVL160:
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2626              		.loc 1 2688 1 view .LVU731
 2627 0012 70BD     		pop	{r4, r5, r6, pc}
 2628              	.LVL161:
 2629              	.L234:
2656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2630              		.loc 1 2656 5 is_stmt 1 view .LVU732
 2631              	.LBB184:
 2632              	.LBI184:
4568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2633              		.loc 2 4568 26 view .LVU733
 2634              	.LBB185:
4570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2635              		.loc 2 4570 3 view .LVU734
4570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2636              		.loc 2 4570 12 is_stmt 0 view .LVU735
 2637 0014 AB68     		ldr	r3, [r5, #8]
4570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2638              		.loc 2 4570 70 view .LVU736
 2639 0016 9B07     		lsls	r3, r3, #30
 2640 0018 05D4     		bmi	.L236
 2641              	.LVL162:
4570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2642              		.loc 2 4570 70 view .LVU737
 2643              	.LBE185:
 2644              	.LBE184:
2659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 2645              		.loc 1 2659 7 is_stmt 1 view .LVU738
 2646              	.LBB186:
 2647              	.LBI186:
4668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2648              		.loc 2 4668 22 view .LVU739
 2649              	.LBB187:
4673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2650              		.loc 2 4673 3 view .LVU740
 2651 001a AA68     		ldr	r2, [r5, #8]
 2652 001c 0F4B     		ldr	r3, .L244
 2653 001e 1A40     		ands	r2, r3
 2654 0020 1023     		movs	r3, #16
 2655 0022 1343     		orrs	r3, r2
 2656 0024 AB60     		str	r3, [r5, #8]
 2657              	.LVL163:
 2658              	.L236:
4673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2659              		.loc 2 4673 3 is_stmt 0 view .LVU741
 2660              	.LBE187:
 2661              	.LBE186:
2664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  /tmp/ccrGR9oZ.s 			page 193


 2662              		.loc 1 2664 5 is_stmt 1 view .LVU742
2664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2663              		.loc 1 2664 17 is_stmt 0 view .LVU743
 2664 0026 FFF7FEFF 		bl	HAL_GetTick
 2665              	.LVL164:
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2666              		.loc 1 2666 32 view .LVU744
 2667 002a 0426     		movs	r6, #4
2664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2668              		.loc 1 2664 17 view .LVU745
 2669 002c 0500     		movs	r5, r0
 2670              	.LVL165:
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2671              		.loc 1 2666 5 is_stmt 1 view .LVU746
 2672              	.L241:
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2673              		.loc 1 2666 50 view .LVU747
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2674              		.loc 1 2666 17 is_stmt 0 view .LVU748
 2675 002e 2368     		ldr	r3, [r4]
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2676              		.loc 1 2666 27 view .LVU749
 2677 0030 9B68     		ldr	r3, [r3, #8]
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2678              		.loc 1 2666 50 view .LVU750
 2679 0032 3342     		tst	r3, r6
 2680 0034 ECD0     		beq	.L239
2668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2681              		.loc 1 2668 7 is_stmt 1 view .LVU751
2668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2682              		.loc 1 2668 12 is_stmt 0 view .LVU752
 2683 0036 FFF7FEFF 		bl	HAL_GetTick
 2684              	.LVL166:
2668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2685              		.loc 1 2668 26 discriminator 1 view .LVU753
 2686 003a 401B     		subs	r0, r0, r5
2668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2687              		.loc 1 2668 10 discriminator 1 view .LVU754
 2688 003c 0228     		cmp	r0, #2
 2689 003e F6D9     		bls	.L241
2671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2690              		.loc 1 2671 9 is_stmt 1 view .LVU755
2671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2691              		.loc 1 2671 18 is_stmt 0 view .LVU756
 2692 0040 2368     		ldr	r3, [r4]
2671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2693              		.loc 1 2671 28 view .LVU757
 2694 0042 9B68     		ldr	r3, [r3, #8]
2671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2695              		.loc 1 2671 12 view .LVU758
 2696 0044 3342     		tst	r3, r6
 2697 0046 F2D0     		beq	.L241
2674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2698              		.loc 1 2674 11 is_stmt 1 view .LVU759
 2699 0048 1023     		movs	r3, #16
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2700              		.loc 1 2677 11 is_stmt 0 view .LVU760
ARM GAS  /tmp/ccrGR9oZ.s 			page 194


 2701 004a 0120     		movs	r0, #1
2674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2702              		.loc 1 2674 11 view .LVU761
 2703 004c A26D     		ldr	r2, [r4, #88]
 2704 004e 1343     		orrs	r3, r2
 2705 0050 A365     		str	r3, [r4, #88]
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2706              		.loc 1 2677 11 is_stmt 1 view .LVU762
 2707 0052 E36D     		ldr	r3, [r4, #92]
 2708 0054 0343     		orrs	r3, r0
 2709 0056 E365     		str	r3, [r4, #92]
2679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2710              		.loc 1 2679 11 view .LVU763
2679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2711              		.loc 1 2679 18 is_stmt 0 view .LVU764
 2712 0058 DBE7     		b	.L235
 2713              	.L245:
 2714 005a C046     		.align	2
 2715              	.L244:
 2716 005c E8FFFF7F 		.word	2147483624
 2717              		.cfi_endproc
 2718              	.LFE442:
 2720              		.section	.text.ADC_Enable,"ax",%progbits
 2721              		.align	1
 2722              		.global	ADC_Enable
 2723              		.syntax unified
 2724              		.code	16
 2725              		.thumb_func
 2727              	ADC_Enable:
 2728              	.LVL167:
 2729              	.LFB443:
2698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 2730              		.loc 1 2698 1 is_stmt 1 view -0
 2731              		.cfi_startproc
 2732              		@ args = 0, pretend = 0, frame = 8
 2733              		@ frame_needed = 0, uses_anonymous_args = 0
2699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 2734              		.loc 1 2699 3 view .LVU766
2700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2735              		.loc 1 2700 3 view .LVU767
2700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2736              		.loc 1 2700 17 is_stmt 0 view .LVU768
 2737 0000 0023     		movs	r3, #0
2698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 2738              		.loc 1 2698 1 view .LVU769
 2739 0002 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2740              	.LCFI12:
 2741              		.cfi_def_cfa_offset 32
 2742              		.cfi_offset 0, -32
 2743              		.cfi_offset 1, -28
 2744              		.cfi_offset 2, -24
 2745              		.cfi_offset 4, -20
 2746              		.cfi_offset 5, -16
 2747              		.cfi_offset 6, -12
 2748              		.cfi_offset 7, -8
 2749              		.cfi_offset 14, -4
2706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
ARM GAS  /tmp/ccrGR9oZ.s 			page 195


 2750              		.loc 1 2706 7 view .LVU770
 2751 0004 0268     		ldr	r2, [r0]
2700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2752              		.loc 1 2700 17 view .LVU771
 2753 0006 0193     		str	r3, [sp, #4]
2706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2754              		.loc 1 2706 3 is_stmt 1 view .LVU772
 2755              	.LVL168:
 2756              	.LBB198:
 2757              	.LBI198:
4557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2758              		.loc 2 4557 26 view .LVU773
 2759              	.LBB199:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2760              		.loc 2 4559 3 view .LVU774
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2761              		.loc 2 4559 12 is_stmt 0 view .LVU775
 2762 0008 9168     		ldr	r1, [r2, #8]
 2763 000a 0133     		adds	r3, r3, #1
 2764              	.LBE199:
 2765              	.LBE198:
2698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 2766              		.loc 1 2698 1 view .LVU776
 2767 000c 0400     		movs	r4, r0
 2768              	.LBB201:
 2769              	.LBB200:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2770              		.loc 2 4559 68 view .LVU777
 2771 000e 1942     		tst	r1, r3
 2772 0010 01D0     		beq	.L247
 2773              	.LVL169:
 2774              	.L253:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2775              		.loc 2 4559 68 view .LVU778
 2776              	.LBE200:
 2777              	.LBE201:
2780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2778              		.loc 1 2780 10 view .LVU779
 2779 0012 0020     		movs	r0, #0
 2780              	.L248:
2781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2781              		.loc 1 2781 1 view .LVU780
 2782              		@ sp needed
 2783              	.LVL170:
2781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2784              		.loc 1 2781 1 view .LVU781
 2785 0014 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2786              	.LVL171:
 2787              	.L247:
2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2788              		.loc 1 2709 5 is_stmt 1 view .LVU782
2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2789              		.loc 1 2709 24 is_stmt 0 view .LVU783
 2790 0016 9068     		ldr	r0, [r2, #8]
 2791              	.LVL172:
2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2792              		.loc 1 2709 29 view .LVU784
ARM GAS  /tmp/ccrGR9oZ.s 			page 196


 2793 0018 2249     		ldr	r1, .L262
2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2794              		.loc 1 2709 8 view .LVU785
 2795 001a 0842     		tst	r0, r1
 2796 001c 08D0     		beq	.L249
2712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2797              		.loc 1 2712 7 is_stmt 1 view .LVU786
 2798 001e 1022     		movs	r2, #16
 2799 0020 A16D     		ldr	r1, [r4, #88]
 2800 0022 0A43     		orrs	r2, r1
 2801 0024 A265     		str	r2, [r4, #88]
2715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2802              		.loc 1 2715 7 view .LVU787
 2803 0026 E26D     		ldr	r2, [r4, #92]
 2804 0028 1343     		orrs	r3, r2
 2805              	.L261:
2717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 2806              		.loc 1 2717 14 is_stmt 0 view .LVU788
 2807 002a 0120     		movs	r0, #1
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2808              		.loc 1 2770 13 view .LVU789
 2809 002c E365     		str	r3, [r4, #92]
2772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2810              		.loc 1 2772 13 is_stmt 1 view .LVU790
 2811 002e F1E7     		b	.L248
 2812              	.L249:
2721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2813              		.loc 1 2721 5 view .LVU791
 2814              	.LVL173:
 2815              	.LBB202:
 2816              	.LBI202:
4518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2817              		.loc 2 4518 22 view .LVU792
 2818              	.LBB203:
4523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2819              		.loc 2 4523 3 view .LVU793
 2820 0030 9168     		ldr	r1, [r2, #8]
 2821 0032 1D4F     		ldr	r7, .L262+4
 2822 0034 3940     		ands	r1, r7
 2823 0036 0B43     		orrs	r3, r1
 2824 0038 9360     		str	r3, [r2, #8]
 2825              	.LVL174:
4523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2826              		.loc 2 4523 3 is_stmt 0 view .LVU794
 2827              	.LBE203:
 2828              	.LBE202:
2723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         != 0UL)
 2829              		.loc 1 2723 5 is_stmt 1 view .LVU795
 2830              	.LBB204:
 2831              	.LBI204:
2129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2832              		.loc 2 2129 26 view .LVU796
 2833              	.LBB205:
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2834              		.loc 2 2131 3 view .LVU797
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2835              		.loc 2 2131 21 is_stmt 0 view .LVU798
ARM GAS  /tmp/ccrGR9oZ.s 			page 197


 2836 003a 1C4B     		ldr	r3, .L262+8
 2837 003c 1B68     		ldr	r3, [r3]
 2838              	.LVL175:
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2839              		.loc 2 2131 21 view .LVU799
 2840              	.LBE205:
 2841              	.LBE204:
2723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         != 0UL)
 2842              		.loc 1 2723 8 discriminator 1 view .LVU800
 2843 003e 1B02     		lsls	r3, r3, #8
 2844 0040 21D4     		bmi	.L251
 2845              	.L256:
2741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2846              		.loc 1 2741 5 is_stmt 1 view .LVU801
2741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2847              		.loc 1 2741 8 is_stmt 0 view .LVU802
 2848 0042 637E     		ldrb	r3, [r4, #25]
 2849 0044 012B     		cmp	r3, #1
 2850 0046 E4D0     		beq	.L253
2744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2851              		.loc 1 2744 7 is_stmt 1 view .LVU803
2744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2852              		.loc 1 2744 19 is_stmt 0 view .LVU804
 2853 0048 FFF7FEFF 		bl	HAL_GetTick
 2854              	.LVL176:
2746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2855              		.loc 1 2746 14 view .LVU805
 2856 004c 0125     		movs	r5, #1
2744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2857              		.loc 1 2744 19 view .LVU806
 2858 004e 0600     		movs	r6, r0
 2859              	.LVL177:
2746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2860              		.loc 1 2746 7 is_stmt 1 view .LVU807
 2861              	.L260:
2746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2862              		.loc 1 2746 53 view .LVU808
2746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2863              		.loc 1 2746 14 is_stmt 0 view .LVU809
 2864 0050 2268     		ldr	r2, [r4]
 2865 0052 1368     		ldr	r3, [r2]
2746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2866              		.loc 1 2746 53 view .LVU810
 2867 0054 2B42     		tst	r3, r5
 2868 0056 DCD1     		bne	.L253
2756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2869              		.loc 1 2756 9 is_stmt 1 view .LVU811
 2870              	.LVL178:
 2871              	.LBB206:
 2872              	.LBI206:
4557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2873              		.loc 2 4557 26 view .LVU812
 2874              	.LBB207:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2875              		.loc 2 4559 3 view .LVU813
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2876              		.loc 2 4559 12 is_stmt 0 view .LVU814
ARM GAS  /tmp/ccrGR9oZ.s 			page 198


 2877 0058 9368     		ldr	r3, [r2, #8]
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2878              		.loc 2 4559 68 view .LVU815
 2879 005a 2B42     		tst	r3, r5
 2880 005c 03D1     		bne	.L258
 2881              	.LVL179:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2882              		.loc 2 4559 68 view .LVU816
 2883              	.LBE207:
 2884              	.LBE206:
2758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2885              		.loc 1 2758 11 is_stmt 1 view .LVU817
 2886              	.LBB208:
 2887              	.LBI208:
4518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2888              		.loc 2 4518 22 view .LVU818
 2889              	.LBB209:
4523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2890              		.loc 2 4523 3 view .LVU819
 2891 005e 9368     		ldr	r3, [r2, #8]
 2892 0060 3B40     		ands	r3, r7
 2893 0062 2B43     		orrs	r3, r5
 2894 0064 9360     		str	r3, [r2, #8]
 2895              	.LVL180:
 2896              	.L258:
4523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2897              		.loc 2 4523 3 is_stmt 0 view .LVU820
 2898              	.LBE209:
 2899              	.LBE208:
2761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2900              		.loc 1 2761 9 is_stmt 1 view .LVU821
2761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2901              		.loc 1 2761 14 is_stmt 0 view .LVU822
 2902 0066 FFF7FEFF 		bl	HAL_GetTick
 2903              	.LVL181:
2761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2904              		.loc 1 2761 28 discriminator 1 view .LVU823
 2905 006a 801B     		subs	r0, r0, r6
2761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2906              		.loc 1 2761 12 discriminator 1 view .LVU824
 2907 006c 0228     		cmp	r0, #2
 2908 006e EFD9     		bls	.L260
2764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2909              		.loc 1 2764 11 is_stmt 1 view .LVU825
2764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2910              		.loc 1 2764 15 is_stmt 0 view .LVU826
 2911 0070 2368     		ldr	r3, [r4]
 2912 0072 1B68     		ldr	r3, [r3]
2764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2913              		.loc 1 2764 14 view .LVU827
 2914 0074 2B42     		tst	r3, r5
 2915 0076 EBD1     		bne	.L260
2767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2916              		.loc 1 2767 13 is_stmt 1 view .LVU828
 2917 0078 1023     		movs	r3, #16
 2918 007a A26D     		ldr	r2, [r4, #88]
 2919 007c 1343     		orrs	r3, r2
ARM GAS  /tmp/ccrGR9oZ.s 			page 199


 2920 007e A365     		str	r3, [r4, #88]
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2921              		.loc 1 2770 13 view .LVU829
 2922 0080 E36D     		ldr	r3, [r4, #92]
 2923 0082 2B43     		orrs	r3, r5
 2924 0084 D1E7     		b	.L261
 2925              	.LVL182:
 2926              	.L251:
2731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                          * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 2927              		.loc 1 2731 7 view .LVU830
2732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 2928              		.loc 1 2732 46 is_stmt 0 view .LVU831
 2929 0086 0A4B     		ldr	r3, .L262+12
 2930 0088 0A49     		ldr	r1, .L262+16
 2931 008a 1868     		ldr	r0, [r3]
 2932 008c FFF7FEFF 		bl	__aeabi_uidiv
 2933              	.LVL183:
2732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 2934              		.loc 1 2732 26 view .LVU832
 2935 0090 0130     		adds	r0, r0, #1
2731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                          * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 2936              		.loc 1 2731 23 view .LVU833
 2937 0092 0190     		str	r0, [sp, #4]
2733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2938              		.loc 1 2733 7 is_stmt 1 view .LVU834
 2939              	.L254:
2733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2940              		.loc 1 2733 30 view .LVU835
 2941 0094 019B     		ldr	r3, [sp, #4]
 2942 0096 002B     		cmp	r3, #0
 2943 0098 D3D0     		beq	.L256
2735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 2944              		.loc 1 2735 9 view .LVU836
2735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 2945              		.loc 1 2735 24 is_stmt 0 view .LVU837
 2946 009a 019B     		ldr	r3, [sp, #4]
 2947 009c 013B     		subs	r3, r3, #1
 2948 009e 0193     		str	r3, [sp, #4]
 2949 00a0 F8E7     		b	.L254
 2950              	.L263:
 2951 00a2 C046     		.align	2
 2952              	.L262:
 2953 00a4 17000080 		.word	-2147483625
 2954 00a8 E8FFFF7F 		.word	2147483624
 2955 00ac 08270140 		.word	1073817352
 2956 00b0 00000000 		.word	SystemCoreClock
 2957 00b4 400D0300 		.word	200000
 2958              		.cfi_endproc
 2959              	.LFE443:
 2961              		.section	.text.HAL_ADC_Start,"ax",%progbits
 2962              		.align	1
 2963              		.global	HAL_ADC_Start
 2964              		.syntax unified
 2965              		.code	16
 2966              		.thumb_func
 2968              	HAL_ADC_Start:
 2969              	.LVL184:
ARM GAS  /tmp/ccrGR9oZ.s 			page 200


 2970              	.LFB424:
1138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 2971              		.loc 1 1138 1 is_stmt 1 view -0
 2972              		.cfi_startproc
 2973              		@ args = 0, pretend = 0, frame = 0
 2974              		@ frame_needed = 0, uses_anonymous_args = 0
1139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2975              		.loc 1 1139 3 view .LVU839
1142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2976              		.loc 1 1142 3 view .LVU840
1145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2977              		.loc 1 1145 3 view .LVU841
1138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 2978              		.loc 1 1138 1 is_stmt 0 view .LVU842
 2979 0000 70B5     		push	{r4, r5, r6, lr}
 2980              	.LCFI13:
 2981              		.cfi_def_cfa_offset 16
 2982              		.cfi_offset 4, -16
 2983              		.cfi_offset 5, -12
 2984              		.cfi_offset 6, -8
 2985              		.cfi_offset 14, -4
1138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 2986              		.loc 1 1138 1 view .LVU843
 2987 0002 0400     		movs	r4, r0
1145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2988              		.loc 1 1145 7 view .LVU844
 2989 0004 0068     		ldr	r0, [r0]
 2990              	.LVL185:
1145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2991              		.loc 1 1145 7 view .LVU845
 2992 0006 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 2993              	.LVL186:
 2994 000a 0600     		movs	r6, r0
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2995              		.loc 1 1147 5 discriminator 1 view .LVU846
 2996 000c 0220     		movs	r0, #2
1145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2997              		.loc 1 1145 6 discriminator 1 view .LVU847
 2998 000e 002E     		cmp	r6, #0
 2999 0010 1DD1     		bne	.L265
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3000              		.loc 1 1147 5 is_stmt 1 view .LVU848
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3001              		.loc 1 1147 5 view .LVU849
 3002 0012 2500     		movs	r5, r4
 3003 0014 5435     		adds	r5, r5, #84
 3004 0016 2B78     		ldrb	r3, [r5]
 3005 0018 012B     		cmp	r3, #1
 3006 001a 18D0     		beq	.L265
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3007              		.loc 1 1147 5 discriminator 2 view .LVU850
 3008 001c 0123     		movs	r3, #1
1150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3009              		.loc 1 1150 22 is_stmt 0 view .LVU851
 3010 001e 2000     		movs	r0, r4
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3011              		.loc 1 1147 5 discriminator 2 view .LVU852
ARM GAS  /tmp/ccrGR9oZ.s 			page 201


 3012 0020 2B70     		strb	r3, [r5]
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3013              		.loc 1 1147 5 is_stmt 1 discriminator 2 view .LVU853
1150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3014              		.loc 1 1150 5 view .LVU854
1150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3015              		.loc 1 1150 22 is_stmt 0 view .LVU855
 3016 0022 FFF7FEFF 		bl	ADC_Enable
 3017              	.LVL187:
1153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3018              		.loc 1 1153 5 is_stmt 1 view .LVU856
1153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3019              		.loc 1 1153 8 is_stmt 0 view .LVU857
 3020 0026 0028     		cmp	r0, #0
 3021 0028 12D1     		bne	.L266
1158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3022              		.loc 1 1158 7 is_stmt 1 view .LVU858
 3023 002a A26D     		ldr	r2, [r4, #88]
 3024 002c 094B     		ldr	r3, .L269
 3025 002e 1A40     		ands	r2, r3
 3026 0030 8023     		movs	r3, #128
 3027 0032 5B00     		lsls	r3, r3, #1
 3028 0034 1343     		orrs	r3, r2
1168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3029              		.loc 1 1168 7 is_stmt 0 view .LVU859
 3030 0036 1C22     		movs	r2, #28
1158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3031              		.loc 1 1158 7 view .LVU860
 3032 0038 A365     		str	r3, [r4, #88]
1164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3033              		.loc 1 1164 7 is_stmt 1 view .LVU861
1168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3034              		.loc 1 1168 7 is_stmt 0 view .LVU862
 3035 003a 2368     		ldr	r3, [r4]
1164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3036              		.loc 1 1164 7 view .LVU863
 3037 003c E065     		str	r0, [r4, #92]
1168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3038              		.loc 1 1168 7 is_stmt 1 view .LVU864
 3039 003e 1A60     		str	r2, [r3]
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3040              		.loc 1 1173 7 view .LVU865
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3041              		.loc 1 1173 7 view .LVU866
 3042 0040 2870     		strb	r0, [r5]
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3043              		.loc 1 1173 7 view .LVU867
1180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3044              		.loc 1 1180 7 view .LVU868
 3045              	.LVL188:
 3046              	.LBB212:
 3047              	.LBI212:
4648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3048              		.loc 2 4648 22 view .LVU869
 3049              	.LBB213:
4653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3050              		.loc 2 4653 3 view .LVU870
ARM GAS  /tmp/ccrGR9oZ.s 			page 202


 3051 0042 9968     		ldr	r1, [r3, #8]
 3052 0044 044A     		ldr	r2, .L269+4
 3053 0046 1140     		ands	r1, r2
 3054 0048 0422     		movs	r2, #4
 3055 004a 0A43     		orrs	r2, r1
 3056 004c 9A60     		str	r2, [r3, #8]
 3057              	.LVL189:
 3058              	.L265:
4653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3059              		.loc 2 4653 3 is_stmt 0 view .LVU871
 3060              	.LBE213:
 3061              	.LBE212:
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3062              		.loc 1 1193 1 view .LVU872
 3063              		@ sp needed
 3064              	.LVL190:
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3065              		.loc 1 1193 1 view .LVU873
 3066 004e 70BD     		pop	{r4, r5, r6, pc}
 3067              	.LVL191:
 3068              	.L266:
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3069              		.loc 1 1184 7 is_stmt 1 view .LVU874
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3070              		.loc 1 1184 7 view .LVU875
 3071 0050 2E70     		strb	r6, [r5]
 3072 0052 FCE7     		b	.L265
 3073              	.L270:
 3074              		.align	2
 3075              	.L269:
 3076 0054 FEF0FFFF 		.word	-3842
 3077 0058 E8FFFF7F 		.word	2147483624
 3078              		.cfi_endproc
 3079              	.LFE424:
 3081              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 3082              		.align	1
 3083              		.global	HAL_ADC_Start_IT
 3084              		.syntax unified
 3085              		.code	16
 3086              		.thumb_func
 3088              	HAL_ADC_Start_IT:
 3089              	.LVL192:
 3090              	.LFB428:
1519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3091              		.loc 1 1519 1 view -0
 3092              		.cfi_startproc
 3093              		@ args = 0, pretend = 0, frame = 0
 3094              		@ frame_needed = 0, uses_anonymous_args = 0
1520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3095              		.loc 1 1520 3 view .LVU877
1523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3096              		.loc 1 1523 3 view .LVU878
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3097              		.loc 1 1526 3 view .LVU879
1519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3098              		.loc 1 1519 1 is_stmt 0 view .LVU880
 3099 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/ccrGR9oZ.s 			page 203


 3100              	.LCFI14:
 3101              		.cfi_def_cfa_offset 16
 3102              		.cfi_offset 4, -16
 3103              		.cfi_offset 5, -12
 3104              		.cfi_offset 6, -8
 3105              		.cfi_offset 14, -4
1519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3106              		.loc 1 1519 1 view .LVU881
 3107 0002 0400     		movs	r4, r0
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3108              		.loc 1 1526 7 view .LVU882
 3109 0004 0068     		ldr	r0, [r0]
 3110              	.LVL193:
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3111              		.loc 1 1526 7 view .LVU883
 3112 0006 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 3113              	.LVL194:
 3114 000a 0600     		movs	r6, r0
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3115              		.loc 1 1528 5 discriminator 1 view .LVU884
 3116 000c 0220     		movs	r0, #2
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3117              		.loc 1 1526 6 discriminator 1 view .LVU885
 3118 000e 002E     		cmp	r6, #0
 3119 0010 2DD1     		bne	.L272
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3120              		.loc 1 1528 5 is_stmt 1 view .LVU886
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3121              		.loc 1 1528 5 view .LVU887
 3122 0012 2500     		movs	r5, r4
 3123 0014 5435     		adds	r5, r5, #84
 3124 0016 2B78     		ldrb	r3, [r5]
 3125 0018 012B     		cmp	r3, #1
 3126 001a 28D0     		beq	.L272
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3127              		.loc 1 1528 5 discriminator 2 view .LVU888
 3128 001c 0123     		movs	r3, #1
1531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3129              		.loc 1 1531 22 is_stmt 0 view .LVU889
 3130 001e 2000     		movs	r0, r4
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3131              		.loc 1 1528 5 discriminator 2 view .LVU890
 3132 0020 2B70     		strb	r3, [r5]
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3133              		.loc 1 1528 5 is_stmt 1 discriminator 2 view .LVU891
1531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3134              		.loc 1 1531 5 view .LVU892
1531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3135              		.loc 1 1531 22 is_stmt 0 view .LVU893
 3136 0022 FFF7FEFF 		bl	ADC_Enable
 3137              	.LVL195:
1534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3138              		.loc 1 1534 5 is_stmt 1 view .LVU894
1534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3139              		.loc 1 1534 8 is_stmt 0 view .LVU895
 3140 0026 0028     		cmp	r0, #0
 3141 0028 24D1     		bne	.L273
ARM GAS  /tmp/ccrGR9oZ.s 			page 204


1539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3142              		.loc 1 1539 7 is_stmt 1 view .LVU896
 3143 002a A26D     		ldr	r2, [r4, #88]
 3144 002c 124B     		ldr	r3, .L280
1550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3145              		.loc 1 1550 7 is_stmt 0 view .LVU897
 3146 002e 1C21     		movs	r1, #28
1539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3147              		.loc 1 1539 7 view .LVU898
 3148 0030 1A40     		ands	r2, r3
 3149 0032 8023     		movs	r3, #128
 3150 0034 5B00     		lsls	r3, r3, #1
 3151 0036 1343     		orrs	r3, r2
 3152 0038 A365     		str	r3, [r4, #88]
1546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3153              		.loc 1 1546 7 is_stmt 1 view .LVU899
1550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3154              		.loc 1 1550 7 is_stmt 0 view .LVU900
 3155 003a 2368     		ldr	r3, [r4]
1546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3156              		.loc 1 1546 7 view .LVU901
 3157 003c E065     		str	r0, [r4, #92]
1550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3158              		.loc 1 1550 7 is_stmt 1 view .LVU902
 3159 003e 1960     		str	r1, [r3]
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3160              		.loc 1 1555 7 view .LVU903
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3161              		.loc 1 1555 7 view .LVU904
 3162 0040 2870     		strb	r0, [r5]
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3163              		.loc 1 1555 7 view .LVU905
1558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3164              		.loc 1 1558 7 view .LVU906
 3165 0042 5A68     		ldr	r2, [r3, #4]
 3166 0044 8A43     		bics	r2, r1
 3167 0046 5A60     		str	r2, [r3, #4]
1561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3168              		.loc 1 1561 7 view .LVU907
 3169 0048 6269     		ldr	r2, [r4, #20]
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 3170              		.loc 1 1568 11 is_stmt 0 view .LVU908
 3171 004a 5968     		ldr	r1, [r3, #4]
1561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3172              		.loc 1 1561 7 view .LVU909
 3173 004c 082A     		cmp	r2, #8
 3174 004e 0FD1     		bne	.L274
 3175              	.L279:
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 3176              		.loc 1 1568 11 view .LVU910
 3177 0050 0A43     		orrs	r2, r1
 3178 0052 5A60     		str	r2, [r3, #4]
1569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 3179              		.loc 1 1569 11 is_stmt 1 view .LVU911
1576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3180              		.loc 1 1576 7 view .LVU912
1576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
ARM GAS  /tmp/ccrGR9oZ.s 			page 205


 3181              		.loc 1 1576 10 is_stmt 0 view .LVU913
 3182 0054 226B     		ldr	r2, [r4, #48]
 3183 0056 002A     		cmp	r2, #0
 3184 0058 03D1     		bne	.L276
1578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 3185              		.loc 1 1578 9 is_stmt 1 view .LVU914
 3186 005a 5968     		ldr	r1, [r3, #4]
 3187 005c 1032     		adds	r2, r2, #16
 3188 005e 0A43     		orrs	r2, r1
 3189 0060 5A60     		str	r2, [r3, #4]
 3190              	.L276:
1586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3191              		.loc 1 1586 7 view .LVU915
 3192              	.LVL196:
 3193              	.LBB216:
 3194              	.LBI216:
4648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3195              		.loc 2 4648 22 view .LVU916
 3196              	.LBB217:
4653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3197              		.loc 2 4653 3 view .LVU917
 3198 0062 9968     		ldr	r1, [r3, #8]
 3199 0064 054A     		ldr	r2, .L280+4
 3200 0066 1140     		ands	r1, r2
 3201 0068 0422     		movs	r2, #4
 3202 006a 0A43     		orrs	r2, r1
 3203 006c 9A60     		str	r2, [r3, #8]
 3204              	.LVL197:
 3205              	.L272:
4653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3206              		.loc 2 4653 3 is_stmt 0 view .LVU918
 3207              	.LBE217:
 3208              	.LBE216:
1600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3209              		.loc 1 1600 1 view .LVU919
 3210              		@ sp needed
 3211              	.LVL198:
1600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3212              		.loc 1 1600 1 view .LVU920
 3213 006e 70BD     		pop	{r4, r5, r6, pc}
 3214              	.LVL199:
 3215              	.L274:
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 3216              		.loc 1 1568 11 is_stmt 1 view .LVU921
 3217 0070 0422     		movs	r2, #4
 3218 0072 EDE7     		b	.L279
 3219              	.L273:
1590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3220              		.loc 1 1590 7 view .LVU922
1590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3221              		.loc 1 1590 7 view .LVU923
 3222 0074 2E70     		strb	r6, [r5]
 3223 0076 FAE7     		b	.L272
 3224              	.L281:
 3225              		.align	2
 3226              	.L280:
 3227 0078 FEF0FFFF 		.word	-3842
ARM GAS  /tmp/ccrGR9oZ.s 			page 206


 3228 007c E8FFFF7F 		.word	2147483624
 3229              		.cfi_endproc
 3230              	.LFE428:
 3232              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 3233              		.align	1
 3234              		.global	HAL_ADC_Start_DMA
 3235              		.syntax unified
 3236              		.code	16
 3237              		.thumb_func
 3239              	HAL_ADC_Start_DMA:
 3240              	.LVL200:
 3241              	.LFB430:
1657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3242              		.loc 1 1657 1 view -0
 3243              		.cfi_startproc
 3244              		@ args = 0, pretend = 0, frame = 8
 3245              		@ frame_needed = 0, uses_anonymous_args = 0
1658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3246              		.loc 1 1658 3 view .LVU925
1661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3247              		.loc 1 1661 3 view .LVU926
1664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3248              		.loc 1 1664 3 view .LVU927
1657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3249              		.loc 1 1657 1 is_stmt 0 view .LVU928
 3250 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 3251              	.LCFI15:
 3252              		.cfi_def_cfa_offset 32
 3253              		.cfi_offset 0, -32
 3254              		.cfi_offset 1, -28
 3255              		.cfi_offset 2, -24
 3256              		.cfi_offset 4, -20
 3257              		.cfi_offset 5, -16
 3258              		.cfi_offset 6, -12
 3259              		.cfi_offset 7, -8
 3260              		.cfi_offset 14, -4
1664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3261              		.loc 1 1664 7 view .LVU929
 3262 0002 0568     		ldr	r5, [r0]
1657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3263              		.loc 1 1657 1 view .LVU930
 3264 0004 0400     		movs	r4, r0
1664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3265              		.loc 1 1664 7 view .LVU931
 3266 0006 2800     		movs	r0, r5
 3267              	.LVL201:
1657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3268              		.loc 1 1657 1 view .LVU932
 3269 0008 0E00     		movs	r6, r1
 3270 000a 0192     		str	r2, [sp, #4]
1664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3271              		.loc 1 1664 7 view .LVU933
 3272 000c FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 3273              	.LVL202:
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3274              		.loc 1 1666 5 discriminator 1 view .LVU934
 3275 0010 0223     		movs	r3, #2
ARM GAS  /tmp/ccrGR9oZ.s 			page 207


1664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3276              		.loc 1 1664 6 discriminator 1 view .LVU935
 3277 0012 0028     		cmp	r0, #0
 3278 0014 3FD1     		bne	.L283
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3279              		.loc 1 1666 5 is_stmt 1 view .LVU936
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3280              		.loc 1 1666 5 view .LVU937
 3281 0016 2700     		movs	r7, r4
 3282 0018 5437     		adds	r7, r7, #84
 3283 001a 3A78     		ldrb	r2, [r7]
 3284 001c 012A     		cmp	r2, #1
 3285 001e 3AD0     		beq	.L283
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3286              		.loc 1 1666 5 discriminator 2 view .LVU938
 3287 0020 013B     		subs	r3, r3, #1
 3288 0022 3B70     		strb	r3, [r7]
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3289              		.loc 1 1666 5 discriminator 2 view .LVU939
1671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3290              		.loc 1 1671 5 view .LVU940
1671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3291              		.loc 1 1671 24 is_stmt 0 view .LVU941
 3292 0024 EA68     		ldr	r2, [r5, #12]
1671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3293              		.loc 1 1671 8 view .LVU942
 3294 0026 1A42     		tst	r2, r3
 3295 0028 0CD1     		bne	.L284
1673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3296              		.loc 1 1673 7 is_stmt 1 view .LVU943
 3297              	.LVL203:
 3298              	.LBB224:
 3299              	.LBI224:
4557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3300              		.loc 2 4557 26 view .LVU944
 3301              	.LBB225:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3302              		.loc 2 4559 3 view .LVU945
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3303              		.loc 2 4559 12 is_stmt 0 view .LVU946
 3304 002a AA68     		ldr	r2, [r5, #8]
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3305              		.loc 2 4559 68 view .LVU947
 3306 002c 1A42     		tst	r2, r3
 3307 002e 05D0     		beq	.L285
 3308              	.LVL204:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3309              		.loc 2 4559 68 view .LVU948
 3310              	.LBE225:
 3311              	.LBE224:
1676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 3312              		.loc 1 1676 9 is_stmt 1 view .LVU949
 3313              	.LBB226:
 3314              	.LBI226:
4538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3315              		.loc 2 4538 22 view .LVU950
 3316              	.LBB227:
ARM GAS  /tmp/ccrGR9oZ.s 			page 208


4543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3317              		.loc 2 4543 3 view .LVU951
 3318 0030 AA68     		ldr	r2, [r5, #8]
 3319 0032 1A4B     		ldr	r3, .L291
 3320 0034 1A40     		ands	r2, r3
 3321 0036 0223     		movs	r3, #2
 3322 0038 1343     		orrs	r3, r2
 3323 003a AB60     		str	r3, [r5, #8]
 3324              	.LVL205:
 3325              	.L285:
4543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3326              		.loc 2 4543 3 is_stmt 0 view .LVU952
 3327              	.LBE227:
 3328              	.LBE226:
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3329              		.loc 1 1680 7 is_stmt 1 view .LVU953
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3330              		.loc 1 1680 29 is_stmt 0 view .LVU954
 3331 003c 0123     		movs	r3, #1
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3332              		.loc 1 1680 21 view .LVU955
 3333 003e EA68     		ldr	r2, [r5, #12]
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3334              		.loc 1 1680 29 view .LVU956
 3335 0040 1343     		orrs	r3, r2
 3336 0042 EB60     		str	r3, [r5, #12]
 3337              	.L284:
1684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3338              		.loc 1 1684 5 is_stmt 1 view .LVU957
1684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3339              		.loc 1 1684 22 is_stmt 0 view .LVU958
 3340 0044 2000     		movs	r0, r4
 3341 0046 FFF7FEFF 		bl	ADC_Enable
 3342              	.LVL206:
 3343 004a 031E     		subs	r3, r0, #0
 3344              	.LVL207:
1687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3345              		.loc 1 1687 5 is_stmt 1 view .LVU959
1687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3346              		.loc 1 1687 8 is_stmt 0 view .LVU960
 3347 004c 23D1     		bne	.L283
1692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3348              		.loc 1 1692 7 is_stmt 1 view .LVU961
 3349 004e A16D     		ldr	r1, [r4, #88]
 3350 0050 134A     		ldr	r2, .L291+4
 3351 0052 1140     		ands	r1, r2
 3352 0054 8022     		movs	r2, #128
 3353 0056 5200     		lsls	r2, r2, #1
 3354 0058 0A43     		orrs	r2, r1
 3355 005a A265     		str	r2, [r4, #88]
1698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3356              		.loc 1 1698 7 view .LVU962
 3357 005c E065     		str	r0, [r4, #92]
1701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3358              		.loc 1 1701 7 view .LVU963
1701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3359              		.loc 1 1701 42 is_stmt 0 view .LVU964
ARM GAS  /tmp/ccrGR9oZ.s 			page 209


 3360 005e 114A     		ldr	r2, .L291+8
1701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3361              		.loc 1 1701 11 view .LVU965
 3362 0060 206D     		ldr	r0, [r4, #80]
 3363              	.LVL208:
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3364              		.loc 1 1716 7 view .LVU966
 3365 0062 2168     		ldr	r1, [r4]
1701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3366              		.loc 1 1701 42 view .LVU967
 3367 0064 C262     		str	r2, [r0, #44]
1704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3368              		.loc 1 1704 7 is_stmt 1 view .LVU968
1704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3369              		.loc 1 1704 46 is_stmt 0 view .LVU969
 3370 0066 104A     		ldr	r2, .L291+12
 3371 0068 0263     		str	r2, [r0, #48]
1707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3372              		.loc 1 1707 7 is_stmt 1 view .LVU970
1707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3373              		.loc 1 1707 43 is_stmt 0 view .LVU971
 3374 006a 104A     		ldr	r2, .L291+16
 3375 006c 4263     		str	r2, [r0, #52]
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3376              		.loc 1 1716 7 is_stmt 1 view .LVU972
 3377 006e 1C22     		movs	r2, #28
 3378 0070 0A60     		str	r2, [r1]
1721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3379              		.loc 1 1721 7 view .LVU973
1721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3380              		.loc 1 1721 7 view .LVU974
 3381 0072 3B70     		strb	r3, [r7]
1721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3382              		.loc 1 1721 7 view .LVU975
1724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3383              		.loc 1 1724 7 view .LVU976
 3384 0074 4A68     		ldr	r2, [r1, #4]
 3385 0076 1033     		adds	r3, r3, #16
 3386 0078 1343     		orrs	r3, r2
 3387 007a 4B60     		str	r3, [r1, #4]
1727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3388              		.loc 1 1727 7 view .LVU977
1727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3389              		.loc 1 1727 24 is_stmt 0 view .LVU978
 3390 007c 3200     		movs	r2, r6
 3391 007e 019B     		ldr	r3, [sp, #4]
1727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3392              		.loc 1 1727 69 view .LVU979
 3393 0080 4031     		adds	r1, r1, #64
1727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3394              		.loc 1 1727 24 view .LVU980
 3395 0082 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3396              	.LVL209:
 3397 0086 0300     		movs	r3, r0
 3398              	.LVL210:
1734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3399              		.loc 1 1734 7 is_stmt 1 view .LVU981
ARM GAS  /tmp/ccrGR9oZ.s 			page 210


 3400 0088 2068     		ldr	r0, [r4]
 3401              	.LVL211:
 3402              	.LBB228:
 3403              	.LBI228:
4648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3404              		.loc 2 4648 22 view .LVU982
 3405              	.LBB229:
4653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3406              		.loc 2 4653 3 view .LVU983
 3407 008a 044A     		ldr	r2, .L291
 3408 008c 8168     		ldr	r1, [r0, #8]
 3409 008e 1140     		ands	r1, r2
 3410 0090 0422     		movs	r2, #4
 3411 0092 0A43     		orrs	r2, r1
 3412 0094 8260     		str	r2, [r0, #8]
 3413              	.LVL212:
 3414              	.L283:
4653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3415              		.loc 2 4653 3 is_stmt 0 view .LVU984
 3416              	.LBE229:
 3417              	.LBE228:
1743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3418              		.loc 1 1743 1 view .LVU985
 3419 0096 1800     		movs	r0, r3
 3420              		@ sp needed
 3421              	.LVL213:
 3422              	.LVL214:
1743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3423              		.loc 1 1743 1 view .LVU986
 3424 0098 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 3425              	.L292:
 3426 009a C046     		.align	2
 3427              	.L291:
 3428 009c E8FFFF7F 		.word	2147483624
 3429 00a0 FEF0FFFF 		.word	-3842
 3430 00a4 00000000 		.word	ADC_DMAConvCplt
 3431 00a8 00000000 		.word	ADC_DMAHalfConvCplt
 3432 00ac 00000000 		.word	ADC_DMAError
 3433              		.cfi_endproc
 3434              	.LFE430:
 3436              		.section	.text.ADC_Disable,"ax",%progbits
 3437              		.align	1
 3438              		.global	ADC_Disable
 3439              		.syntax unified
 3440              		.code	16
 3441              		.thumb_func
 3443              	ADC_Disable:
 3444              	.LVL215:
 3445              	.LFB444:
2791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 3446              		.loc 1 2791 1 is_stmt 1 view -0
 3447              		.cfi_startproc
 3448              		@ args = 0, pretend = 0, frame = 0
 3449              		@ frame_needed = 0, uses_anonymous_args = 0
2792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 3450              		.loc 1 2792 3 view .LVU988
2793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  /tmp/ccrGR9oZ.s 			page 211


 3451              		.loc 1 2793 3 view .LVU989
 3452              	.LBB236:
 3453              	.LBB237:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3454              		.loc 2 4559 12 is_stmt 0 view .LVU990
 3455 0000 0122     		movs	r2, #1
 3456              	.LBE237:
 3457              	.LBE236:
2793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3458              		.loc 1 2793 48 view .LVU991
 3459 0002 0368     		ldr	r3, [r0]
 3460              	.LVL216:
 3461              	.LBB239:
 3462              	.LBI239:
4568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3463              		.loc 2 4568 26 is_stmt 1 view .LVU992
 3464              	.LBB240:
4570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3465              		.loc 2 4570 3 view .LVU993
 3466              	.LBE240:
 3467              	.LBE239:
2791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 3468              		.loc 1 2791 1 is_stmt 0 view .LVU994
 3469 0004 70B5     		push	{r4, r5, r6, lr}
 3470              	.LCFI16:
 3471              		.cfi_def_cfa_offset 16
 3472              		.cfi_offset 4, -16
 3473              		.cfi_offset 5, -12
 3474              		.cfi_offset 6, -8
 3475              		.cfi_offset 14, -4
2791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 3476              		.loc 1 2791 1 view .LVU995
 3477 0006 0400     		movs	r4, r0
 3478              	.LBB243:
 3479              	.LBB241:
4570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3480              		.loc 2 4570 12 view .LVU996
 3481 0008 9868     		ldr	r0, [r3, #8]
 3482              	.LVL217:
4570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3483              		.loc 2 4570 12 view .LVU997
 3484              	.LBE241:
 3485              	.LBE243:
2798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 3486              		.loc 1 2798 3 is_stmt 1 view .LVU998
 3487              	.LBB244:
 3488              	.LBI236:
4557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3489              		.loc 2 4557 26 view .LVU999
 3490              	.LBB238:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3491              		.loc 2 4559 3 view .LVU1000
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3492              		.loc 2 4559 12 is_stmt 0 view .LVU1001
 3493 000a 9968     		ldr	r1, [r3, #8]
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3494              		.loc 2 4559 68 view .LVU1002
ARM GAS  /tmp/ccrGR9oZ.s 			page 212


 3495 000c 1142     		tst	r1, r2
 3496 000e 01D1     		bne	.L294
 3497              	.LVL218:
 3498              	.L296:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3499              		.loc 2 4559 68 view .LVU1003
 3500              	.LBE238:
 3501              	.LBE244:
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3502              		.loc 1 2844 10 view .LVU1004
 3503 0010 0020     		movs	r0, #0
 3504              	.L295:
2845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3505              		.loc 1 2845 1 view .LVU1005
 3506              		@ sp needed
 3507              	.LVL219:
2845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3508              		.loc 1 2845 1 view .LVU1006
 3509 0012 70BD     		pop	{r4, r5, r6, pc}
 3510              	.LVL220:
 3511              	.L294:
 3512              	.LBB245:
 3513              	.LBB242:
4570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3514              		.loc 2 4570 12 view .LVU1007
 3515 0014 0221     		movs	r1, #2
 3516              	.LBE242:
 3517              	.LBE245:
2799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      )
 3518              		.loc 1 2799 7 view .LVU1008
 3519 0016 0842     		tst	r0, r1
 3520 0018 FAD1     		bne	.L296
2803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3521              		.loc 1 2803 5 is_stmt 1 view .LVU1009
2803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3522              		.loc 1 2803 29 is_stmt 0 view .LVU1010
 3523 001a 0520     		movs	r0, #5
 3524              	.LVL221:
2803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3525              		.loc 1 2803 24 view .LVU1011
 3526 001c 9D68     		ldr	r5, [r3, #8]
2803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3527              		.loc 1 2803 29 view .LVU1012
 3528 001e 0540     		ands	r5, r0
2803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3529              		.loc 1 2803 8 view .LVU1013
 3530 0020 012D     		cmp	r5, #1
 3531 0022 1ED1     		bne	.L297
2806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 3532              		.loc 1 2806 7 is_stmt 1 view .LVU1014
 3533              	.LVL222:
 3534              	.LBB246:
 3535              	.LBI246:
4538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3536              		.loc 2 4538 22 view .LVU1015
 3537              	.LBB247:
4543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
ARM GAS  /tmp/ccrGR9oZ.s 			page 213


 3538              		.loc 2 4543 3 view .LVU1016
 3539 0024 9A68     		ldr	r2, [r3, #8]
 3540 0026 1348     		ldr	r0, .L304
 3541 0028 0240     		ands	r2, r0
 3542 002a 1143     		orrs	r1, r2
 3543              	.LBE247:
 3544              	.LBE246:
2807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3545              		.loc 1 2807 7 is_stmt 0 view .LVU1017
 3546 002c 0322     		movs	r2, #3
 3547              	.LBB249:
 3548              	.LBB248:
4543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3549              		.loc 2 4543 3 view .LVU1018
 3550 002e 9960     		str	r1, [r3, #8]
 3551              	.LVL223:
4543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3552              		.loc 2 4543 3 view .LVU1019
 3553              	.LBE248:
 3554              	.LBE249:
2807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3555              		.loc 1 2807 7 is_stmt 1 view .LVU1020
 3556 0030 1A60     		str	r2, [r3]
2822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3557              		.loc 1 2822 5 view .LVU1021
2822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3558              		.loc 1 2822 17 is_stmt 0 view .LVU1022
 3559 0032 FFF7FEFF 		bl	HAL_GetTick
 3560              	.LVL224:
 3561 0036 0600     		movs	r6, r0
 3562              	.LVL225:
2824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3563              		.loc 1 2824 5 is_stmt 1 view .LVU1023
 3564              	.L302:
2824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3565              		.loc 1 2824 47 view .LVU1024
2824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3566              		.loc 1 2824 17 is_stmt 0 view .LVU1025
 3567 0038 2368     		ldr	r3, [r4]
2824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3568              		.loc 1 2824 27 view .LVU1026
 3569 003a 9B68     		ldr	r3, [r3, #8]
2824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3570              		.loc 1 2824 47 view .LVU1027
 3571 003c 2B42     		tst	r3, r5
 3572 003e E7D0     		beq	.L296
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3573              		.loc 1 2826 7 is_stmt 1 view .LVU1028
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3574              		.loc 1 2826 12 is_stmt 0 view .LVU1029
 3575 0040 FFF7FEFF 		bl	HAL_GetTick
 3576              	.LVL226:
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3577              		.loc 1 2826 26 discriminator 1 view .LVU1030
 3578 0044 801B     		subs	r0, r0, r6
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3579              		.loc 1 2826 10 discriminator 1 view .LVU1031
ARM GAS  /tmp/ccrGR9oZ.s 			page 214


 3580 0046 0228     		cmp	r0, #2
 3581 0048 F6D9     		bls	.L302
2829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3582              		.loc 1 2829 9 is_stmt 1 view .LVU1032
2829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3583              		.loc 1 2829 18 is_stmt 0 view .LVU1033
 3584 004a 2368     		ldr	r3, [r4]
2829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3585              		.loc 1 2829 28 view .LVU1034
 3586 004c 9B68     		ldr	r3, [r3, #8]
2829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3587              		.loc 1 2829 12 view .LVU1035
 3588 004e 2B42     		tst	r3, r5
 3589 0050 F2D0     		beq	.L302
2832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3590              		.loc 1 2832 11 is_stmt 1 view .LVU1036
 3591 0052 1023     		movs	r3, #16
 3592 0054 A26D     		ldr	r2, [r4, #88]
 3593 0056 1343     		orrs	r3, r2
 3594 0058 A365     		str	r3, [r4, #88]
2835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3595              		.loc 1 2835 11 view .LVU1037
 3596 005a E36D     		ldr	r3, [r4, #92]
 3597 005c 2B43     		orrs	r3, r5
 3598 005e E365     		str	r3, [r4, #92]
2837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 3599              		.loc 1 2837 11 view .LVU1038
2837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 3600              		.loc 1 2837 18 is_stmt 0 view .LVU1039
 3601 0060 06E0     		b	.L299
 3602              	.LVL227:
 3603              	.L297:
2812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3604              		.loc 1 2812 7 is_stmt 1 view .LVU1040
 3605 0062 1023     		movs	r3, #16
 3606 0064 A16D     		ldr	r1, [r4, #88]
 3607 0066 0B43     		orrs	r3, r1
 3608 0068 A365     		str	r3, [r4, #88]
2815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3609              		.loc 1 2815 7 view .LVU1041
 3610 006a E36D     		ldr	r3, [r4, #92]
 3611 006c 1A43     		orrs	r2, r3
 3612 006e E265     		str	r2, [r4, #92]
2817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3613              		.loc 1 2817 7 view .LVU1042
 3614              	.L299:
2817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3615              		.loc 1 2817 14 is_stmt 0 view .LVU1043
 3616 0070 0120     		movs	r0, #1
 3617 0072 CEE7     		b	.L295
 3618              	.L305:
 3619              		.align	2
 3620              	.L304:
 3621 0074 E8FFFF7F 		.word	2147483624
 3622              		.cfi_endproc
 3623              	.LFE444:
 3625              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
ARM GAS  /tmp/ccrGR9oZ.s 			page 215


 3626              		.align	1
 3627              		.global	HAL_ADC_DeInit
 3628              		.syntax unified
 3629              		.code	16
 3630              		.thumb_func
 3632              	HAL_ADC_DeInit:
 3633              	.LVL228:
 3634              	.LFB421:
 728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3635              		.loc 1 728 1 is_stmt 1 view -0
 3636              		.cfi_startproc
 3637              		@ args = 0, pretend = 0, frame = 0
 3638              		@ frame_needed = 0, uses_anonymous_args = 0
 729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3639              		.loc 1 729 3 view .LVU1045
 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3640              		.loc 1 732 3 view .LVU1046
 728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3641              		.loc 1 728 1 is_stmt 0 view .LVU1047
 3642 0000 70B5     		push	{r4, r5, r6, lr}
 3643              	.LCFI17:
 3644              		.cfi_def_cfa_offset 16
 3645              		.cfi_offset 4, -16
 3646              		.cfi_offset 5, -12
 3647              		.cfi_offset 6, -8
 3648              		.cfi_offset 14, -4
 728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3649              		.loc 1 728 1 view .LVU1048
 3650 0002 0400     		movs	r4, r0
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 3651              		.loc 1 734 12 view .LVU1049
 3652 0004 0125     		movs	r5, #1
 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3653              		.loc 1 732 6 view .LVU1050
 3654 0006 0028     		cmp	r0, #0
 3655 0008 40D0     		beq	.L307
 738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3656              		.loc 1 738 3 is_stmt 1 view .LVU1051
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3657              		.loc 1 741 3 view .LVU1052
 3658 000a 0223     		movs	r3, #2
 3659 000c 826D     		ldr	r2, [r0, #88]
 3660 000e 1343     		orrs	r3, r2
 3661 0010 8365     		str	r3, [r0, #88]
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3662              		.loc 1 744 3 view .LVU1053
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3663              		.loc 1 744 20 is_stmt 0 view .LVU1054
 3664 0012 FFF7FEFF 		bl	ADC_ConversionStop
 3665              	.LVL229:
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3666              		.loc 1 744 20 view .LVU1055
 3667 0016 051E     		subs	r5, r0, #0
 3668              	.LVL230:
 747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3669              		.loc 1 747 3 is_stmt 1 view .LVU1056
 747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
ARM GAS  /tmp/ccrGR9oZ.s 			page 216


 3670              		.loc 1 747 6 is_stmt 0 view .LVU1057
 3671 0018 0BD1     		bne	.L308
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3672              		.loc 1 750 5 is_stmt 1 view .LVU1058
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3673              		.loc 1 750 22 is_stmt 0 view .LVU1059
 3674 001a 2000     		movs	r0, r4
 3675              	.LVL231:
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3676              		.loc 1 750 22 view .LVU1060
 3677 001c FFF7FEFF 		bl	ADC_Disable
 3678              	.LVL232:
 3679 0020 051E     		subs	r5, r0, #0
 3680              	.LVL233:
 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3681              		.loc 1 753 5 is_stmt 1 view .LVU1061
 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3682              		.loc 1 753 8 is_stmt 0 view .LVU1062
 3683 0022 01D1     		bne	.L309
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3684              		.loc 1 756 7 is_stmt 1 view .LVU1063
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3685              		.loc 1 756 19 is_stmt 0 view .LVU1064
 3686 0024 0123     		movs	r3, #1
 3687 0026 A365     		str	r3, [r4, #88]
 3688              	.L309:
 760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 3689              		.loc 1 760 5 is_stmt 1 view .LVU1065
 3690 0028 2268     		ldr	r2, [r4]
 3691              	.LVL234:
 3692              	.LBB250:
 3693              	.LBI250:
4486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3694              		.loc 2 4486 22 view .LVU1066
 3695              	.LBB251:
4488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3696              		.loc 2 4488 3 view .LVU1067
 3697 002a 1949     		ldr	r1, .L311
 3698 002c 9368     		ldr	r3, [r2, #8]
 3699 002e 0B40     		ands	r3, r1
 3700 0030 9360     		str	r3, [r2, #8]
 3701              	.LVL235:
 3702              	.L308:
4488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3703              		.loc 2 4488 3 is_stmt 0 view .LVU1068
 3704              	.LBE251:
 3705              	.LBE250:
 771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 3706              		.loc 1 771 3 is_stmt 1 view .LVU1069
 3707 0032 2368     		ldr	r3, [r4]
 3708 0034 1749     		ldr	r1, .L311+4
 3709 0036 5A68     		ldr	r2, [r3, #4]
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3710              		.loc 1 806 26 is_stmt 0 view .LVU1070
 3711 0038 0026     		movs	r6, #0
 771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 3712              		.loc 1 771 3 view .LVU1071
ARM GAS  /tmp/ccrGR9oZ.s 			page 217


 3713 003a 0A40     		ands	r2, r1
 3714 003c 5A60     		str	r2, [r3, #4]
 777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 3715              		.loc 1 777 3 is_stmt 1 view .LVU1072
 3716 003e 164A     		ldr	r2, .L311+8
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 3717              		.loc 1 787 25 is_stmt 0 view .LVU1073
 3718 0040 1649     		ldr	r1, .L311+12
 777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 3719              		.loc 1 777 3 view .LVU1074
 3720 0042 1A60     		str	r2, [r3]
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 3721              		.loc 1 787 3 is_stmt 1 view .LVU1075
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 3722              		.loc 1 787 17 is_stmt 0 view .LVU1076
 3723 0044 DA68     		ldr	r2, [r3, #12]
 831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 3724              		.loc 1 831 3 view .LVU1077
 3725 0046 2000     		movs	r0, r4
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 3726              		.loc 1 787 25 view .LVU1078
 3727 0048 0A40     		ands	r2, r1
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3728              		.loc 1 798 24 view .LVU1079
 3729 004a 0721     		movs	r1, #7
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 3730              		.loc 1 787 25 view .LVU1080
 3731 004c DA60     		str	r2, [r3, #12]
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3732              		.loc 1 795 3 is_stmt 1 view .LVU1081
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3733              		.loc 1 795 17 is_stmt 0 view .LVU1082
 3734 004e 1A69     		ldr	r2, [r3, #16]
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3735              		.loc 1 843 3 view .LVU1083
 3736 0050 5434     		adds	r4, r4, #84
 3737              	.LVL236:
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3738              		.loc 1 795 25 view .LVU1084
 3739 0052 9200     		lsls	r2, r2, #2
 3740 0054 9208     		lsrs	r2, r2, #2
 3741 0056 1A61     		str	r2, [r3, #16]
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3742              		.loc 1 798 3 is_stmt 1 view .LVU1085
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3743              		.loc 1 798 17 is_stmt 0 view .LVU1086
 3744 0058 5A69     		ldr	r2, [r3, #20]
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3745              		.loc 1 798 24 view .LVU1087
 3746 005a 8A43     		bics	r2, r1
 3747 005c 5A61     		str	r2, [r3, #20]
 801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 3748              		.loc 1 801 3 is_stmt 1 view .LVU1088
 801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 3749              		.loc 1 801 17 is_stmt 0 view .LVU1089
 3750 005e 1A6A     		ldr	r2, [r3, #32]
 801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
ARM GAS  /tmp/ccrGR9oZ.s 			page 218


 3751              		.loc 1 801 26 view .LVU1090
 3752 0060 0F49     		ldr	r1, .L311+16
 3753 0062 0A40     		ands	r2, r1
 3754 0064 1A62     		str	r2, [r3, #32]
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3755              		.loc 1 802 3 is_stmt 1 view .LVU1091
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3756              		.loc 1 802 17 is_stmt 0 view .LVU1092
 3757 0066 5A6A     		ldr	r2, [r3, #36]
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3758              		.loc 1 802 26 view .LVU1093
 3759 0068 0A40     		ands	r2, r1
 3760 006a 5A62     		str	r2, [r3, #36]
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3761              		.loc 1 803 3 is_stmt 1 view .LVU1094
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3762              		.loc 1 803 17 is_stmt 0 view .LVU1095
 3763 006c DA6A     		ldr	r2, [r3, #44]
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3764              		.loc 1 803 26 view .LVU1096
 3765 006e 0A40     		ands	r2, r1
 3766 0070 DA62     		str	r2, [r3, #44]
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3767              		.loc 1 806 3 is_stmt 1 view .LVU1097
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3768              		.loc 1 806 17 is_stmt 0 view .LVU1098
 3769 0072 9A6A     		ldr	r2, [r3, #40]
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3770              		.loc 1 812 14 view .LVU1099
 3771 0074 0B4A     		ldr	r2, .L311+20
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3772              		.loc 1 806 26 view .LVU1100
 3773 0076 9E62     		str	r6, [r3, #40]
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3774              		.loc 1 812 3 is_stmt 1 view .LVU1101
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3775              		.loc 1 812 14 is_stmt 0 view .LVU1102
 3776 0078 1368     		ldr	r3, [r2]
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3777              		.loc 1 812 20 view .LVU1103
 3778 007a 0B49     		ldr	r1, .L311+24
 3779 007c 0B40     		ands	r3, r1
 3780 007e 1360     		str	r3, [r2]
 831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 3781              		.loc 1 831 3 is_stmt 1 view .LVU1104
 3782 0080 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 3783              	.LVL237:
 835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3784              		.loc 1 835 3 view .LVU1105
 838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3785              		.loc 1 838 3 is_stmt 0 view .LVU1106
 3786 0084 A660     		str	r6, [r4, #8]
 835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3787              		.loc 1 835 39 view .LVU1107
 3788 0086 E660     		str	r6, [r4, #12]
 838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3789              		.loc 1 838 3 is_stmt 1 view .LVU1108
ARM GAS  /tmp/ccrGR9oZ.s 			page 219


 841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3790              		.loc 1 841 3 view .LVU1109
 841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3791              		.loc 1 841 15 is_stmt 0 view .LVU1110
 3792 0088 6660     		str	r6, [r4, #4]
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3793              		.loc 1 843 3 is_stmt 1 view .LVU1111
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3794              		.loc 1 843 3 view .LVU1112
 3795 008a 2670     		strb	r6, [r4]
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3796              		.loc 1 843 3 view .LVU1113
 845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3797              		.loc 1 845 3 view .LVU1114
 3798              	.LVL238:
 3799              	.L307:
 846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3800              		.loc 1 846 1 is_stmt 0 view .LVU1115
 3801 008c 2800     		movs	r0, r5
 3802              		@ sp needed
 3803 008e 70BD     		pop	{r4, r5, r6, pc}
 3804              	.L312:
 3805              		.align	2
 3806              	.L311:
 3807 0090 E8FFFF6F 		.word	1879048168
 3808 0094 60FCFFFF 		.word	-928
 3809 0098 9F030000 		.word	927
 3810 009c 00023E83 		.word	-2093088256
 3811 00a0 00F000F0 		.word	-268374016
 3812 00a4 08270140 		.word	1073817352
 3813 00a8 FFFF03FE 		.word	-33292289
 3814              		.cfi_endproc
 3815              	.LFE421:
 3817              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 3818              		.align	1
 3819              		.global	HAL_ADC_Stop
 3820              		.syntax unified
 3821              		.code	16
 3822              		.thumb_func
 3824              	HAL_ADC_Stop:
 3825              	.LVL239:
 3826              	.LFB425:
1205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3827              		.loc 1 1205 1 is_stmt 1 view -0
 3828              		.cfi_startproc
 3829              		@ args = 0, pretend = 0, frame = 0
 3830              		@ frame_needed = 0, uses_anonymous_args = 0
1206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3831              		.loc 1 1206 3 view .LVU1117
1209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3832              		.loc 1 1209 3 view .LVU1118
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3833              		.loc 1 1211 3 view .LVU1119
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3834              		.loc 1 1211 3 view .LVU1120
1205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3835              		.loc 1 1205 1 is_stmt 0 view .LVU1121
ARM GAS  /tmp/ccrGR9oZ.s 			page 220


 3836 0000 70B5     		push	{r4, r5, r6, lr}
 3837              	.LCFI18:
 3838              		.cfi_def_cfa_offset 16
 3839              		.cfi_offset 4, -16
 3840              		.cfi_offset 5, -12
 3841              		.cfi_offset 6, -8
 3842              		.cfi_offset 14, -4
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3843              		.loc 1 1211 3 view .LVU1122
 3844 0002 0600     		movs	r6, r0
 3845 0004 5436     		adds	r6, r6, #84
 3846 0006 3378     		ldrb	r3, [r6]
1205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3847              		.loc 1 1205 1 view .LVU1123
 3848 0008 0400     		movs	r4, r0
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3849              		.loc 1 1211 3 discriminator 1 view .LVU1124
 3850 000a 0220     		movs	r0, #2
 3851              	.LVL240:
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3852              		.loc 1 1211 3 view .LVU1125
 3853 000c 012B     		cmp	r3, #1
 3854 000e 12D0     		beq	.L314
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3855              		.loc 1 1211 3 is_stmt 1 discriminator 2 view .LVU1126
 3856 0010 0125     		movs	r5, #1
1214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3857              		.loc 1 1214 20 is_stmt 0 view .LVU1127
 3858 0012 2000     		movs	r0, r4
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3859              		.loc 1 1211 3 discriminator 2 view .LVU1128
 3860 0014 3570     		strb	r5, [r6]
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3861              		.loc 1 1211 3 is_stmt 1 discriminator 2 view .LVU1129
1214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3862              		.loc 1 1214 3 view .LVU1130
1214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3863              		.loc 1 1214 20 is_stmt 0 view .LVU1131
 3864 0016 FFF7FEFF 		bl	ADC_ConversionStop
 3865              	.LVL241:
1217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3866              		.loc 1 1217 3 is_stmt 1 view .LVU1132
1217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3867              		.loc 1 1217 6 is_stmt 0 view .LVU1133
 3868 001a 0028     		cmp	r0, #0
 3869 001c 09D1     		bne	.L315
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3870              		.loc 1 1220 5 is_stmt 1 view .LVU1134
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3871              		.loc 1 1220 22 is_stmt 0 view .LVU1135
 3872 001e 2000     		movs	r0, r4
 3873              	.LVL242:
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3874              		.loc 1 1220 22 view .LVU1136
 3875 0020 FFF7FEFF 		bl	ADC_Disable
 3876              	.LVL243:
1223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
ARM GAS  /tmp/ccrGR9oZ.s 			page 221


 3877              		.loc 1 1223 5 is_stmt 1 view .LVU1137
1223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3878              		.loc 1 1223 8 is_stmt 0 view .LVU1138
 3879 0024 0028     		cmp	r0, #0
 3880 0026 04D1     		bne	.L315
1226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 3881              		.loc 1 1226 7 is_stmt 1 view .LVU1139
 3882 0028 A36D     		ldr	r3, [r4, #88]
 3883 002a 034A     		ldr	r2, .L319
 3884 002c 1340     		ands	r3, r2
 3885 002e 1D43     		orrs	r5, r3
 3886 0030 A565     		str	r5, [r4, #88]
 3887              	.LVL244:
 3888              	.L315:
1232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3889              		.loc 1 1232 3 view .LVU1140
1232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3890              		.loc 1 1232 3 view .LVU1141
 3891 0032 0023     		movs	r3, #0
 3892 0034 3370     		strb	r3, [r6]
1232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3893              		.loc 1 1232 3 view .LVU1142
1234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3894              		.loc 1 1234 3 view .LVU1143
 3895              	.LVL245:
 3896              	.L314:
1235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3897              		.loc 1 1235 1 is_stmt 0 view .LVU1144
 3898              		@ sp needed
 3899              	.LVL246:
 3900              	.LVL247:
1235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3901              		.loc 1 1235 1 view .LVU1145
 3902 0036 70BD     		pop	{r4, r5, r6, pc}
 3903              	.L320:
 3904              		.align	2
 3905              	.L319:
 3906 0038 FEFEFFFF 		.word	-258
 3907              		.cfi_endproc
 3908              	.LFE425:
 3910              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 3911              		.align	1
 3912              		.global	HAL_ADC_Stop_IT
 3913              		.syntax unified
 3914              		.code	16
 3915              		.thumb_func
 3917              	HAL_ADC_Stop_IT:
 3918              	.LVL248:
 3919              	.LFB429:
1610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3920              		.loc 1 1610 1 is_stmt 1 view -0
 3921              		.cfi_startproc
 3922              		@ args = 0, pretend = 0, frame = 0
 3923              		@ frame_needed = 0, uses_anonymous_args = 0
1611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3924              		.loc 1 1611 3 view .LVU1147
1614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  /tmp/ccrGR9oZ.s 			page 222


 3925              		.loc 1 1614 3 view .LVU1148
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3926              		.loc 1 1616 3 view .LVU1149
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3927              		.loc 1 1616 3 view .LVU1150
1610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3928              		.loc 1 1610 1 is_stmt 0 view .LVU1151
 3929 0000 70B5     		push	{r4, r5, r6, lr}
 3930              	.LCFI19:
 3931              		.cfi_def_cfa_offset 16
 3932              		.cfi_offset 4, -16
 3933              		.cfi_offset 5, -12
 3934              		.cfi_offset 6, -8
 3935              		.cfi_offset 14, -4
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3936              		.loc 1 1616 3 view .LVU1152
 3937 0002 0600     		movs	r6, r0
 3938 0004 5436     		adds	r6, r6, #84
 3939 0006 3378     		ldrb	r3, [r6]
1610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3940              		.loc 1 1610 1 view .LVU1153
 3941 0008 0400     		movs	r4, r0
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3942              		.loc 1 1616 3 discriminator 1 view .LVU1154
 3943 000a 0220     		movs	r0, #2
 3944              	.LVL249:
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3945              		.loc 1 1616 3 view .LVU1155
 3946 000c 012B     		cmp	r3, #1
 3947 000e 17D0     		beq	.L322
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3948              		.loc 1 1616 3 is_stmt 1 discriminator 2 view .LVU1156
 3949 0010 0125     		movs	r5, #1
1619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3950              		.loc 1 1619 20 is_stmt 0 view .LVU1157
 3951 0012 2000     		movs	r0, r4
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3952              		.loc 1 1616 3 discriminator 2 view .LVU1158
 3953 0014 3570     		strb	r5, [r6]
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3954              		.loc 1 1616 3 is_stmt 1 discriminator 2 view .LVU1159
1619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3955              		.loc 1 1619 3 view .LVU1160
1619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3956              		.loc 1 1619 20 is_stmt 0 view .LVU1161
 3957 0016 FFF7FEFF 		bl	ADC_ConversionStop
 3958              	.LVL250:
1622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3959              		.loc 1 1622 3 is_stmt 1 view .LVU1162
1622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3960              		.loc 1 1622 6 is_stmt 0 view .LVU1163
 3961 001a 0028     		cmp	r0, #0
 3962 001c 0ED1     		bne	.L323
1626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3963              		.loc 1 1626 5 is_stmt 1 view .LVU1164
 3964 001e 1C21     		movs	r1, #28
 3965 0020 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccrGR9oZ.s 			page 223


1629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3966              		.loc 1 1629 22 is_stmt 0 view .LVU1165
 3967 0022 2000     		movs	r0, r4
 3968              	.LVL251:
1626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3969              		.loc 1 1626 5 view .LVU1166
 3970 0024 5368     		ldr	r3, [r2, #4]
 3971 0026 8B43     		bics	r3, r1
 3972 0028 5360     		str	r3, [r2, #4]
1629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3973              		.loc 1 1629 5 is_stmt 1 view .LVU1167
1629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3974              		.loc 1 1629 22 is_stmt 0 view .LVU1168
 3975 002a FFF7FEFF 		bl	ADC_Disable
 3976              	.LVL252:
1632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3977              		.loc 1 1632 5 is_stmt 1 view .LVU1169
1632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3978              		.loc 1 1632 8 is_stmt 0 view .LVU1170
 3979 002e 0028     		cmp	r0, #0
 3980 0030 04D1     		bne	.L323
1635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 3981              		.loc 1 1635 7 is_stmt 1 view .LVU1171
 3982 0032 A36D     		ldr	r3, [r4, #88]
 3983 0034 034A     		ldr	r2, .L327
 3984 0036 1340     		ands	r3, r2
 3985 0038 1D43     		orrs	r5, r3
 3986 003a A565     		str	r5, [r4, #88]
 3987              	.LVL253:
 3988              	.L323:
1641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3989              		.loc 1 1641 3 view .LVU1172
1641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3990              		.loc 1 1641 3 view .LVU1173
 3991 003c 0023     		movs	r3, #0
 3992 003e 3370     		strb	r3, [r6]
1641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3993              		.loc 1 1641 3 view .LVU1174
1643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3994              		.loc 1 1643 3 view .LVU1175
 3995              	.LVL254:
 3996              	.L322:
1644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3997              		.loc 1 1644 1 is_stmt 0 view .LVU1176
 3998              		@ sp needed
 3999              	.LVL255:
 4000              	.LVL256:
1644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4001              		.loc 1 1644 1 view .LVU1177
 4002 0040 70BD     		pop	{r4, r5, r6, pc}
 4003              	.L328:
 4004 0042 C046     		.align	2
 4005              	.L327:
 4006 0044 FEFEFFFF 		.word	-258
 4007              		.cfi_endproc
 4008              	.LFE429:
 4010              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
ARM GAS  /tmp/ccrGR9oZ.s 			page 224


 4011              		.align	1
 4012              		.global	HAL_ADC_Stop_DMA
 4013              		.syntax unified
 4014              		.code	16
 4015              		.thumb_func
 4017              	HAL_ADC_Stop_DMA:
 4018              	.LVL257:
 4019              	.LFB431:
1753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4020              		.loc 1 1753 1 is_stmt 1 view -0
 4021              		.cfi_startproc
 4022              		@ args = 0, pretend = 0, frame = 0
 4023              		@ frame_needed = 0, uses_anonymous_args = 0
1754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4024              		.loc 1 1754 3 view .LVU1179
1757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4025              		.loc 1 1757 3 view .LVU1180
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4026              		.loc 1 1759 3 view .LVU1181
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4027              		.loc 1 1759 3 view .LVU1182
1753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4028              		.loc 1 1753 1 is_stmt 0 view .LVU1183
 4029 0000 70B5     		push	{r4, r5, r6, lr}
 4030              	.LCFI20:
 4031              		.cfi_def_cfa_offset 16
 4032              		.cfi_offset 4, -16
 4033              		.cfi_offset 5, -12
 4034              		.cfi_offset 6, -8
 4035              		.cfi_offset 14, -4
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4036              		.loc 1 1759 3 view .LVU1184
 4037 0002 0600     		movs	r6, r0
 4038 0004 5436     		adds	r6, r6, #84
 4039 0006 3378     		ldrb	r3, [r6]
1753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4040              		.loc 1 1753 1 view .LVU1185
 4041 0008 0500     		movs	r5, r0
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4042              		.loc 1 1759 3 discriminator 1 view .LVU1186
 4043 000a 0224     		movs	r4, #2
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4044              		.loc 1 1759 3 view .LVU1187
 4045 000c 012B     		cmp	r3, #1
 4046 000e 25D0     		beq	.L330
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4047              		.loc 1 1759 3 is_stmt 1 discriminator 2 view .LVU1188
 4048 0010 0123     		movs	r3, #1
 4049 0012 3370     		strb	r3, [r6]
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4050              		.loc 1 1759 3 discriminator 2 view .LVU1189
1762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4051              		.loc 1 1762 3 view .LVU1190
1762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4052              		.loc 1 1762 20 is_stmt 0 view .LVU1191
 4053 0014 FFF7FEFF 		bl	ADC_ConversionStop
 4054              	.LVL258:
ARM GAS  /tmp/ccrGR9oZ.s 			page 225


1762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4055              		.loc 1 1762 20 view .LVU1192
 4056 0018 041E     		subs	r4, r0, #0
 4057              	.LVL259:
1765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4058              		.loc 1 1765 3 is_stmt 1 view .LVU1193
1765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4059              		.loc 1 1765 6 is_stmt 0 view .LVU1194
 4060 001a 1DD1     		bne	.L331
1769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4061              		.loc 1 1769 5 is_stmt 1 view .LVU1195
1769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4062              		.loc 1 1769 13 is_stmt 0 view .LVU1196
 4063 001c 286D     		ldr	r0, [r5, #80]
 4064              	.LVL260:
1769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4065              		.loc 1 1769 25 view .LVU1197
 4066 001e 831D     		adds	r3, r0, #6
 4067 0020 DB7F     		ldrb	r3, [r3, #31]
1769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4068              		.loc 1 1769 8 view .LVU1198
 4069 0022 022B     		cmp	r3, #2
 4070 0024 07D1     		bne	.L332
1771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4071              		.loc 1 1771 7 is_stmt 1 view .LVU1199
1771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4072              		.loc 1 1771 24 is_stmt 0 view .LVU1200
 4073 0026 FFF7FEFF 		bl	HAL_DMA_Abort
 4074              	.LVL261:
 4075 002a 041E     		subs	r4, r0, #0
 4076              	.LVL262:
1774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4077              		.loc 1 1774 7 is_stmt 1 view .LVU1201
1774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4078              		.loc 1 1774 10 is_stmt 0 view .LVU1202
 4079 002c 03D0     		beq	.L332
1777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4080              		.loc 1 1777 9 is_stmt 1 view .LVU1203
 4081 002e 4023     		movs	r3, #64
 4082 0030 AA6D     		ldr	r2, [r5, #88]
 4083 0032 1343     		orrs	r3, r2
 4084 0034 AB65     		str	r3, [r5, #88]
 4085              	.LVL263:
 4086              	.L332:
1782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4087              		.loc 1 1782 5 view .LVU1204
 4088 0036 1021     		movs	r1, #16
 4089 0038 2A68     		ldr	r2, [r5]
1789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4090              		.loc 1 1789 24 is_stmt 0 view .LVU1205
 4091 003a 2800     		movs	r0, r5
1782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4092              		.loc 1 1782 5 view .LVU1206
 4093 003c 5368     		ldr	r3, [r2, #4]
 4094 003e 8B43     		bics	r3, r1
 4095 0040 5360     		str	r3, [r2, #4]
1787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
ARM GAS  /tmp/ccrGR9oZ.s 			page 226


 4096              		.loc 1 1787 5 is_stmt 1 view .LVU1207
1787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4097              		.loc 1 1787 8 is_stmt 0 view .LVU1208
 4098 0042 002C     		cmp	r4, #0
 4099 0044 0CD1     		bne	.L335
 4100              	.LVL264:
1789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4101              		.loc 1 1789 7 is_stmt 1 view .LVU1209
1789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4102              		.loc 1 1789 24 is_stmt 0 view .LVU1210
 4103 0046 FFF7FEFF 		bl	ADC_Disable
 4104              	.LVL265:
1789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4105              		.loc 1 1789 24 view .LVU1211
 4106 004a 041E     		subs	r4, r0, #0
 4107              	.LVL266:
1797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4108              		.loc 1 1797 5 is_stmt 1 view .LVU1212
1797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4109              		.loc 1 1797 8 is_stmt 0 view .LVU1213
 4110 004c 0BD0     		beq	.L336
 4111              	.LVL267:
 4112              	.L337:
1806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 4113              		.loc 1 1806 5 is_stmt 1 view .LVU1214
 4114 004e 0121     		movs	r1, #1
 4115 0050 2A68     		ldr	r2, [r5]
 4116 0052 D368     		ldr	r3, [r2, #12]
 4117 0054 8B43     		bics	r3, r1
 4118 0056 D360     		str	r3, [r2, #12]
 4119              	.L331:
 4120              	.LVL268:
1809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4121              		.loc 1 1809 3 view .LVU1215
1809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4122              		.loc 1 1809 3 view .LVU1216
 4123 0058 0023     		movs	r3, #0
 4124 005a 3370     		strb	r3, [r6]
1809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4125              		.loc 1 1809 3 view .LVU1217
1811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 4126              		.loc 1 1811 3 view .LVU1218
 4127              	.LVL269:
 4128              	.L330:
1812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4129              		.loc 1 1812 1 is_stmt 0 view .LVU1219
 4130 005c 2000     		movs	r0, r4
 4131              		@ sp needed
 4132              	.LVL270:
 4133              	.LVL271:
1812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4134              		.loc 1 1812 1 view .LVU1220
 4135 005e 70BD     		pop	{r4, r5, r6, pc}
 4136              	.LVL272:
 4137              	.L335:
1793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4138              		.loc 1 1793 7 is_stmt 1 view .LVU1221
ARM GAS  /tmp/ccrGR9oZ.s 			page 227


1793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4139              		.loc 1 1793 13 is_stmt 0 view .LVU1222
 4140 0060 FFF7FEFF 		bl	ADC_Disable
 4141              	.LVL273:
1797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4142              		.loc 1 1797 5 is_stmt 1 view .LVU1223
 4143 0064 F3E7     		b	.L337
 4144              	.LVL274:
 4145              	.L336:
1800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 4146              		.loc 1 1800 7 view .LVU1224
 4147 0066 AA6D     		ldr	r2, [r5, #88]
 4148 0068 034B     		ldr	r3, .L340
 4149 006a 1A40     		ands	r2, r3
 4150 006c 0433     		adds	r3, r3, #4
 4151 006e FF33     		adds	r3, r3, #255
 4152 0070 1343     		orrs	r3, r2
 4153 0072 AB65     		str	r3, [r5, #88]
 4154 0074 EBE7     		b	.L337
 4155              	.L341:
 4156 0076 C046     		.align	2
 4157              	.L340:
 4158 0078 FEFEFFFF 		.word	-258
 4159              		.cfi_endproc
 4160              	.LFE431:
 4162              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 4163              		.align	1
 4164              		.global	HAL_ADC_AnalogWDGConfig
 4165              		.syntax unified
 4166              		.code	16
 4167              		.thumb_func
 4169              	HAL_ADC_AnalogWDGConfig:
 4170              	.LVL275:
 4171              	.LFB439:
2367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4172              		.loc 1 2367 1 view -0
 4173              		.cfi_startproc
 4174              		@ args = 0, pretend = 0, frame = 8
 4175              		@ frame_needed = 0, uses_anonymous_args = 0
2368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 4176              		.loc 1 2368 3 view .LVU1226
2369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_low_threshold_shifted;
 4177              		.loc 1 2369 3 view .LVU1227
2370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t backup_setting_adc_enable_state = 0UL;
 4178              		.loc 1 2370 3 view .LVU1228
2371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4179              		.loc 1 2371 3 view .LVU1229
2374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(pAnalogWDGConfig->WatchdogNumber));
 4180              		.loc 1 2374 3 view .LVU1230
2375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(pAnalogWDGConfig->WatchdogMode));
 4181              		.loc 1 2375 3 view .LVU1231
2376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(pAnalogWDGConfig->ITMode));
 4182              		.loc 1 2376 3 view .LVU1232
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4183              		.loc 1 2377 3 view .LVU1233
2379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4184              		.loc 1 2379 3 view .LVU1234
ARM GAS  /tmp/ccrGR9oZ.s 			page 228


2381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 4185              		.loc 1 2381 5 view .LVU1235
2385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4186              		.loc 1 2385 3 view .LVU1236
2390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, pAnalogWDGConfig->LowThreshold));
 4187              		.loc 1 2390 5 view .LVU1237
2391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 4188              		.loc 1 2391 5 view .LVU1238
2396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->LowThreshold));
 4189              		.loc 1 2396 5 view .LVU1239
2397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 4190              		.loc 1 2397 5 view .LVU1240
2400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4191              		.loc 1 2400 3 view .LVU1241
2400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4192              		.loc 1 2400 3 view .LVU1242
 4193 0000 0300     		movs	r3, r0
2367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4194              		.loc 1 2367 1 is_stmt 0 view .LVU1243
 4195 0002 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 4196              	.LCFI21:
 4197              		.cfi_def_cfa_offset 32
 4198              		.cfi_offset 0, -32
 4199              		.cfi_offset 1, -28
 4200              		.cfi_offset 2, -24
 4201              		.cfi_offset 4, -20
 4202              		.cfi_offset 5, -16
 4203              		.cfi_offset 6, -12
 4204              		.cfi_offset 7, -8
 4205              		.cfi_offset 14, -4
2400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4206              		.loc 1 2400 3 view .LVU1244
 4207 0004 5433     		adds	r3, r3, #84
 4208 0006 0093     		str	r3, [sp]
 4209 0008 1B78     		ldrb	r3, [r3]
2367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4210              		.loc 1 2367 1 view .LVU1245
 4211 000a 0600     		movs	r6, r0
 4212 000c 0F00     		movs	r7, r1
2400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4213              		.loc 1 2400 3 discriminator 1 view .LVU1246
 4214 000e 0225     		movs	r5, #2
2400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4215              		.loc 1 2400 3 view .LVU1247
 4216 0010 012B     		cmp	r3, #1
 4217 0012 63D0     		beq	.L343
2400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4218              		.loc 1 2400 3 is_stmt 1 discriminator 2 view .LVU1248
 4219 0014 0124     		movs	r4, #1
 4220 0016 009B     		ldr	r3, [sp]
 4221 0018 1C70     		strb	r4, [r3]
2400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4222              		.loc 1 2400 3 discriminator 2 view .LVU1249
2406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4223              		.loc 1 2406 3 view .LVU1250
2406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4224              		.loc 1 2406 7 is_stmt 0 view .LVU1251
ARM GAS  /tmp/ccrGR9oZ.s 			page 229


 4225 001a 0568     		ldr	r5, [r0]
 4226 001c 2800     		movs	r0, r5
 4227              	.LVL276:
2406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4228              		.loc 1 2406 7 view .LVU1252
 4229 001e FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 4230              	.LVL277:
2406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4231              		.loc 1 2406 7 view .LVU1253
 4232 0022 021E     		subs	r2, r0, #0
2406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4233              		.loc 1 2406 6 discriminator 1 view .LVU1254
 4234 0024 00D0     		beq	.LCB3810
 4235 0026 54E1     		b	.L344	@long jump
 4236              	.LCB3810:
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4237              		.loc 1 2409 5 is_stmt 1 view .LVU1255
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4238              		.loc 1 2409 25 is_stmt 0 view .LVU1256
 4239 0028 3968     		ldr	r1, [r7]
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4240              		.loc 1 2409 8 view .LVU1257
 4241 002a AB4B     		ldr	r3, .L412
 4242 002c 9942     		cmp	r1, r3
 4243 002e 67D1     		bne	.L345
2413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4244              		.loc 1 2413 7 is_stmt 1 view .LVU1258
 4245              	.LVL278:
 4246              	.LBB278:
 4247              	.LBI278:
4557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4248              		.loc 2 4557 26 view .LVU1259
 4249              	.LBB279:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4250              		.loc 2 4559 3 view .LVU1260
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4251              		.loc 2 4559 12 is_stmt 0 view .LVU1261
 4252 0030 AB68     		ldr	r3, [r5, #8]
 4253              	.LBE279:
 4254              	.LBE278:
2368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 4255              		.loc 1 2368 21 view .LVU1262
 4256 0032 0500     		movs	r5, r0
 4257              	.LVL279:
 4258              	.LBB281:
 4259              	.LBB280:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4260              		.loc 2 4559 12 view .LVU1263
 4261 0034 1900     		movs	r1, r3
 4262 0036 2140     		ands	r1, r4
 4263 0038 0191     		str	r1, [sp, #4]
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4264              		.loc 2 4559 68 view .LVU1264
 4265 003a 2342     		tst	r3, r4
 4266 003c 03D0     		beq	.L346
 4267              	.LVL280:
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
ARM GAS  /tmp/ccrGR9oZ.s 			page 230


 4268              		.loc 2 4559 68 view .LVU1265
 4269              	.LBE280:
 4270              	.LBE281:
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmp_hal_status = ADC_Disable(hadc);
 4271              		.loc 1 2415 9 is_stmt 1 view .LVU1266
2416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4272              		.loc 1 2416 9 view .LVU1267
2416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4273              		.loc 1 2416 26 is_stmt 0 view .LVU1268
 4274 003e 3000     		movs	r0, r6
 4275 0040 FFF7FEFF 		bl	ADC_Disable
 4276              	.LVL281:
 4277 0044 0500     		movs	r5, r0
 4278              	.LVL282:
 4279              	.L346:
2422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4280              		.loc 1 2422 7 is_stmt 1 view .LVU1269
 4281 0046 8023     		movs	r3, #128
2422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4282              		.loc 1 2422 31 is_stmt 0 view .LVU1270
 4283 0048 7A68     		ldr	r2, [r7, #4]
2425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 4284              		.loc 1 2425 11 view .LVU1271
 4285 004a 3068     		ldr	r0, [r6]
2422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4286              		.loc 1 2422 7 view .LVU1272
 4287 004c 1B04     		lsls	r3, r3, #16
 4288 004e 9A42     		cmp	r2, r3
 4289 0050 46D0     		beq	.L347
 4290 0052 C023     		movs	r3, #192
 4291 0054 1B04     		lsls	r3, r3, #16
 4292 0056 9A42     		cmp	r2, r3
 4293 0058 4AD1     		bne	.L348
2425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 4294              		.loc 1 2425 11 is_stmt 1 view .LVU1273
2426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                                                           LL_ADC_GROUP_REGULAR));
 4295              		.loc 1 2426 43 is_stmt 0 view .LVU1274
 4296 005a A049     		ldr	r1, .L412+4
 4297 005c BB68     		ldr	r3, [r7, #8]
 4298 005e 0B40     		ands	r3, r1
2425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 4299              		.loc 1 2425 11 view .LVU1275
 4300 0060 1A43     		orrs	r2, r3
 4301 0062 9D49     		ldr	r1, .L412
 4302 0064 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
 4303              	.LVL283:
2428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4304              		.loc 1 2428 11 is_stmt 1 view .LVU1276
 4305              	.L349:
2439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4306              		.loc 1 2439 7 view .LVU1277
2439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4307              		.loc 1 2439 10 is_stmt 0 view .LVU1278
 4308 0068 019B     		ldr	r3, [sp, #4]
 4309 006a 012B     		cmp	r3, #1
 4310 006c 05D1     		bne	.L350
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
ARM GAS  /tmp/ccrGR9oZ.s 			page 231


 4311              		.loc 1 2441 9 is_stmt 1 view .LVU1279
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 4312              		.loc 1 2441 12 is_stmt 0 view .LVU1280
 4313 006e 002D     		cmp	r5, #0
 4314 0070 03D1     		bne	.L350
2443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 4315              		.loc 1 2443 11 is_stmt 1 view .LVU1281
2443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 4316              		.loc 1 2443 28 is_stmt 0 view .LVU1282
 4317 0072 3000     		movs	r0, r6
 4318 0074 FFF7FEFF 		bl	ADC_Enable
 4319              	.LVL284:
 4320 0078 0500     		movs	r5, r0
 4321              	.LVL285:
 4322              	.L350:
2448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4323              		.loc 1 2448 7 is_stmt 1 view .LVU1283
 4324 007a B36D     		ldr	r3, [r6, #88]
 4325 007c 984A     		ldr	r2, .L412+8
 4326 007e 1340     		ands	r3, r2
 4327              	.LBB282:
 4328              	.LBB283:
4688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
4691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
4692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
4694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
4696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
4698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
4703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         all oversampling increased data width (for devices
4704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         with feature oversampling).
4705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData32
4706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
4708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
4710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC resolution 12 bits.
4717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         can increase data width, function for extended range
4719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData12
4721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
ARM GAS  /tmp/ccrGR9oZ.s 			page 232


4723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
4725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC resolution 10 bits.
4732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         can increase data width, function for extended range
4734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData10
4736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
4738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
4740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC resolution 8 bits.
4747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         can increase data width, function for extended range
4749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData8
4751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
4753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
4755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC resolution 6 bits.
4762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         can increase data width, function for extended range
4764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData6
4766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
4768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
4770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
4776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
4779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
ARM GAS  /tmp/ccrGR9oZ.s 			page 233


4780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC ready.
4784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
4788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
4792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
4794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC channel configuration ready.
4798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer
4799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
4800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
4801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
4802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
4803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Functions requiring wait for CCRDY flag are:
4804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
4805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks()
4806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChannels()
4807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChAdd()
4808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChRem()
4809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerScanDirection()
4810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerConfigurable()
4811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Duration of ADC channel configuration ready: CCRDY handshake
4812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         requires 1APB + 2 ADC + 3 APB cycles after the channel configuration
4813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         has been changed.
4814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_IsActiveFlag_CCRDY
4815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_CCRDY(ADC_TypeDef *ADCx)
4819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_CCRDY) == (LL_ADC_FLAG_CCRDY)) ? 1UL : 0UL);
4821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
4825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
4826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
4830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
4832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
4836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
ARM GAS  /tmp/ccrGR9oZ.s 			page 234


4837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
4841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
4843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
4847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
4848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
4852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
4854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
4858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
4859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
4863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
4865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
4869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
4870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
4874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
4876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
4880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
4881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
4885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
4887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
4891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
4892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
ARM GAS  /tmp/ccrGR9oZ.s 			page 235


4894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
4896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
4898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC end of calibration.
4902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_IsActiveFlag_EOCAL
4903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOCAL(ADC_TypeDef *ADCx)
4907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOCAL) == (LL_ADC_FLAG_EOCAL)) ? 1UL : 0UL);
4909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
4913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
4917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
4921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
4923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC channel configuration ready.
4927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_ClearFlag_CCRDY
4928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_CCRDY(ADC_TypeDef *ADCx)
4932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_CCRDY);
4934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
4938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
4939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
4943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
4945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
4949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
4950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccrGR9oZ.s 			page 236


4951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
4954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
4956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
4960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
4961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
4965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
4967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
4971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
4972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
4976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
4978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
4982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
4983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
4987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 4329              		.loc 2 4988 3 is_stmt 0 view .LVU1284
 4330 0080 8022     		movs	r2, #128
 4331              	.LBE283:
 4332              	.LBE282:
2448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4333              		.loc 1 2448 7 view .LVU1285
 4334 0082 B365     		str	r3, [r6, #88]
2454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4335              		.loc 1 2454 7 is_stmt 1 view .LVU1286
 4336 0084 3368     		ldr	r3, [r6]
 4337              	.LVL286:
 4338              	.LBB285:
 4339              	.LBI282:
4986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4340              		.loc 2 4986 22 view .LVU1287
 4341              	.LBB284:
 4342              		.loc 2 4988 3 view .LVU1288
 4343 0086 1A60     		str	r2, [r3]
 4344              	.LVL287:
ARM GAS  /tmp/ccrGR9oZ.s 			page 237


 4345              		.loc 2 4988 3 is_stmt 0 view .LVU1289
 4346              	.LBE284:
 4347              	.LBE285:
2457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4348              		.loc 1 2457 7 is_stmt 1 view .LVU1290
2457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4349              		.loc 1 2457 10 is_stmt 0 view .LVU1291
 4350 0088 397B     		ldrb	r1, [r7, #12]
 4351 008a 0129     		cmp	r1, #1
 4352 008c 34D1     		bne	.L351
2459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4353              		.loc 1 2459 9 is_stmt 1 view .LVU1292
 4354              	.LVL288:
 4355              	.LBB286:
 4356              	.LBI286:
4989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
4993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
4994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
4998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
5000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
5004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
5005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
5009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
5011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC end of calibration.
5015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_ClearFlag_EOCAL
5016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOCAL(ADC_TypeDef *ADCx)
5020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOCAL);
5022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
5026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
5029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
5030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
ARM GAS  /tmp/ccrGR9oZ.s 			page 238


5031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable ADC ready.
5034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
5035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
5039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
5041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC channel configuration ready.
5045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      CCRDYIE        LL_ADC_EnableIT_CCRDY
5046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
5048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_CCRDY(ADC_TypeDef *ADCx)
5050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
5052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
5056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
5057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
5061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
5063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
5067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
5068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
5072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
5074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
5078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
5079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
5083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
5085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
ARM GAS  /tmp/ccrGR9oZ.s 			page 239


5088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
5089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
5090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
5094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
5096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
5100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
5101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
 4357              		.loc 2 5104 22 view .LVU1293
 4358              	.LBB287:
5105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 4359              		.loc 2 5106 3 view .LVU1294
 4360 008e 5968     		ldr	r1, [r3, #4]
 4361 0090 0A43     		orrs	r2, r1
 4362 0092 5A60     		str	r2, [r3, #4]
 4363              	.LVL289:
 4364              	.L364:
 4365              		.loc 2 5106 3 is_stmt 0 view .LVU1295
 4366              	.LBE287:
 4367              	.LBE286:
2543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4368              		.loc 1 2543 3 is_stmt 1 view .LVU1296
2543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4369              		.loc 1 2543 23 is_stmt 0 view .LVU1297
 4370 0094 3C68     		ldr	r4, [r7]
2543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4371              		.loc 1 2543 6 view .LVU1298
 4372 0096 904B     		ldr	r3, .L412
2548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 4373              		.loc 1 2548 38 view .LVU1299
 4374 0098 3268     		ldr	r2, [r6]
 4375 009a 3969     		ldr	r1, [r7, #16]
2549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 4376              		.loc 1 2549 38 view .LVU1300
 4377 009c 7869     		ldr	r0, [r7, #20]
2543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4378              		.loc 1 2543 6 view .LVU1301
 4379 009e 9C42     		cmp	r4, r3
 4380 00a0 0AD1     		bne	.L366
2548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 4381              		.loc 1 2548 5 is_stmt 1 view .LVU1302
2548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 4382              		.loc 1 2548 38 is_stmt 0 view .LVU1303
 4383 00a2 0326     		movs	r6, #3
 4384              	.LVL290:
2548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 4385              		.loc 1 2548 38 view .LVU1304
ARM GAS  /tmp/ccrGR9oZ.s 			page 240


 4386 00a4 D368     		ldr	r3, [r2, #12]
 4387 00a6 DB08     		lsrs	r3, r3, #3
 4388 00a8 3340     		ands	r3, r6
 4389 00aa 5B00     		lsls	r3, r3, #1
2548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 4390              		.loc 1 2548 36 view .LVU1305
 4391 00ac 9940     		lsls	r1, r1, r3
 4392              	.LVL291:
2549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 4393              		.loc 1 2549 5 is_stmt 1 view .LVU1306
2549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 4394              		.loc 1 2549 38 is_stmt 0 view .LVU1307
 4395 00ae D368     		ldr	r3, [r2, #12]
 4396 00b0 F340     		lsrs	r3, r3, r6
 4397 00b2 3340     		ands	r3, r6
 4398 00b4 5B00     		lsls	r3, r3, #1
2549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 4399              		.loc 1 2549 36 view .LVU1308
 4400 00b6 9840     		lsls	r0, r0, r3
 4401              	.LVL292:
 4402              	.L366:
2562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                   tmp_awd_low_threshold_shifted);
 4403              		.loc 1 2562 3 is_stmt 1 view .LVU1309
 4404              	.LBB288:
 4405              	.LBI288:
4132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
 4406              		.loc 2 4132 22 view .LVU1310
 4407              	.LBB289:
4140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
 4408              		.loc 2 4140 3 view .LVU1311
4140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
 4409              		.loc 2 4140 25 is_stmt 0 view .LVU1312
 4410 00b8 A302     		lsls	r3, r4, #10
 4411 00ba A402     		lsls	r4, r4, #10
 4412              	.LVL293:
4140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
 4413              		.loc 2 4140 25 view .LVU1313
 4414 00bc E40F     		lsrs	r4, r4, #31
 4415 00be 9B0F     		lsrs	r3, r3, #30
 4416 00c0 1B19     		adds	r3, r3, r4
 4417 00c2 2032     		adds	r2, r2, #32
 4418 00c4 9B00     		lsls	r3, r3, #2
 4419 00c6 9B18     		adds	r3, r3, r2
 4420              	.LVL294:
4147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
 4421              		.loc 2 4147 3 is_stmt 1 view .LVU1314
 4422 00c8 1A68     		ldr	r2, [r3]
 4423 00ca 864C     		ldr	r4, .L412+12
 4424 00cc 0904     		lsls	r1, r1, #16
 4425              	.LVL295:
4147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
 4426              		.loc 2 4147 3 is_stmt 0 view .LVU1315
 4427 00ce 2240     		ands	r2, r4
 4428 00d0 0243     		orrs	r2, r0
 4429 00d2 0A43     		orrs	r2, r1
 4430 00d4 1A60     		str	r2, [r3]
 4431              	.LVL296:
ARM GAS  /tmp/ccrGR9oZ.s 			page 241


4147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
 4432              		.loc 2 4147 3 view .LVU1316
 4433              	.LBE289:
 4434              	.LBE288:
2565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4435              		.loc 1 2565 3 is_stmt 1 view .LVU1317
2565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4436              		.loc 1 2565 3 view .LVU1318
 4437 00d6 0023     		movs	r3, #0
 4438 00d8 009A     		ldr	r2, [sp]
 4439 00da 1370     		strb	r3, [r2]
2565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4440              		.loc 1 2565 3 view .LVU1319
2567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 4441              		.loc 1 2567 3 view .LVU1320
 4442              	.LVL297:
 4443              	.L343:
2568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4444              		.loc 1 2568 1 is_stmt 0 view .LVU1321
 4445 00dc 2800     		movs	r0, r5
 4446              		@ sp needed
 4447              	.LVL298:
2568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4448              		.loc 1 2568 1 view .LVU1322
 4449 00de FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 4450              	.LVL299:
 4451              	.L347:
2431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 4452              		.loc 1 2431 11 is_stmt 1 view .LVU1323
 4453              	.LBB290:
 4454              	.LBI290:
3912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4455              		.loc 2 3912 22 view .LVU1324
 4456              	.LBB291:
3918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4457              		.loc 2 3918 3 view .LVU1325
3920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
 4458              		.loc 2 3920 3 view .LVU1326
3922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 4459              		.loc 2 3922 5 view .LVU1327
3930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4460              		.loc 2 3930 3 view .LVU1328
 4461 00e0 814A     		ldr	r2, .L412+16
 4462 00e2 C368     		ldr	r3, [r0, #12]
 4463 00e4 1340     		ands	r3, r2
 4464 00e6 8022     		movs	r2, #128
 4465 00e8 1204     		lsls	r2, r2, #16
 4466 00ea 1343     		orrs	r3, r2
 4467              	.LVL300:
 4468              	.L408:
3930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4469              		.loc 2 3930 3 is_stmt 0 view .LVU1329
 4470              	.LBE291:
 4471              	.LBE290:
 4472              	.LBB292:
 4473              	.LBB293:
 4474 00ec C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccrGR9oZ.s 			page 242


 4475              	.LBE293:
 4476              	.LBE292:
2436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4477              		.loc 1 2436 11 is_stmt 1 view .LVU1330
 4478              	.LBB296:
 4479              	.LBB294:
3933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4480              		.loc 2 3933 1 is_stmt 0 view .LVU1331
 4481 00ee BBE7     		b	.L349
 4482              	.L348:
 4483              	.LBE294:
 4484              	.LBE296:
2435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 4485              		.loc 1 2435 11 is_stmt 1 view .LVU1332
 4486              	.LVL301:
 4487              	.LBB297:
 4488              	.LBI292:
3912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4489              		.loc 2 3912 22 view .LVU1333
 4490              	.LBB295:
3918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4491              		.loc 2 3918 3 view .LVU1334
3920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
 4492              		.loc 2 3920 3 view .LVU1335
3922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 4493              		.loc 2 3922 5 view .LVU1336
3930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4494              		.loc 2 3930 3 view .LVU1337
 4495 00f0 C368     		ldr	r3, [r0, #12]
 4496 00f2 7D4A     		ldr	r2, .L412+16
 4497 00f4 1340     		ands	r3, r2
 4498 00f6 F9E7     		b	.L408
 4499              	.LVL302:
 4500              	.L351:
3930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4501              		.loc 2 3930 3 is_stmt 0 view .LVU1338
 4502              	.LBE295:
 4503              	.LBE297:
2463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4504              		.loc 1 2463 9 is_stmt 1 view .LVU1339
 4505              	.LBB298:
 4506              	.LBI298:
5107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
5111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
5112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
5116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
5118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
ARM GAS  /tmp/ccrGR9oZ.s 			page 243


5122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
5123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
5127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
5129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC end of calibration.
5133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOCALIE        LL_ADC_EnableIT_EOCAL
5134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOCAL(ADC_TypeDef *ADCx)
5138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOCAL);
5140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
5144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
5145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
5149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
5151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC channel configuration ready.
5155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      CCRDYIE        LL_ADC_DisableIT_CCRDY
5156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
5158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_CCRDY(ADC_TypeDef *ADCx)
5160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
5162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
5166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
5167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
5171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
5173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
5177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
5178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccrGR9oZ.s 			page 244


5179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
5182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
5184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
5188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
5189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
5193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
5195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
5199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
5200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
5204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
5206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
5210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
5211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
 4507              		.loc 2 5214 22 view .LVU1340
 4508              	.LBB299:
5215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 4509              		.loc 2 5216 3 view .LVU1341
 4510 00f8 5968     		ldr	r1, [r3, #4]
 4511 00fa 9143     		bics	r1, r2
 4512 00fc 5960     		str	r1, [r3, #4]
 4513              	.LVL303:
5217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4514              		.loc 2 5217 1 is_stmt 0 view .LVU1342
 4515 00fe C9E7     		b	.L364
 4516              	.LVL304:
 4517              	.L345:
 4518              		.loc 2 5217 1 view .LVU1343
 4519              	.LBE299:
 4520              	.LBE298:
2469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4521              		.loc 1 2469 7 is_stmt 1 view .LVU1344
 4522 0100 8020     		movs	r0, #128
2469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
ARM GAS  /tmp/ccrGR9oZ.s 			page 245


 4523              		.loc 1 2469 31 is_stmt 0 view .LVU1345
 4524 0102 7B68     		ldr	r3, [r7, #4]
2469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4525              		.loc 1 2469 7 view .LVU1346
 4526 0104 0004     		lsls	r0, r0, #16
 4527 0106 8342     		cmp	r3, r0
 4528 0108 00D1     		bne	.LCB4128
 4529 010a D5E0     		b	.L353	@long jump
 4530              	.LCB4128:
 4531 010c C020     		movs	r0, #192
 4532 010e 0004     		lsls	r0, r0, #16
 4533 0110 8342     		cmp	r3, r0
 4534 0112 00D0     		beq	.LCB4132
 4535 0114 D1E0     		b	.L354	@long jump
 4536              	.LCB4132:
2474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 4537              		.loc 1 2474 11 is_stmt 1 view .LVU1347
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4538              		.loc 1 2476 13 is_stmt 0 view .LVU1348
 4539 0116 BB68     		ldr	r3, [r7, #8]
2474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 4540              		.loc 1 2474 14 view .LVU1349
 4541 0118 744A     		ldr	r2, .L412+20
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4542              		.loc 1 2476 13 view .LVU1350
 4543 011a 5803     		lsls	r0, r3, #13
 4544 011c 400B     		lsrs	r0, r0, #13
2474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 4545              		.loc 1 2474 14 view .LVU1351
 4546 011e 9142     		cmp	r1, r2
 4547 0120 65D1     		bne	.L355
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4548              		.loc 1 2476 13 is_stmt 1 view .LVU1352
 4549 0122 2900     		movs	r1, r5
 4550 0124 A031     		adds	r1, r1, #160
 4551 0126 0A68     		ldr	r2, [r1]
 4552 0128 0028     		cmp	r0, #0
 4553 012a 12D1     		bne	.L356
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4554              		.loc 1 2476 13 is_stmt 0 discriminator 1 view .LVU1353
 4555 012c 5B00     		lsls	r3, r3, #1
 4556 012e DB0E     		lsrs	r3, r3, #27
 4557 0130 9C40     		lsls	r4, r4, r3
 4558              	.L357:
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4559              		.loc 1 2476 13 discriminator 80 view .LVU1354
 4560 0132 2243     		orrs	r2, r4
 4561 0134 0A60     		str	r2, [r1]
2495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4562              		.loc 1 2495 7 is_stmt 1 view .LVU1355
 4563              	.L358:
2498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4564              		.loc 1 2498 9 view .LVU1356
 4565 0136 B36D     		ldr	r3, [r6, #88]
 4566 0138 6D4A     		ldr	r2, .L412+24
 4567 013a 1340     		ands	r3, r2
 4568 013c B365     		str	r3, [r6, #88]
ARM GAS  /tmp/ccrGR9oZ.s 			page 246


2504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4569              		.loc 1 2504 9 view .LVU1357
 4570              	.LVL305:
 4571              	.LBB300:
 4572              	.LBI300:
4997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4573              		.loc 2 4997 22 view .LVU1358
 4574              	.LBB301:
4999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4575              		.loc 2 4999 3 view .LVU1359
 4576 013e 8023     		movs	r3, #128
 4577 0140 5B00     		lsls	r3, r3, #1
 4578 0142 2B60     		str	r3, [r5]
 4579              	.LVL306:
4999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4580              		.loc 2 4999 3 is_stmt 0 view .LVU1360
 4581              	.LBE301:
 4582              	.LBE300:
2507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 4583              		.loc 1 2507 9 is_stmt 1 view .LVU1361
2507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 4584              		.loc 1 2507 12 is_stmt 0 view .LVU1362
 4585 0144 3A7B     		ldrb	r2, [r7, #12]
 4586 0146 012A     		cmp	r2, #1
 4587 0148 00D0     		beq	.LCB4177
 4588 014a BEE0     		b	.L363	@long jump
 4589              	.LCB4177:
 4590              	.L411:
2531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 4591              		.loc 1 2531 11 is_stmt 1 view .LVU1363
 4592              	.LVL307:
 4593              	.LBB302:
 4594              	.LBI302:
5126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4595              		.loc 2 5126 22 view .LVU1364
 4596              	.LBB303:
5128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4597              		.loc 2 5128 3 view .LVU1365
 4598 014c 6A68     		ldr	r2, [r5, #4]
 4599 014e 1343     		orrs	r3, r2
 4600 0150 BEE0     		b	.L409
 4601              	.LVL308:
 4602              	.L356:
5128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4603              		.loc 2 5128 3 is_stmt 0 view .LVU1366
 4604              	.LBE303:
 4605              	.LBE302:
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4606              		.loc 1 2476 13 discriminator 2 view .LVU1367
 4607 0152 2342     		tst	r3, r4
 4608 0154 EDD1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4609              		.loc 1 2476 13 discriminator 7 view .LVU1368
 4610 0156 0224     		movs	r4, #2
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4611              		.loc 1 2476 13 discriminator 4 view .LVU1369
 4612 0158 2342     		tst	r3, r4
ARM GAS  /tmp/ccrGR9oZ.s 			page 247


 4613 015a EAD1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4614              		.loc 1 2476 13 discriminator 9 view .LVU1370
 4615 015c 2419     		adds	r4, r4, r4
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4616              		.loc 1 2476 13 discriminator 6 view .LVU1371
 4617 015e 2342     		tst	r3, r4
 4618 0160 E7D1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4619              		.loc 1 2476 13 discriminator 11 view .LVU1372
 4620 0162 0434     		adds	r4, r4, #4
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4621              		.loc 1 2476 13 discriminator 8 view .LVU1373
 4622 0164 2342     		tst	r3, r4
 4623 0166 E4D1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4624              		.loc 1 2476 13 discriminator 13 view .LVU1374
 4625 0168 0834     		adds	r4, r4, #8
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4626              		.loc 1 2476 13 discriminator 10 view .LVU1375
 4627 016a 2342     		tst	r3, r4
 4628 016c E1D1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4629              		.loc 1 2476 13 discriminator 15 view .LVU1376
 4630 016e 1034     		adds	r4, r4, #16
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4631              		.loc 1 2476 13 discriminator 12 view .LVU1377
 4632 0170 2342     		tst	r3, r4
 4633 0172 DED1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4634              		.loc 1 2476 13 discriminator 17 view .LVU1378
 4635 0174 2034     		adds	r4, r4, #32
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4636              		.loc 1 2476 13 discriminator 14 view .LVU1379
 4637 0176 2342     		tst	r3, r4
 4638 0178 DBD1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4639              		.loc 1 2476 13 discriminator 19 view .LVU1380
 4640 017a 4034     		adds	r4, r4, #64
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4641              		.loc 1 2476 13 discriminator 16 view .LVU1381
 4642 017c 2342     		tst	r3, r4
 4643 017e D8D1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4644              		.loc 1 2476 13 discriminator 18 view .LVU1382
 4645 0180 8020     		movs	r0, #128
 4646 0182 4000     		lsls	r0, r0, #1
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4647              		.loc 1 2476 13 discriminator 21 view .LVU1383
 4648 0184 0400     		movs	r4, r0
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4649              		.loc 1 2476 13 discriminator 18 view .LVU1384
 4650 0186 0342     		tst	r3, r0
 4651 0188 D3D1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4652              		.loc 1 2476 13 discriminator 20 view .LVU1385
 4653 018a 0018     		adds	r0, r0, r0
ARM GAS  /tmp/ccrGR9oZ.s 			page 248


2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4654              		.loc 1 2476 13 discriminator 23 view .LVU1386
 4655 018c 0400     		movs	r4, r0
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4656              		.loc 1 2476 13 discriminator 20 view .LVU1387
 4657 018e 0342     		tst	r3, r0
 4658 0190 CFD1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4659              		.loc 1 2476 13 discriminator 22 view .LVU1388
 4660 0192 8020     		movs	r0, #128
 4661 0194 C000     		lsls	r0, r0, #3
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4662              		.loc 1 2476 13 discriminator 25 view .LVU1389
 4663 0196 0400     		movs	r4, r0
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4664              		.loc 1 2476 13 discriminator 22 view .LVU1390
 4665 0198 0342     		tst	r3, r0
 4666 019a CAD1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4667              		.loc 1 2476 13 discriminator 24 view .LVU1391
 4668 019c 8020     		movs	r0, #128
 4669 019e 0001     		lsls	r0, r0, #4
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4670              		.loc 1 2476 13 discriminator 27 view .LVU1392
 4671 01a0 0400     		movs	r4, r0
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4672              		.loc 1 2476 13 discriminator 24 view .LVU1393
 4673 01a2 0342     		tst	r3, r0
 4674 01a4 C5D1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4675              		.loc 1 2476 13 discriminator 26 view .LVU1394
 4676 01a6 D804     		lsls	r0, r3, #19
 4677 01a8 1ED4     		bmi	.L381
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4678              		.loc 1 2476 13 discriminator 28 view .LVU1395
 4679 01aa 8020     		movs	r0, #128
 4680 01ac 8001     		lsls	r0, r0, #6
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4681              		.loc 1 2476 13 discriminator 31 view .LVU1396
 4682 01ae 0400     		movs	r4, r0
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4683              		.loc 1 2476 13 discriminator 28 view .LVU1397
 4684 01b0 0342     		tst	r3, r0
 4685 01b2 BED1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4686              		.loc 1 2476 13 discriminator 30 view .LVU1398
 4687 01b4 8020     		movs	r0, #128
 4688 01b6 C001     		lsls	r0, r0, #7
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4689              		.loc 1 2476 13 discriminator 33 view .LVU1399
 4690 01b8 0400     		movs	r4, r0
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4691              		.loc 1 2476 13 discriminator 30 view .LVU1400
 4692 01ba 0342     		tst	r3, r0
 4693 01bc B9D1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4694              		.loc 1 2476 13 discriminator 32 view .LVU1401
ARM GAS  /tmp/ccrGR9oZ.s 			page 249


 4695 01be 8020     		movs	r0, #128
 4696 01c0 0002     		lsls	r0, r0, #8
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4697              		.loc 1 2476 13 discriminator 35 view .LVU1402
 4698 01c2 0400     		movs	r4, r0
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4699              		.loc 1 2476 13 discriminator 32 view .LVU1403
 4700 01c4 0342     		tst	r3, r0
 4701 01c6 B4D1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4702              		.loc 1 2476 13 discriminator 34 view .LVU1404
 4703 01c8 8020     		movs	r0, #128
 4704 01ca 4002     		lsls	r0, r0, #9
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4705              		.loc 1 2476 13 discriminator 37 view .LVU1405
 4706 01cc 0400     		movs	r4, r0
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4707              		.loc 1 2476 13 discriminator 34 view .LVU1406
 4708 01ce 0342     		tst	r3, r0
 4709 01d0 AFD1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4710              		.loc 1 2476 13 discriminator 36 view .LVU1407
 4711 01d2 8020     		movs	r0, #128
 4712 01d4 8002     		lsls	r0, r0, #10
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4713              		.loc 1 2476 13 discriminator 39 view .LVU1408
 4714 01d6 0400     		movs	r4, r0
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4715              		.loc 1 2476 13 discriminator 36 view .LVU1409
 4716 01d8 0342     		tst	r3, r0
 4717 01da AAD1     		bne	.L357
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4718              		.loc 1 2476 13 discriminator 38 view .LVU1410
 4719 01dc 5C03     		lsls	r4, r3, #13
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4720              		.loc 1 2476 13 discriminator 5 view .LVU1411
 4721 01de E417     		asrs	r4, r4, #31
 4722 01e0 A403     		lsls	r4, r4, #14
 4723 01e2 A40B     		lsrs	r4, r4, #14
 4724 01e4 0134     		adds	r4, r4, #1
 4725 01e6 A4E7     		b	.L357
 4726              	.L381:
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4727              		.loc 1 2476 13 discriminator 29 view .LVU1412
 4728 01e8 8024     		movs	r4, #128
 4729 01ea 6401     		lsls	r4, r4, #5
 4730 01ec A1E7     		b	.L357
 4731              	.L355:
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4732              		.loc 1 2480 13 is_stmt 1 view .LVU1413
 4733 01ee 2900     		movs	r1, r5
 4734 01f0 A431     		adds	r1, r1, #164
 4735 01f2 0A68     		ldr	r2, [r1]
 4736 01f4 0028     		cmp	r0, #0
 4737 01f6 11D1     		bne	.L359
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4738              		.loc 1 2480 13 is_stmt 0 discriminator 1 view .LVU1414
ARM GAS  /tmp/ccrGR9oZ.s 			page 250


 4739 01f8 5B00     		lsls	r3, r3, #1
 4740 01fa DB0E     		lsrs	r3, r3, #27
 4741 01fc 9C40     		lsls	r4, r4, r3
 4742              	.L360:
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4743              		.loc 1 2480 13 discriminator 80 view .LVU1415
 4744 01fe 2243     		orrs	r2, r4
 4745 0200 0A60     		str	r2, [r1]
2495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4746              		.loc 1 2495 7 is_stmt 1 view .LVU1416
 4747              	.L361:
2520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4748              		.loc 1 2520 9 view .LVU1417
 4749 0202 B36D     		ldr	r3, [r6, #88]
 4750 0204 3B4A     		ldr	r2, .L412+28
 4751 0206 1340     		ands	r3, r2
 4752 0208 B365     		str	r3, [r6, #88]
2526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4753              		.loc 1 2526 9 view .LVU1418
 4754              	.LVL309:
 4755              	.LBB304:
 4756              	.LBI304:
5008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4757              		.loc 2 5008 22 view .LVU1419
 4758              	.LBB305:
5010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4759              		.loc 2 5010 3 view .LVU1420
 4760 020a 8023     		movs	r3, #128
 4761 020c 9B00     		lsls	r3, r3, #2
 4762 020e 2B60     		str	r3, [r5]
 4763              	.LVL310:
5010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4764              		.loc 2 5010 3 is_stmt 0 view .LVU1421
 4765              	.LBE305:
 4766              	.LBE304:
2529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 4767              		.loc 1 2529 9 is_stmt 1 view .LVU1422
2529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 4768              		.loc 1 2529 12 is_stmt 0 view .LVU1423
 4769 0210 3A7B     		ldrb	r2, [r7, #12]
 4770 0212 012A     		cmp	r2, #1
 4771 0214 9AD0     		beq	.L411
2535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 4772              		.loc 1 2535 11 is_stmt 1 view .LVU1424
 4773              	.LVL311:
 4774              	.LBB306:
 4775              	.LBI306:
5218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
5221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
5222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
5226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
ARM GAS  /tmp/ccrGR9oZ.s 			page 251


5228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
5232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
5233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
 4776              		.loc 2 5236 22 view .LVU1425
 4777              	.LBB307:
5237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 4778              		.loc 2 5238 3 view .LVU1426
 4779 0216 6B68     		ldr	r3, [r5, #4]
 4780 0218 374A     		ldr	r2, .L412+32
 4781 021a 58E0     		b	.L410
 4782              	.LVL312:
 4783              	.L359:
 4784              		.loc 2 5238 3 is_stmt 0 view .LVU1427
 4785              	.LBE307:
 4786              	.LBE306:
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4787              		.loc 1 2480 13 discriminator 2 view .LVU1428
 4788 021c 2342     		tst	r3, r4
 4789 021e EED1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4790              		.loc 1 2480 13 discriminator 7 view .LVU1429
 4791 0220 0224     		movs	r4, #2
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4792              		.loc 1 2480 13 discriminator 4 view .LVU1430
 4793 0222 2342     		tst	r3, r4
 4794 0224 EBD1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4795              		.loc 1 2480 13 discriminator 9 view .LVU1431
 4796 0226 2419     		adds	r4, r4, r4
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4797              		.loc 1 2480 13 discriminator 6 view .LVU1432
 4798 0228 2342     		tst	r3, r4
 4799 022a E8D1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4800              		.loc 1 2480 13 discriminator 11 view .LVU1433
 4801 022c 0434     		adds	r4, r4, #4
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4802              		.loc 1 2480 13 discriminator 8 view .LVU1434
 4803 022e 2342     		tst	r3, r4
 4804 0230 E5D1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4805              		.loc 1 2480 13 discriminator 13 view .LVU1435
 4806 0232 0834     		adds	r4, r4, #8
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4807              		.loc 1 2480 13 discriminator 10 view .LVU1436
 4808 0234 2342     		tst	r3, r4
 4809 0236 E2D1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4810              		.loc 1 2480 13 discriminator 15 view .LVU1437
 4811 0238 1034     		adds	r4, r4, #16
ARM GAS  /tmp/ccrGR9oZ.s 			page 252


2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4812              		.loc 1 2480 13 discriminator 12 view .LVU1438
 4813 023a 2342     		tst	r3, r4
 4814 023c DFD1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4815              		.loc 1 2480 13 discriminator 17 view .LVU1439
 4816 023e 2034     		adds	r4, r4, #32
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4817              		.loc 1 2480 13 discriminator 14 view .LVU1440
 4818 0240 2342     		tst	r3, r4
 4819 0242 DCD1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4820              		.loc 1 2480 13 discriminator 19 view .LVU1441
 4821 0244 4034     		adds	r4, r4, #64
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4822              		.loc 1 2480 13 discriminator 16 view .LVU1442
 4823 0246 2342     		tst	r3, r4
 4824 0248 D9D1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4825              		.loc 1 2480 13 discriminator 18 view .LVU1443
 4826 024a 8020     		movs	r0, #128
 4827 024c 4000     		lsls	r0, r0, #1
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4828              		.loc 1 2480 13 discriminator 21 view .LVU1444
 4829 024e 0400     		movs	r4, r0
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4830              		.loc 1 2480 13 discriminator 18 view .LVU1445
 4831 0250 0342     		tst	r3, r0
 4832 0252 D4D1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4833              		.loc 1 2480 13 discriminator 20 view .LVU1446
 4834 0254 0018     		adds	r0, r0, r0
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4835              		.loc 1 2480 13 discriminator 23 view .LVU1447
 4836 0256 0400     		movs	r4, r0
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4837              		.loc 1 2480 13 discriminator 20 view .LVU1448
 4838 0258 0342     		tst	r3, r0
 4839 025a D0D1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4840              		.loc 1 2480 13 discriminator 22 view .LVU1449
 4841 025c 8020     		movs	r0, #128
 4842 025e C000     		lsls	r0, r0, #3
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4843              		.loc 1 2480 13 discriminator 25 view .LVU1450
 4844 0260 0400     		movs	r4, r0
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4845              		.loc 1 2480 13 discriminator 22 view .LVU1451
 4846 0262 0342     		tst	r3, r0
 4847 0264 CBD1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4848              		.loc 1 2480 13 discriminator 24 view .LVU1452
 4849 0266 8020     		movs	r0, #128
 4850 0268 0001     		lsls	r0, r0, #4
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4851              		.loc 1 2480 13 discriminator 27 view .LVU1453
 4852 026a 0400     		movs	r4, r0
ARM GAS  /tmp/ccrGR9oZ.s 			page 253


2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4853              		.loc 1 2480 13 discriminator 24 view .LVU1454
 4854 026c 0342     		tst	r3, r0
 4855 026e C6D1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4856              		.loc 1 2480 13 discriminator 26 view .LVU1455
 4857 0270 D804     		lsls	r0, r3, #19
 4858 0272 1ED4     		bmi	.L400
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4859              		.loc 1 2480 13 discriminator 28 view .LVU1456
 4860 0274 8020     		movs	r0, #128
 4861 0276 8001     		lsls	r0, r0, #6
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4862              		.loc 1 2480 13 discriminator 31 view .LVU1457
 4863 0278 0400     		movs	r4, r0
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4864              		.loc 1 2480 13 discriminator 28 view .LVU1458
 4865 027a 0342     		tst	r3, r0
 4866 027c BFD1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4867              		.loc 1 2480 13 discriminator 30 view .LVU1459
 4868 027e 8020     		movs	r0, #128
 4869 0280 C001     		lsls	r0, r0, #7
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4870              		.loc 1 2480 13 discriminator 33 view .LVU1460
 4871 0282 0400     		movs	r4, r0
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4872              		.loc 1 2480 13 discriminator 30 view .LVU1461
 4873 0284 0342     		tst	r3, r0
 4874 0286 BAD1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4875              		.loc 1 2480 13 discriminator 32 view .LVU1462
 4876 0288 8020     		movs	r0, #128
 4877 028a 0002     		lsls	r0, r0, #8
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4878              		.loc 1 2480 13 discriminator 35 view .LVU1463
 4879 028c 0400     		movs	r4, r0
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4880              		.loc 1 2480 13 discriminator 32 view .LVU1464
 4881 028e 0342     		tst	r3, r0
 4882 0290 B5D1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4883              		.loc 1 2480 13 discriminator 34 view .LVU1465
 4884 0292 8020     		movs	r0, #128
 4885 0294 4002     		lsls	r0, r0, #9
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4886              		.loc 1 2480 13 discriminator 37 view .LVU1466
 4887 0296 0400     		movs	r4, r0
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4888              		.loc 1 2480 13 discriminator 34 view .LVU1467
 4889 0298 0342     		tst	r3, r0
 4890 029a B0D1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4891              		.loc 1 2480 13 discriminator 36 view .LVU1468
 4892 029c 8020     		movs	r0, #128
 4893 029e 8002     		lsls	r0, r0, #10
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
ARM GAS  /tmp/ccrGR9oZ.s 			page 254


 4894              		.loc 1 2480 13 discriminator 39 view .LVU1469
 4895 02a0 0400     		movs	r4, r0
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4896              		.loc 1 2480 13 discriminator 36 view .LVU1470
 4897 02a2 0342     		tst	r3, r0
 4898 02a4 ABD1     		bne	.L360
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4899              		.loc 1 2480 13 discriminator 38 view .LVU1471
 4900 02a6 5B03     		lsls	r3, r3, #13
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4901              		.loc 1 2480 13 discriminator 5 view .LVU1472
 4902 02a8 DB17     		asrs	r3, r3, #31
 4903 02aa 9B03     		lsls	r3, r3, #14
 4904 02ac 9C0B     		lsrs	r4, r3, #14
 4905 02ae 0134     		adds	r4, r4, #1
 4906 02b0 A5E7     		b	.L360
 4907              	.L400:
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4908              		.loc 1 2480 13 discriminator 29 view .LVU1473
 4909 02b2 8024     		movs	r4, #128
 4910 02b4 6401     		lsls	r4, r4, #5
 4911 02b6 A2E7     		b	.L360
 4912              	.L353:
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                           pAnalogWDGConfig->WatchdogNumber, 
 4913              		.loc 1 2485 11 is_stmt 1 view .LVU1474
 4914 02b8 104A     		ldr	r2, .L412+36
 4915              	.L354:
2491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 4916              		.loc 1 2491 11 view .LVU1475
 4917 02ba 2800     		movs	r0, r5
 4918 02bc FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
 4919              	.LVL313:
2492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4920              		.loc 1 2492 11 view .LVU1476
2495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4921              		.loc 1 2495 7 view .LVU1477
2495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4922              		.loc 1 2495 10 is_stmt 0 view .LVU1478
 4923 02c0 3B68     		ldr	r3, [r7]
 4924 02c2 0A4A     		ldr	r2, .L412+20
 4925 02c4 9342     		cmp	r3, r2
 4926 02c6 9CD1     		bne	.L361
 4927 02c8 35E7     		b	.L358
 4928              	.L363:
2513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 4929              		.loc 1 2513 11 is_stmt 1 view .LVU1479
 4930              	.LVL314:
 4931              	.LBB308:
 4932              	.LBI308:
5225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4933              		.loc 2 5225 22 view .LVU1480
 4934              	.LBB309:
5227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4935              		.loc 2 5227 3 view .LVU1481
 4936 02ca 6B68     		ldr	r3, [r5, #4]
 4937 02cc 0C4A     		ldr	r2, .L412+40
 4938              	.LVL315:
ARM GAS  /tmp/ccrGR9oZ.s 			page 255


 4939              	.L410:
5227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4940              		.loc 2 5227 3 is_stmt 0 view .LVU1482
 4941 02ce 1340     		ands	r3, r2
 4942              	.L409:
 4943 02d0 6B60     		str	r3, [r5, #4]
 4944              	.L344:
5227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4945              		.loc 2 5227 3 view .LVU1483
 4946              	.LBE309:
 4947              	.LBE308:
2368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 4948              		.loc 1 2368 21 view .LVU1484
 4949 02d2 0025     		movs	r5, #0
 4950 02d4 DEE6     		b	.L364
 4951              	.L413:
 4952 02d6 C046     		.align	2
 4953              	.L412:
 4954 02d8 0000C07C 		.word	2092957696
 4955 02dc FFFF07FC 		.word	-66584577
 4956 02e0 FFFFFEFF 		.word	-65537
 4957 02e4 00F000F0 		.word	-268374016
 4958 02e8 FFFF3F83 		.word	-2092957697
 4959 02ec FFFF1700 		.word	1572863
 4960 02f0 FFFFFDFF 		.word	-131073
 4961 02f4 FFFFFBFF 		.word	-262145
 4962 02f8 FFFDFFFF 		.word	-513
 4963 02fc FFFF8700 		.word	8912895
 4964 0300 FFFEFFFF 		.word	-257
 4965              		.cfi_endproc
 4966              	.LFE439:
 4968              		.text
 4969              	.Letext0:
 4970              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 4971              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 4972              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g030xx.h"
 4973              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 4974              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 4975              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 4976              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_adc.h"
 4977              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_adc_ex.h"
 4978              		.file 11 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 4979              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 4980              		.file 13 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
ARM GAS  /tmp/ccrGR9oZ.s 			page 256


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal_adc.c
     /tmp/ccrGR9oZ.s:19     .text.LL_ADC_SetAnalogWDMonitChannels:00000000 $t
     /tmp/ccrGR9oZ.s:24     .text.LL_ADC_SetAnalogWDMonitChannels:00000000 LL_ADC_SetAnalogWDMonitChannels
     /tmp/ccrGR9oZ.s:83     .text.LL_ADC_SetAnalogWDMonitChannels:00000028 $d
     /tmp/ccrGR9oZ.s:89     .text.LL_ADC_REG_IsConversionOngoing:00000000 $t
     /tmp/ccrGR9oZ.s:94     .text.LL_ADC_REG_IsConversionOngoing:00000000 LL_ADC_REG_IsConversionOngoing
     /tmp/ccrGR9oZ.s:117    .text.HAL_ADC_MspInit:00000000 $t
     /tmp/ccrGR9oZ.s:123    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
     /tmp/ccrGR9oZ.s:140    .text.HAL_ADC_Init:00000000 $t
     /tmp/ccrGR9oZ.s:146    .text.HAL_ADC_Init:00000000 HAL_ADC_Init
     /tmp/ccrGR9oZ.s:723    .text.HAL_ADC_Init:00000200 $d
     /tmp/ccrGR9oZ.s:735    .text.HAL_ADC_MspDeInit:00000000 $t
     /tmp/ccrGR9oZ.s:741    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
     /tmp/ccrGR9oZ.s:754    .text.HAL_ADC_PollForConversion:00000000 $t
     /tmp/ccrGR9oZ.s:760    .text.HAL_ADC_PollForConversion:00000000 HAL_ADC_PollForConversion
     /tmp/ccrGR9oZ.s:973    .text.HAL_ADC_PollForConversion:000000c4 $d
     /tmp/ccrGR9oZ.s:978    .text.HAL_ADC_PollForEvent:00000000 $t
     /tmp/ccrGR9oZ.s:984    .text.HAL_ADC_PollForEvent:00000000 HAL_ADC_PollForEvent
     /tmp/ccrGR9oZ.s:1155   .text.HAL_ADC_GetValue:00000000 $t
     /tmp/ccrGR9oZ.s:1161   .text.HAL_ADC_GetValue:00000000 HAL_ADC_GetValue
     /tmp/ccrGR9oZ.s:1184   .text.HAL_ADC_ConvCpltCallback:00000000 $t
     /tmp/ccrGR9oZ.s:1190   .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
     /tmp/ccrGR9oZ.s:1203   .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
     /tmp/ccrGR9oZ.s:1209   .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccrGR9oZ.s:1222   .text.ADC_DMAHalfConvCplt:00000000 $t
     /tmp/ccrGR9oZ.s:1227   .text.ADC_DMAHalfConvCplt:00000000 ADC_DMAHalfConvCplt
     /tmp/ccrGR9oZ.s:1255   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 $t
     /tmp/ccrGR9oZ.s:1261   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccrGR9oZ.s:1274   .text.HAL_ADC_ErrorCallback:00000000 $t
     /tmp/ccrGR9oZ.s:1280   .text.HAL_ADC_ErrorCallback:00000000 HAL_ADC_ErrorCallback
     /tmp/ccrGR9oZ.s:1293   .text.ADC_DMAError:00000000 $t
     /tmp/ccrGR9oZ.s:1298   .text.ADC_DMAError:00000000 ADC_DMAError
     /tmp/ccrGR9oZ.s:1339   .text.ADC_DMAConvCplt:00000000 $t
     /tmp/ccrGR9oZ.s:1344   .text.ADC_DMAConvCplt:00000000 ADC_DMAConvCplt
     /tmp/ccrGR9oZ.s:1488   .text.ADC_DMAConvCplt:00000080 $d
     /tmp/ccrGR9oZ.s:1493   .text.HAL_ADC_IRQHandler:00000000 $t
     /tmp/ccrGR9oZ.s:1499   .text.HAL_ADC_IRQHandler:00000000 HAL_ADC_IRQHandler
     /tmp/ccrGR9oZ.s:1831   .text.HAL_ADC_IRQHandler:00000158 $d
     /tmp/ccrGR9oZ.s:1836   .text.HAL_ADC_ConfigChannel:00000000 $t
     /tmp/ccrGR9oZ.s:1842   .text.HAL_ADC_ConfigChannel:00000000 HAL_ADC_ConfigChannel
     /tmp/ccrGR9oZ.s:2518   .text.HAL_ADC_ConfigChannel:00000228 $d
     /tmp/ccrGR9oZ.s:2530   .text.HAL_ADC_GetState:00000000 $t
     /tmp/ccrGR9oZ.s:2536   .text.HAL_ADC_GetState:00000000 HAL_ADC_GetState
     /tmp/ccrGR9oZ.s:2556   .text.HAL_ADC_GetError:00000000 $t
     /tmp/ccrGR9oZ.s:2562   .text.HAL_ADC_GetError:00000000 HAL_ADC_GetError
     /tmp/ccrGR9oZ.s:2582   .text.ADC_ConversionStop:00000000 $t
     /tmp/ccrGR9oZ.s:2588   .text.ADC_ConversionStop:00000000 ADC_ConversionStop
     /tmp/ccrGR9oZ.s:2716   .text.ADC_ConversionStop:0000005c $d
     /tmp/ccrGR9oZ.s:2721   .text.ADC_Enable:00000000 $t
     /tmp/ccrGR9oZ.s:2727   .text.ADC_Enable:00000000 ADC_Enable
     /tmp/ccrGR9oZ.s:2953   .text.ADC_Enable:000000a4 $d
     /tmp/ccrGR9oZ.s:2962   .text.HAL_ADC_Start:00000000 $t
     /tmp/ccrGR9oZ.s:2968   .text.HAL_ADC_Start:00000000 HAL_ADC_Start
     /tmp/ccrGR9oZ.s:3076   .text.HAL_ADC_Start:00000054 $d
     /tmp/ccrGR9oZ.s:3082   .text.HAL_ADC_Start_IT:00000000 $t
     /tmp/ccrGR9oZ.s:3088   .text.HAL_ADC_Start_IT:00000000 HAL_ADC_Start_IT
ARM GAS  /tmp/ccrGR9oZ.s 			page 257


     /tmp/ccrGR9oZ.s:3227   .text.HAL_ADC_Start_IT:00000078 $d
     /tmp/ccrGR9oZ.s:3233   .text.HAL_ADC_Start_DMA:00000000 $t
     /tmp/ccrGR9oZ.s:3239   .text.HAL_ADC_Start_DMA:00000000 HAL_ADC_Start_DMA
     /tmp/ccrGR9oZ.s:3428   .text.HAL_ADC_Start_DMA:0000009c $d
     /tmp/ccrGR9oZ.s:3437   .text.ADC_Disable:00000000 $t
     /tmp/ccrGR9oZ.s:3443   .text.ADC_Disable:00000000 ADC_Disable
     /tmp/ccrGR9oZ.s:3621   .text.ADC_Disable:00000074 $d
     /tmp/ccrGR9oZ.s:3626   .text.HAL_ADC_DeInit:00000000 $t
     /tmp/ccrGR9oZ.s:3632   .text.HAL_ADC_DeInit:00000000 HAL_ADC_DeInit
     /tmp/ccrGR9oZ.s:3807   .text.HAL_ADC_DeInit:00000090 $d
     /tmp/ccrGR9oZ.s:3818   .text.HAL_ADC_Stop:00000000 $t
     /tmp/ccrGR9oZ.s:3824   .text.HAL_ADC_Stop:00000000 HAL_ADC_Stop
     /tmp/ccrGR9oZ.s:3906   .text.HAL_ADC_Stop:00000038 $d
     /tmp/ccrGR9oZ.s:3911   .text.HAL_ADC_Stop_IT:00000000 $t
     /tmp/ccrGR9oZ.s:3917   .text.HAL_ADC_Stop_IT:00000000 HAL_ADC_Stop_IT
     /tmp/ccrGR9oZ.s:4006   .text.HAL_ADC_Stop_IT:00000044 $d
     /tmp/ccrGR9oZ.s:4011   .text.HAL_ADC_Stop_DMA:00000000 $t
     /tmp/ccrGR9oZ.s:4017   .text.HAL_ADC_Stop_DMA:00000000 HAL_ADC_Stop_DMA
     /tmp/ccrGR9oZ.s:4158   .text.HAL_ADC_Stop_DMA:00000078 $d
     /tmp/ccrGR9oZ.s:4163   .text.HAL_ADC_AnalogWDGConfig:00000000 $t
     /tmp/ccrGR9oZ.s:4169   .text.HAL_ADC_AnalogWDGConfig:00000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccrGR9oZ.s:4954   .text.HAL_ADC_AnalogWDGConfig:000002d8 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_ChannelConfigReadyCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
