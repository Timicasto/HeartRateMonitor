ARM GAS  /tmp/ccKmuNkp.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/usart.c"
  18              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  19              		.align	1
  20              		.global	MX_USART1_UART_Init
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	MX_USART1_UART_Init:
  26              	.LFB420:
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  28:Core/Src/usart.c **** 
  29:Core/Src/usart.c **** /* USART1 init function */
  30:Core/Src/usart.c **** 
  31:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  32:Core/Src/usart.c **** {
ARM GAS  /tmp/ccKmuNkp.s 			page 2


  27              		.loc 1 32 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  33:Core/Src/usart.c **** 
  34:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 0 */
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c ****   /* USER CODE END USART1_Init 0 */
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 1 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****   /* USER CODE END USART1_Init 1 */
  41:Core/Src/usart.c ****   huart1.Instance = USART1;
  31              		.loc 1 41 3 view .LVU1
  32:Core/Src/usart.c **** 
  32              		.loc 1 32 1 is_stmt 0 view .LVU2
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38              		.loc 1 41 19 view .LVU3
  39 0002 184B     		ldr	r3, .L18
  40 0004 184C     		ldr	r4, .L18+4
  42:Core/Src/usart.c ****   huart1.Init.BaudRate = 115200;
  43:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  44:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  45:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  46:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  41              		.loc 1 46 20 view .LVU4
  42 0006 0C22     		movs	r2, #12
  41:Core/Src/usart.c ****   huart1.Init.BaudRate = 115200;
  43              		.loc 1 41 19 view .LVU5
  44 0008 2360     		str	r3, [r4]
  42:Core/Src/usart.c ****   huart1.Init.BaudRate = 115200;
  45              		.loc 1 42 3 is_stmt 1 view .LVU6
  42:Core/Src/usart.c ****   huart1.Init.BaudRate = 115200;
  46              		.loc 1 42 24 is_stmt 0 view .LVU7
  47 000a E123     		movs	r3, #225
  48 000c 5B02     		lsls	r3, r3, #9
  49 000e 6360     		str	r3, [r4, #4]
  43:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  50              		.loc 1 43 3 is_stmt 1 view .LVU8
  43:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 43 26 is_stmt 0 view .LVU9
  52 0010 0023     		movs	r3, #0
  47:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  48:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  49:Core/Src/usart.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  50:Core/Src/usart.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
  51:Core/Src/usart.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  52:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  53              		.loc 1 52 7 view .LVU10
  54 0012 2000     		movs	r0, r4
  43:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  55              		.loc 1 43 26 view .LVU11
  56 0014 A360     		str	r3, [r4, #8]
ARM GAS  /tmp/ccKmuNkp.s 			page 3


  44:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  57              		.loc 1 44 3 is_stmt 1 view .LVU12
  44:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  58              		.loc 1 44 24 is_stmt 0 view .LVU13
  59 0016 E360     		str	r3, [r4, #12]
  45:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  60              		.loc 1 45 3 is_stmt 1 view .LVU14
  45:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  61              		.loc 1 45 22 is_stmt 0 view .LVU15
  62 0018 2361     		str	r3, [r4, #16]
  46:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  63              		.loc 1 46 3 is_stmt 1 view .LVU16
  46:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  64              		.loc 1 46 20 is_stmt 0 view .LVU17
  65 001a 6261     		str	r2, [r4, #20]
  47:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  66              		.loc 1 47 3 is_stmt 1 view .LVU18
  47:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  67              		.loc 1 47 25 is_stmt 0 view .LVU19
  68 001c A361     		str	r3, [r4, #24]
  48:Core/Src/usart.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  69              		.loc 1 48 3 is_stmt 1 view .LVU20
  48:Core/Src/usart.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  70              		.loc 1 48 28 is_stmt 0 view .LVU21
  71 001e E361     		str	r3, [r4, #28]
  49:Core/Src/usart.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
  72              		.loc 1 49 3 is_stmt 1 view .LVU22
  49:Core/Src/usart.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
  73              		.loc 1 49 30 is_stmt 0 view .LVU23
  74 0020 2362     		str	r3, [r4, #32]
  50:Core/Src/usart.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  75              		.loc 1 50 3 is_stmt 1 view .LVU24
  50:Core/Src/usart.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  76              		.loc 1 50 30 is_stmt 0 view .LVU25
  77 0022 6362     		str	r3, [r4, #36]
  51:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  78              		.loc 1 51 3 is_stmt 1 view .LVU26
  51:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  79              		.loc 1 51 38 is_stmt 0 view .LVU27
  80 0024 A362     		str	r3, [r4, #40]
  81              		.loc 1 52 3 is_stmt 1 view .LVU28
  82              		.loc 1 52 7 is_stmt 0 view .LVU29
  83 0026 FFF7FEFF 		bl	HAL_UART_Init
  84              	.LVL0:
  85              		.loc 1 52 6 discriminator 1 view .LVU30
  86 002a 0028     		cmp	r0, #0
  87 002c 01D0     		beq	.L2
  53:Core/Src/usart.c ****   {
  54:Core/Src/usart.c ****     Error_Handler();
  88              		.loc 1 54 5 is_stmt 1 view .LVU31
  89 002e FFF7FEFF 		bl	Error_Handler
  90              	.LVL1:
  91              	.L2:
  55:Core/Src/usart.c ****   }
  56:Core/Src/usart.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
  92              		.loc 1 56 3 view .LVU32
  93              		.loc 1 56 7 is_stmt 0 view .LVU33
ARM GAS  /tmp/ccKmuNkp.s 			page 4


  94 0032 0021     		movs	r1, #0
  95 0034 2000     		movs	r0, r4
  96 0036 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
  97              	.LVL2:
  98              		.loc 1 56 6 discriminator 1 view .LVU34
  99 003a 0028     		cmp	r0, #0
 100 003c 01D0     		beq	.L3
  57:Core/Src/usart.c ****   {
  58:Core/Src/usart.c ****     Error_Handler();
 101              		.loc 1 58 5 is_stmt 1 view .LVU35
 102 003e FFF7FEFF 		bl	Error_Handler
 103              	.LVL3:
 104              	.L3:
  59:Core/Src/usart.c ****   }
  60:Core/Src/usart.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 105              		.loc 1 60 3 view .LVU36
 106              		.loc 1 60 7 is_stmt 0 view .LVU37
 107 0042 0021     		movs	r1, #0
 108 0044 2000     		movs	r0, r4
 109 0046 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 110              	.LVL4:
 111              		.loc 1 60 6 discriminator 1 view .LVU38
 112 004a 0028     		cmp	r0, #0
 113 004c 01D0     		beq	.L4
  61:Core/Src/usart.c ****   {
  62:Core/Src/usart.c ****     Error_Handler();
 114              		.loc 1 62 5 is_stmt 1 view .LVU39
 115 004e FFF7FEFF 		bl	Error_Handler
 116              	.LVL5:
 117              	.L4:
  63:Core/Src/usart.c ****   }
  64:Core/Src/usart.c ****   if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 118              		.loc 1 64 3 view .LVU40
 119              		.loc 1 64 7 is_stmt 0 view .LVU41
 120 0052 2000     		movs	r0, r4
 121 0054 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 122              	.LVL6:
 123              		.loc 1 64 6 discriminator 1 view .LVU42
 124 0058 0028     		cmp	r0, #0
 125 005a 01D0     		beq	.L1
  65:Core/Src/usart.c ****   {
  66:Core/Src/usart.c ****     Error_Handler();
 126              		.loc 1 66 5 is_stmt 1 view .LVU43
 127 005c FFF7FEFF 		bl	Error_Handler
 128              	.LVL7:
 129              	.L1:
  67:Core/Src/usart.c ****   }
  68:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 2 */
  69:Core/Src/usart.c **** 
  70:Core/Src/usart.c ****   /* USER CODE END USART1_Init 2 */
  71:Core/Src/usart.c **** 
  72:Core/Src/usart.c **** }
 130              		.loc 1 72 1 is_stmt 0 view .LVU44
 131              		@ sp needed
 132 0060 10BD     		pop	{r4, pc}
 133              	.L19:
 134 0062 C046     		.align	2
ARM GAS  /tmp/ccKmuNkp.s 			page 5


 135              	.L18:
 136 0064 00380140 		.word	1073821696
 137 0068 00000000 		.word	huart1
 138              		.cfi_endproc
 139              	.LFE420:
 141              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 142              		.align	1
 143              		.global	HAL_UART_MspInit
 144              		.syntax unified
 145              		.code	16
 146              		.thumb_func
 148              	HAL_UART_MspInit:
 149              	.LVL8:
 150              	.LFB421:
  73:Core/Src/usart.c **** 
  74:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  75:Core/Src/usart.c **** {
 151              		.loc 1 75 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 56
 154              		@ frame_needed = 0, uses_anonymous_args = 0
  76:Core/Src/usart.c **** 
  77:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 155              		.loc 1 77 3 view .LVU46
  75:Core/Src/usart.c **** 
 156              		.loc 1 75 1 is_stmt 0 view .LVU47
 157 0000 10B5     		push	{r4, lr}
 158              	.LCFI1:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
 162 0002 0400     		movs	r4, r0
 163 0004 8EB0     		sub	sp, sp, #56
 164              	.LCFI2:
 165              		.cfi_def_cfa_offset 64
 166              		.loc 1 77 20 view .LVU48
 167 0006 1422     		movs	r2, #20
 168 0008 0021     		movs	r1, #0
 169 000a 03A8     		add	r0, sp, #12
 170              	.LVL9:
 171              		.loc 1 77 20 view .LVU49
 172 000c FFF7FEFF 		bl	memset
 173              	.LVL10:
  78:Core/Src/usart.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 174              		.loc 1 78 3 is_stmt 1 view .LVU50
 175              		.loc 1 78 28 is_stmt 0 view .LVU51
 176 0010 1822     		movs	r2, #24
 177 0012 0021     		movs	r1, #0
 178 0014 08A8     		add	r0, sp, #32
 179 0016 FFF7FEFF 		bl	memset
 180              	.LVL11:
  79:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 181              		.loc 1 79 3 is_stmt 1 view .LVU52
 182              		.loc 1 79 5 is_stmt 0 view .LVU53
 183 001a 164B     		ldr	r3, .L26
 184 001c 2268     		ldr	r2, [r4]
 185 001e 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccKmuNkp.s 			page 6


 186 0020 25D1     		bne	.L20
  80:Core/Src/usart.c ****   {
  81:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
  82:Core/Src/usart.c **** 
  83:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
  84:Core/Src/usart.c **** 
  85:Core/Src/usart.c ****   /** Initializes the peripherals clocks
  86:Core/Src/usart.c ****   */
  87:Core/Src/usart.c ****     PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 187              		.loc 1 87 5 is_stmt 1 view .LVU54
 188              		.loc 1 87 40 is_stmt 0 view .LVU55
 189 0022 0123     		movs	r3, #1
  88:Core/Src/usart.c ****     PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
  89:Core/Src/usart.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 190              		.loc 1 89 9 view .LVU56
 191 0024 08A8     		add	r0, sp, #32
  87:Core/Src/usart.c ****     PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 192              		.loc 1 87 40 view .LVU57
 193 0026 0893     		str	r3, [sp, #32]
  88:Core/Src/usart.c ****     PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 194              		.loc 1 88 5 is_stmt 1 view .LVU58
 195              		.loc 1 89 5 view .LVU59
 196              		.loc 1 89 9 is_stmt 0 view .LVU60
 197 0028 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 198              	.LVL12:
 199              		.loc 1 89 8 discriminator 1 view .LVU61
 200 002c 0028     		cmp	r0, #0
 201 002e 01D0     		beq	.L22
  90:Core/Src/usart.c ****     {
  91:Core/Src/usart.c ****       Error_Handler();
 202              		.loc 1 91 7 is_stmt 1 view .LVU62
 203 0030 FFF7FEFF 		bl	Error_Handler
 204              	.LVL13:
 205              	.L22:
  92:Core/Src/usart.c ****     }
  93:Core/Src/usart.c **** 
  94:Core/Src/usart.c ****     /* USART1 clock enable */
  95:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
 206              		.loc 1 95 5 view .LVU63
 207              	.LBB2:
 208              		.loc 1 95 5 view .LVU64
 209              		.loc 1 95 5 view .LVU65
 210 0034 8021     		movs	r1, #128
 211 0036 104B     		ldr	r3, .L26+4
 212 0038 C901     		lsls	r1, r1, #7
 213 003a 1A6C     		ldr	r2, [r3, #64]
 214              	.LBE2:
  96:Core/Src/usart.c **** 
  97:Core/Src/usart.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  98:Core/Src/usart.c ****     /**USART1 GPIO Configuration
  99:Core/Src/usart.c ****     PB7     ------> USART1_RX
 100:Core/Src/usart.c ****     PB6     ------> USART1_TX
 101:Core/Src/usart.c ****     */
 102:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
 103:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 104:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 105:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/ccKmuNkp.s 			page 7


 106:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 107:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 215              		.loc 1 107 5 is_stmt 0 view .LVU66
 216 003c 0F48     		ldr	r0, .L26+8
 217              	.LBB3:
  95:Core/Src/usart.c **** 
 218              		.loc 1 95 5 view .LVU67
 219 003e 0A43     		orrs	r2, r1
 220 0040 1A64     		str	r2, [r3, #64]
  95:Core/Src/usart.c **** 
 221              		.loc 1 95 5 is_stmt 1 view .LVU68
 222 0042 1A6C     		ldr	r2, [r3, #64]
 223 0044 0A40     		ands	r2, r1
 224 0046 0192     		str	r2, [sp, #4]
  95:Core/Src/usart.c **** 
 225              		.loc 1 95 5 view .LVU69
 226 0048 019A     		ldr	r2, [sp, #4]
 227              	.LBE3:
  95:Core/Src/usart.c **** 
 228              		.loc 1 95 5 view .LVU70
  97:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 229              		.loc 1 97 5 view .LVU71
 230              	.LBB4:
  97:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 231              		.loc 1 97 5 view .LVU72
  97:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 232              		.loc 1 97 5 view .LVU73
 233 004a 0222     		movs	r2, #2
 234 004c 596B     		ldr	r1, [r3, #52]
 235 004e 1143     		orrs	r1, r2
 236 0050 5963     		str	r1, [r3, #52]
  97:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 237              		.loc 1 97 5 view .LVU74
 238 0052 5B6B     		ldr	r3, [r3, #52]
 239              	.LBE4:
 240              		.loc 1 107 5 is_stmt 0 view .LVU75
 241 0054 03A9     		add	r1, sp, #12
 242              	.LBB5:
  97:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 243              		.loc 1 97 5 view .LVU76
 244 0056 1340     		ands	r3, r2
 245 0058 0293     		str	r3, [sp, #8]
  97:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 246              		.loc 1 97 5 is_stmt 1 view .LVU77
 247 005a 029B     		ldr	r3, [sp, #8]
 248              	.LBE5:
  97:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 249              		.loc 1 97 5 view .LVU78
 102:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 250              		.loc 1 102 5 view .LVU79
 102:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 251              		.loc 1 102 25 is_stmt 0 view .LVU80
 252 005c C023     		movs	r3, #192
 253 005e 0393     		str	r3, [sp, #12]
 103:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 254              		.loc 1 103 5 is_stmt 1 view .LVU81
 104:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/ccKmuNkp.s 			page 8


 255              		.loc 1 104 26 is_stmt 0 view .LVU82
 256 0060 0023     		movs	r3, #0
 103:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 257              		.loc 1 103 26 view .LVU83
 258 0062 0492     		str	r2, [sp, #16]
 104:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 259              		.loc 1 104 5 is_stmt 1 view .LVU84
 104:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 260              		.loc 1 104 26 is_stmt 0 view .LVU85
 261 0064 0593     		str	r3, [sp, #20]
 105:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 262              		.loc 1 105 5 is_stmt 1 view .LVU86
 105:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 263              		.loc 1 105 27 is_stmt 0 view .LVU87
 264 0066 0693     		str	r3, [sp, #24]
 106:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 265              		.loc 1 106 5 is_stmt 1 view .LVU88
 106:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 266              		.loc 1 106 31 is_stmt 0 view .LVU89
 267 0068 0793     		str	r3, [sp, #28]
 268              		.loc 1 107 5 is_stmt 1 view .LVU90
 269 006a FFF7FEFF 		bl	HAL_GPIO_Init
 270              	.LVL14:
 271              	.L20:
 108:Core/Src/usart.c **** 
 109:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 110:Core/Src/usart.c **** 
 111:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
 112:Core/Src/usart.c ****   }
 113:Core/Src/usart.c **** }
 272              		.loc 1 113 1 is_stmt 0 view .LVU91
 273 006e 0EB0     		add	sp, sp, #56
 274              		@ sp needed
 275              	.LVL15:
 276              		.loc 1 113 1 view .LVU92
 277 0070 10BD     		pop	{r4, pc}
 278              	.L27:
 279 0072 C046     		.align	2
 280              	.L26:
 281 0074 00380140 		.word	1073821696
 282 0078 00100240 		.word	1073876992
 283 007c 00040050 		.word	1342178304
 284              		.cfi_endproc
 285              	.LFE421:
 287              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 288              		.align	1
 289              		.global	HAL_UART_MspDeInit
 290              		.syntax unified
 291              		.code	16
 292              		.thumb_func
 294              	HAL_UART_MspDeInit:
 295              	.LVL16:
 296              	.LFB422:
 114:Core/Src/usart.c **** 
 115:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 116:Core/Src/usart.c **** {
 297              		.loc 1 116 1 is_stmt 1 view -0
ARM GAS  /tmp/ccKmuNkp.s 			page 9


 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 117:Core/Src/usart.c **** 
 118:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 301              		.loc 1 118 3 view .LVU94
 302              		.loc 1 118 5 is_stmt 0 view .LVU95
 303 0000 074B     		ldr	r3, .L30
 304 0002 0268     		ldr	r2, [r0]
 116:Core/Src/usart.c **** 
 305              		.loc 1 116 1 view .LVU96
 306 0004 10B5     		push	{r4, lr}
 307              	.LCFI3:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 4, -8
 310              		.cfi_offset 14, -4
 311              		.loc 1 118 5 view .LVU97
 312 0006 9A42     		cmp	r2, r3
 313 0008 08D1     		bne	.L28
 119:Core/Src/usart.c ****   {
 120:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 121:Core/Src/usart.c **** 
 122:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
 123:Core/Src/usart.c ****     /* Peripheral clock disable */
 124:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 314              		.loc 1 124 5 is_stmt 1 view .LVU98
 315 000a 064A     		ldr	r2, .L30+4
 316 000c 0649     		ldr	r1, .L30+8
 317 000e 136C     		ldr	r3, [r2, #64]
 125:Core/Src/usart.c **** 
 126:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 127:Core/Src/usart.c ****     PB7     ------> USART1_RX
 128:Core/Src/usart.c ****     PB6     ------> USART1_TX
 129:Core/Src/usart.c ****     */
 130:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_7|GPIO_PIN_6);
 318              		.loc 1 130 5 is_stmt 0 view .LVU99
 319 0010 0648     		ldr	r0, .L30+12
 320              	.LVL17:
 124:Core/Src/usart.c **** 
 321              		.loc 1 124 5 view .LVU100
 322 0012 0B40     		ands	r3, r1
 323 0014 1364     		str	r3, [r2, #64]
 324              		.loc 1 130 5 is_stmt 1 view .LVU101
 325 0016 C021     		movs	r1, #192
 326 0018 FFF7FEFF 		bl	HAL_GPIO_DeInit
 327              	.LVL18:
 328              	.L28:
 131:Core/Src/usart.c **** 
 132:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 133:Core/Src/usart.c **** 
 134:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 135:Core/Src/usart.c ****   }
 136:Core/Src/usart.c **** }
 329              		.loc 1 136 1 is_stmt 0 view .LVU102
 330              		@ sp needed
 331 001c 10BD     		pop	{r4, pc}
 332              	.L31:
ARM GAS  /tmp/ccKmuNkp.s 			page 10


 333 001e C046     		.align	2
 334              	.L30:
 335 0020 00380140 		.word	1073821696
 336 0024 00100240 		.word	1073876992
 337 0028 FFBFFFFF 		.word	-16385
 338 002c 00040050 		.word	1342178304
 339              		.cfi_endproc
 340              	.LFE422:
 342              		.global	huart1
 343              		.section	.bss.huart1,"aw",%nobits
 344              		.align	2
 347              	huart1:
 348 0000 00000000 		.space	148
 348      00000000 
 348      00000000 
 348      00000000 
 348      00000000 
 349              		.text
 350              	.Letext0:
 351              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 352              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 353              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g030xx.h"
 354              		.file 5 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 355              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc_ex.h"
 356              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 357              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 358              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 359              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h"
 360              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 361              		.file 12 "Core/Inc/usart.h"
 362              		.file 13 "Core/Inc/main.h"
 363              		.file 14 "<built-in>"
ARM GAS  /tmp/ccKmuNkp.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
     /tmp/ccKmuNkp.s:19     .text.MX_USART1_UART_Init:00000000 $t
     /tmp/ccKmuNkp.s:25     .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/ccKmuNkp.s:136    .text.MX_USART1_UART_Init:00000064 $d
     /tmp/ccKmuNkp.s:347    .bss.huart1:00000000 huart1
     /tmp/ccKmuNkp.s:142    .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccKmuNkp.s:148    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccKmuNkp.s:281    .text.HAL_UART_MspInit:00000074 $d
     /tmp/ccKmuNkp.s:288    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccKmuNkp.s:294    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccKmuNkp.s:335    .text.HAL_UART_MspDeInit:00000020 $d
     /tmp/ccKmuNkp.s:344    .bss.huart1:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
memset
HAL_RCCEx_PeriphCLKConfig
HAL_GPIO_Init
HAL_GPIO_DeInit
