ARM GAS  /tmp/ccinlNRK.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g0xx_hal.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c"
  18              		.section	.text.HAL_MspInit,"ax",%progbits
  19              		.align	1
  20              		.weak	HAL_MspInit
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	HAL_MspInit:
  26              	.LFB422:
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @file    stm32g0xx_hal.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ******************************************************************************
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @attention
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * Copyright (c) 2018 STMicroelectronics. 
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * All rights reserved.
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * This software is licensed under terms that can be found in the LICENSE file
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * in the root directory of this software component.
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ******************************************************************************
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   @verbatim
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ==============================================================================
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                      ##### How to use this driver #####
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ==============================================================================
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     The HAL contains two APIs categories:
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****          (+) Common HAL APIs
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****          (+) Services HAL APIs
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   @endverbatim
  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   ******************************************************************************
ARM GAS  /tmp/ccinlNRK.s 			page 2


  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #include "stm32g0xx_hal.h"
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup STM32G0xx_HAL_Driver
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief HAL module driver
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief STM32G0xx HAL Driver version number
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION_SUB1   (0x04U) /*!< [23:16] sub1 version */
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION_SUB2   (0x05U) /*!< [15:8]  sub2 version */
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define __STM32G0xx_HAL_VERSION         ((__STM32G0xx_HAL_VERSION_MAIN << 24U)\
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                                         |(__STM32G0xx_HAL_VERSION_SUB1 << 16U)\
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                                         |(__STM32G0xx_HAL_VERSION_SUB2 << 8U )\
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                                         |(__STM32G0xx_HAL_VERSION_RC))
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if defined(VREFBUF)
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #define VREFBUF_TIMEOUT_VALUE     10U   /*!<  10 ms */
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* VREFBUF */
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @defgroup HAL_Exported_Variables HAL Exported Variables
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __IO uint32_t uwTick;
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t uwTickPrio = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /* Exported functions --------------------------------------------------------*/
  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
ARM GAS  /tmp/ccinlNRK.s 			page 3


  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group1
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *  @brief    HAL Initialization and Configuration functions
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @verbatim
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****            ##### HAL Initialization and Configuration functions #####
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]  This section provides functions allowing to:
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Initialize the Flash interface the NVIC allocation and initial time base
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****           clock configuration.
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) De-initialize common part of the HAL.
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****           Tick interrupt priority.
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              handled in milliseconds basis.
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****             ISR process will be blocked.
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @endverbatim
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Configure the Flash prefetch and the Instruction cache,
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         the time base source, NVIC and any required global low level hardware
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         by calling the HAL_MspInit() callback function to be optionally defined in user file
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         stm32g0xx_hal_msp.c.
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note   HAL_Init() function is called at the beginning of program after reset and before
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         the clock configuration.
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note   In the default implementation the System Timer (Systick) is used as source of time base
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         The Systick configuration is based on HSI clock, as HSI is the clock
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         used after a system Reset.
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         Once done, time base tick starts incrementing: the tick variable counter is incremented
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         each 1ms in the SysTick_Handler() interrupt handler.
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval HAL status
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
ARM GAS  /tmp/ccinlNRK.s 			page 4


 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Configure Flash prefetch, Instruction cache             */
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Default configuration at reset is:                      */
 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* - Prefetch disabled                                     */
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* - Instruction cache enabled                             */
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if (INSTRUCTION_CACHE_ENABLE == 0U)
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* INSTRUCTION_CACHE_ENABLE */
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     status = HAL_ERROR;
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   else
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Init the low level hardware */
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_MspInit();
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Return function status */
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return status;
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the source of time base.
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note   This function is optional.
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval HAL status
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Reset of all peripherals */
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_IOP_FORCE_RESET();
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_IOP_RELEASE_RESET();
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* De-Init the low level hardware */
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_MspDeInit();
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Return function status */
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return HAL_OK;
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Initialize the MSP.
ARM GAS  /tmp/ccinlNRK.s 			page 5


 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_MspInit(void)
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
  27              		.loc 1 207 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****    */
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
  32              		.loc 1 211 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE422:
  38              		.section	.text.HAL_MspDeInit,"ax",%progbits
  39              		.align	1
  40              		.weak	HAL_MspDeInit
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  45              	HAL_MspDeInit:
  46              	.LFB451:
  47              		.cfi_startproc
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  DeInitializes the MSP.
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_MspDeInit(void)
  48              		.loc 1 217 13 view -0
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              		@ sp needed
  53 0000 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE451:
  57              		.section	.text.HAL_DeInit,"ax",%progbits
  58              		.align	1
  59              		.global	HAL_DeInit
  60              		.syntax unified
  61              		.code	16
  62              		.thumb_func
  64              	HAL_DeInit:
  65              	.LFB421:
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Reset of all peripherals */
  66              		.loc 1 181 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  70              		.loc 1 183 3 view .LVU4
  71 0000 0122     		movs	r2, #1
ARM GAS  /tmp/ccinlNRK.s 			page 6


 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Reset of all peripherals */
  72              		.loc 1 181 1 is_stmt 0 view .LVU5
  73 0002 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  78              		.loc 1 184 3 view .LVU6
  79 0004 0024     		movs	r4, #0
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  80              		.loc 1 200 1 view .LVU7
  81              		@ sp needed
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  82              		.loc 1 183 3 view .LVU8
  83 0006 074B     		ldr	r3, .L4
  84 0008 5242     		rsbs	r2, r2, #0
  85 000a DA62     		str	r2, [r3, #44]
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  86              		.loc 1 184 3 is_stmt 1 view .LVU9
  87 000c DC62     		str	r4, [r3, #44]
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  88              		.loc 1 186 3 view .LVU10
  89 000e 1A63     		str	r2, [r3, #48]
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  90              		.loc 1 187 3 view .LVU11
  91 0010 1C63     		str	r4, [r3, #48]
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  92              		.loc 1 189 3 view .LVU12
  93 0012 9A62     		str	r2, [r3, #40]
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  94              		.loc 1 190 3 view .LVU13
  95 0014 9C62     		str	r4, [r3, #40]
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   __HAL_RCC_IOP_RELEASE_RESET();
  96              		.loc 1 192 3 view .LVU14
  97 0016 5A62     		str	r2, [r3, #36]
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
  98              		.loc 1 193 3 view .LVU15
  99 0018 5C62     		str	r4, [r3, #36]
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 100              		.loc 1 196 3 view .LVU16
 101 001a FFF7FEFF 		bl	HAL_MspDeInit
 102              	.LVL0:
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 103              		.loc 1 199 3 view .LVU17
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 104              		.loc 1 200 1 is_stmt 0 view .LVU18
 105 001e 2000     		movs	r0, r4
 106 0020 10BD     		pop	{r4, pc}
 107              	.L5:
 108 0022 C046     		.align	2
 109              	.L4:
 110 0024 00100240 		.word	1073876992
 111              		.cfi_endproc
 112              	.LFE421:
 114              		.global	__aeabi_uidiv
 115              		.global	__aeabi_idiv
ARM GAS  /tmp/ccinlNRK.s 			page 7


 116              		.section	.text.HAL_InitTick,"ax",%progbits
 117              		.align	1
 118              		.weak	HAL_InitTick
 119              		.syntax unified
 120              		.code	16
 121              		.thumb_func
 123              	HAL_InitTick:
 124              	.LVL1:
 125              	.LFB424:
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****    */
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief This function configures the source of the time base:
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *        Tick interrupt priority.
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementation  in user file.
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval HAL status
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 126              		.loc 1 241 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 130              		.loc 1 242 3 view .LVU20
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that doesn't take the valu
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   if ((uint32_t)uwTickFreq != 0U)
 131              		.loc 1 245 3 view .LVU21
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 132              		.loc 1 241 1 is_stmt 0 view .LVU22
 133 0000 70B5     		push	{r4, r5, r6, lr}
 134              	.LCFI1:
 135              		.cfi_def_cfa_offset 16
 136              		.cfi_offset 4, -16
 137              		.cfi_offset 5, -12
 138              		.cfi_offset 6, -8
 139              		.cfi_offset 14, -4
 140              		.loc 1 245 28 view .LVU23
 141 0002 104B     		ldr	r3, .L10
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 142              		.loc 1 241 1 view .LVU24
 143 0004 0500     		movs	r5, r0
ARM GAS  /tmp/ccinlNRK.s 			page 8


 144              		.loc 1 245 28 view .LVU25
 145 0006 1978     		ldrb	r1, [r3]
 146              		.loc 1 245 6 view .LVU26
 147 0008 0029     		cmp	r1, #0
 148 000a 01D1     		bne	.L7
 149              	.LVL2:
 150              	.L9:
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     /*Configure the SysTick to have interrupt in 1ms time basis*/
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     if (HAL_SYSTICK_Config(SystemCoreClock / (1000U /(uint32_t)uwTickFreq)) == 0U)
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       /* Configure the SysTick IRQ priority */
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       {
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         uwTickPrio = TickPriority;
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       }
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       else
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       {
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         status = HAL_ERROR;
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       }
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     else
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       status = HAL_ERROR;
 151              		.loc 1 263 14 view .LVU27
 152 000c 0120     		movs	r0, #1
 153              	.L8:
 154              	.LVL3:
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   else
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     status = HAL_ERROR;
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Return function status */
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return status;
 155              		.loc 1 272 3 is_stmt 1 view .LVU28
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 156              		.loc 1 273 1 is_stmt 0 view .LVU29
 157              		@ sp needed
 158              	.LVL4:
 159              		.loc 1 273 1 view .LVU30
 160 000e 70BD     		pop	{r4, r5, r6, pc}
 161              	.LVL5:
 162              	.L7:
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 163              		.loc 1 248 5 is_stmt 1 view .LVU31
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 164              		.loc 1 248 53 is_stmt 0 view .LVU32
 165 0010 FA20     		movs	r0, #250
 166              	.LVL6:
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 167              		.loc 1 248 53 view .LVU33
 168 0012 8000     		lsls	r0, r0, #2
 169 0014 FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  /tmp/ccinlNRK.s 			page 9


 170              	.LVL7:
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 171              		.loc 1 248 9 view .LVU34
 172 0018 0B4C     		ldr	r4, .L10+4
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 173              		.loc 1 248 53 view .LVU35
 174 001a 0100     		movs	r1, r0
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 175              		.loc 1 248 9 view .LVU36
 176 001c 2068     		ldr	r0, [r4]
 177 001e FFF7FEFF 		bl	__aeabi_uidiv
 178              	.LVL8:
 179 0022 FFF7FEFF 		bl	HAL_SYSTICK_Config
 180              	.LVL9:
 181 0026 041E     		subs	r4, r0, #0
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 182              		.loc 1 248 8 discriminator 1 view .LVU37
 183 0028 F0D1     		bne	.L9
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       {
 184              		.loc 1 251 7 is_stmt 1 view .LVU38
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       {
 185              		.loc 1 251 10 is_stmt 0 view .LVU39
 186 002a 032D     		cmp	r5, #3
 187 002c EED8     		bhi	.L9
 188              	.LVL10:
 189              	.LBB4:
 190              	.LBI4:
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 191              		.loc 1 240 26 is_stmt 1 view .LVU40
 192              	.LBB5:
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****         uwTickPrio = TickPriority;
 193              		.loc 1 253 9 view .LVU41
 194 002e 0200     		movs	r2, r0
 195 0030 0120     		movs	r0, #1
 196 0032 2900     		movs	r1, r5
 197 0034 4042     		rsbs	r0, r0, #0
 198 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 199              	.LVL11:
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       }
 200              		.loc 1 254 9 view .LVU42
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       }
 201              		.loc 1 254 20 is_stmt 0 view .LVU43
 202 003a 044B     		ldr	r3, .L10+8
 203 003c 2000     		movs	r0, r4
 204 003e 1D60     		str	r5, [r3]
 205              	.LVL12:
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 206              		.loc 1 272 3 is_stmt 1 view .LVU44
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 207              		.loc 1 272 3 is_stmt 0 view .LVU45
 208 0040 E5E7     		b	.L8
 209              	.L11:
 210 0042 C046     		.align	2
 211              	.L10:
 212 0044 00000000 		.word	uwTickFreq
 213 0048 00000000 		.word	SystemCoreClock
 214 004c 00000000 		.word	uwTickPrio
ARM GAS  /tmp/ccinlNRK.s 			page 10


 215              	.LBE5:
 216              	.LBE4:
 217              		.cfi_endproc
 218              	.LFE424:
 220              		.section	.text.HAL_Init,"ax",%progbits
 221              		.align	1
 222              		.global	HAL_Init
 223              		.syntax unified
 224              		.code	16
 225              		.thumb_func
 227              	HAL_Init:
 228              	.LFB420:
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 229              		.loc 1 144 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 233              		.loc 1 145 3 view .LVU47
 234              	.LVL13:
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 235              		.loc 1 157 3 view .LVU48
 236 0000 8023     		movs	r3, #128
 237 0002 084A     		ldr	r2, .L15
 238 0004 5B00     		lsls	r3, r3, #1
 239 0006 1168     		ldr	r1, [r2]
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 240              		.loc 1 144 1 is_stmt 0 view .LVU49
 241 0008 10B5     		push	{r4, lr}
 242              	.LCFI2:
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 4, -8
 245              		.cfi_offset 14, -4
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 246              		.loc 1 157 3 view .LVU50
 247 000a 0B43     		orrs	r3, r1
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 248              		.loc 1 161 7 view .LVU51
 249 000c 0320     		movs	r0, #3
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 250              		.loc 1 157 3 view .LVU52
 251 000e 1360     		str	r3, [r2]
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 252              		.loc 1 161 3 is_stmt 1 view .LVU53
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 253              		.loc 1 161 7 is_stmt 0 view .LVU54
 254 0010 FFF7FEFF 		bl	HAL_InitTick
 255              	.LVL14:
 256 0014 041E     		subs	r4, r0, #0
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 257              		.loc 1 161 6 discriminator 1 view .LVU55
 258 0016 03D1     		bne	.L14
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 259              		.loc 1 168 3 is_stmt 1 view .LVU56
 260 0018 FFF7FEFF 		bl	HAL_MspInit
 261              	.LVL15:
 262              	.L13:
ARM GAS  /tmp/ccinlNRK.s 			page 11


 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 263              		.loc 1 172 3 view .LVU57
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 264              		.loc 1 173 1 is_stmt 0 view .LVU58
 265              		@ sp needed
 266 001c 2000     		movs	r0, r4
 267              	.LVL16:
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 268              		.loc 1 173 1 view .LVU59
 269 001e 10BD     		pop	{r4, pc}
 270              	.LVL17:
 271              	.L14:
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 272              		.loc 1 163 12 view .LVU60
 273 0020 0124     		movs	r4, #1
 274 0022 FBE7     		b	.L13
 275              	.L16:
 276              		.align	2
 277              	.L15:
 278 0024 00200240 		.word	1073881088
 279              		.cfi_endproc
 280              	.LFE420:
 282              		.section	.text.HAL_IncTick,"ax",%progbits
 283              		.align	1
 284              		.weak	HAL_IncTick
 285              		.syntax unified
 286              		.code	16
 287              		.thumb_func
 289              	HAL_IncTick:
 290              	.LFB425:
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group2
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *  @brief    HAL Control functions
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @verbatim
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                       ##### HAL Control functions #####
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]  This section provides functions allowing to:
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Provide a tick value in millisecond
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Suspend the time base source interrupt
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Resume the time base source interrupt
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Get the HAL API driver version
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Get the device identifier
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Get the device revision identifier
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @endverbatim
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
ARM GAS  /tmp/ccinlNRK.s 			page 12


 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *        used as application time base.
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       in SysTick ISR.
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *      implementations in user file.
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_IncTick(void)
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 291              		.loc 1 309 1 is_stmt 1 view -0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uwTick += (uint32_t)uwTickFreq;
 296              		.loc 1 310 3 view .LVU62
 297              		.loc 1 310 10 is_stmt 0 view .LVU63
 298 0000 034A     		ldr	r2, .L18
 299              		.loc 1 310 13 view .LVU64
 300 0002 044B     		ldr	r3, .L18+4
 301              		.loc 1 310 10 view .LVU65
 302 0004 1168     		ldr	r1, [r2]
 303              		.loc 1 310 13 view .LVU66
 304 0006 1B78     		ldrb	r3, [r3]
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 305              		.loc 1 311 1 view .LVU67
 306              		@ sp needed
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uwTick += (uint32_t)uwTickFreq;
 307              		.loc 1 310 10 view .LVU68
 308 0008 5B18     		adds	r3, r3, r1
 309 000a 1360     		str	r3, [r2]
 310              		.loc 1 311 1 view .LVU69
 311 000c 7047     		bx	lr
 312              	.L19:
 313 000e C046     		.align	2
 314              	.L18:
 315 0010 00000000 		.word	uwTick
 316 0014 00000000 		.word	uwTickFreq
 317              		.cfi_endproc
 318              	.LFE425:
 320              		.section	.text.HAL_GetTick,"ax",%progbits
 321              		.align	1
 322              		.weak	HAL_GetTick
 323              		.syntax unified
 324              		.code	16
 325              		.thumb_func
 327              	HAL_GetTick:
 328              	.LFB426:
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Provides a tick value in millisecond.
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementations in user file.
 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval tick value
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
ARM GAS  /tmp/ccinlNRK.s 			page 13


 329              		.loc 1 320 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return uwTick;
 334              		.loc 1 321 3 view .LVU71
 335              		.loc 1 321 10 is_stmt 0 view .LVU72
 336 0000 014B     		ldr	r3, .L21
 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 337              		.loc 1 322 1 view .LVU73
 338              		@ sp needed
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return uwTick;
 339              		.loc 1 321 10 view .LVU74
 340 0002 1868     		ldr	r0, [r3]
 341              		.loc 1 322 1 view .LVU75
 342 0004 7047     		bx	lr
 343              	.L22:
 344 0006 C046     		.align	2
 345              	.L21:
 346 0008 00000000 		.word	uwTick
 347              		.cfi_endproc
 348              	.LFE426:
 350              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 351              		.align	1
 352              		.global	HAL_GetTickPrio
 353              		.syntax unified
 354              		.code	16
 355              		.thumb_func
 357              	HAL_GetTickPrio:
 358              	.LFB427:
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief This function returns a tick priority.
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval tick priority
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 359              		.loc 1 329 1 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return uwTickPrio;
 364              		.loc 1 330 3 view .LVU77
 365              		.loc 1 330 10 is_stmt 0 view .LVU78
 366 0000 014B     		ldr	r3, .L24
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 367              		.loc 1 331 1 view .LVU79
 368              		@ sp needed
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return uwTickPrio;
 369              		.loc 1 330 10 discriminator 1 view .LVU80
 370 0002 1868     		ldr	r0, [r3]
 371              		.loc 1 331 1 view .LVU81
 372 0004 7047     		bx	lr
 373              	.L25:
 374 0006 C046     		.align	2
ARM GAS  /tmp/ccinlNRK.s 			page 14


 375              	.L24:
 376 0008 00000000 		.word	uwTickPrio
 377              		.cfi_endproc
 378              	.LFE427:
 380              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 381              		.align	1
 382              		.global	HAL_SetTickFreq
 383              		.syntax unified
 384              		.code	16
 385              		.thumb_func
 387              	HAL_SetTickFreq:
 388              	.LVL18:
 389              	.LFB428:
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Set new tick Freq.
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval status
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 390              		.loc 1 338 1 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 394              		.loc 1 339 3 view .LVU83
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 395              		.loc 1 340 3 view .LVU84
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 396              		.loc 1 341 3 view .LVU85
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   if (uwTickFreq != Freq)
 397              		.loc 1 343 3 view .LVU86
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 398              		.loc 1 338 1 is_stmt 0 view .LVU87
 399 0000 70B5     		push	{r4, r5, r6, lr}
 400              	.LCFI3:
 401              		.cfi_def_cfa_offset 16
 402              		.cfi_offset 4, -16
 403              		.cfi_offset 5, -12
 404              		.cfi_offset 6, -8
 405              		.cfi_offset 14, -4
 406              		.loc 1 343 18 view .LVU88
 407 0002 074C     		ldr	r4, .L31
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 408              		.loc 1 338 1 view .LVU89
 409 0004 0300     		movs	r3, r0
 410              		.loc 1 343 18 view .LVU90
 411 0006 2578     		ldrb	r5, [r4]
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 412              		.loc 1 339 21 view .LVU91
 413 0008 0020     		movs	r0, #0
 414              	.LVL19:
 415              		.loc 1 343 6 view .LVU92
 416 000a 9D42     		cmp	r5, r3
 417 000c 07D0     		beq	.L27
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
ARM GAS  /tmp/ccinlNRK.s 			page 15


 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     /* Back up uwTickFreq frequency */
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     prevTickFreq = uwTickFreq;
 418              		.loc 1 346 5 is_stmt 1 view .LVU93
 419              	.LVL20:
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     uwTickFreq = Freq;
 420              		.loc 1 349 5 view .LVU94
 421              		.loc 1 349 16 is_stmt 0 view .LVU95
 422 000e 2370     		strb	r3, [r4]
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     /* Apply the new tick Freq  */
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 423              		.loc 1 352 5 is_stmt 1 view .LVU96
 424              		.loc 1 352 14 is_stmt 0 view .LVU97
 425 0010 044B     		ldr	r3, .L31+4
 426              	.LVL21:
 427              		.loc 1 352 14 view .LVU98
 428 0012 1868     		ldr	r0, [r3]
 429 0014 FFF7FEFF 		bl	HAL_InitTick
 430              	.LVL22:
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     if (status != HAL_OK)
 431              		.loc 1 353 5 is_stmt 1 view .LVU99
 432              		.loc 1 353 8 is_stmt 0 view .LVU100
 433 0018 0028     		cmp	r0, #0
 434 001a 00D0     		beq	.L27
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       /* Restore previous tick frequency */
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       uwTickFreq = prevTickFreq;
 435              		.loc 1 356 7 is_stmt 1 view .LVU101
 436              		.loc 1 356 18 is_stmt 0 view .LVU102
 437 001c 2570     		strb	r5, [r4]
 438              	.LVL23:
 439              	.L27:
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return status;
 440              		.loc 1 360 3 is_stmt 1 view .LVU103
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 441              		.loc 1 361 1 is_stmt 0 view .LVU104
 442              		@ sp needed
 443 001e 70BD     		pop	{r4, r5, r6, pc}
 444              	.L32:
 445              		.align	2
 446              	.L31:
 447 0020 00000000 		.word	uwTickFreq
 448 0024 00000000 		.word	uwTickPrio
 449              		.cfi_endproc
 450              	.LFE428:
 452              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 453              		.align	1
 454              		.global	HAL_GetTickFreq
 455              		.syntax unified
 456              		.code	16
 457              		.thumb_func
 459              	HAL_GetTickFreq:
ARM GAS  /tmp/ccinlNRK.s 			page 16


 460              	.LFB429:
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief return tick frequency.
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval tick period in Hz
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 461              		.loc 1 368 1 is_stmt 1 view -0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return uwTickFreq;
 466              		.loc 1 369 3 view .LVU106
 467              		.loc 1 369 10 is_stmt 0 view .LVU107
 468 0000 014B     		ldr	r3, .L34
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 469              		.loc 1 370 1 view .LVU108
 470              		@ sp needed
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return uwTickFreq;
 471              		.loc 1 369 10 discriminator 1 view .LVU109
 472 0002 1878     		ldrb	r0, [r3]
 473              		.loc 1 370 1 view .LVU110
 474 0004 7047     		bx	lr
 475              	.L35:
 476 0006 C046     		.align	2
 477              	.L34:
 478 0008 00000000 		.word	uwTickFreq
 479              		.cfi_endproc
 480              	.LFE429:
 482              		.section	.text.HAL_Delay,"ax",%progbits
 483              		.align	1
 484              		.weak	HAL_Delay
 485              		.syntax unified
 486              		.code	16
 487              		.thumb_func
 489              	HAL_Delay:
 490              	.LVL24:
 491              	.LFB430:
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *        on variable incremented.
 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is incremented.
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementations in user file.
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 492              		.loc 1 384 1 is_stmt 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccinlNRK.s 			page 17


 495              		@ frame_needed = 0, uses_anonymous_args = 0
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 496              		.loc 1 385 3 view .LVU112
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 497              		.loc 1 384 1 is_stmt 0 view .LVU113
 498 0000 70B5     		push	{r4, r5, r6, lr}
 499              	.LCFI4:
 500              		.cfi_def_cfa_offset 16
 501              		.cfi_offset 4, -16
 502              		.cfi_offset 5, -12
 503              		.cfi_offset 6, -8
 504              		.cfi_offset 14, -4
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 505              		.loc 1 384 1 view .LVU114
 506 0002 0400     		movs	r4, r0
 507              		.loc 1 385 24 view .LVU115
 508 0004 FFF7FEFF 		bl	HAL_GetTick
 509              	.LVL25:
 510              		.loc 1 385 24 view .LVU116
 511 0008 0500     		movs	r5, r0
 512              	.LVL26:
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uint32_t wait = Delay;
 513              		.loc 1 386 3 is_stmt 1 view .LVU117
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 514              		.loc 1 389 3 view .LVU118
 515              		.loc 1 389 6 is_stmt 0 view .LVU119
 516 000a 631C     		adds	r3, r4, #1
 517 000c 02D0     		beq	.L38
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 518              		.loc 1 391 5 is_stmt 1 view .LVU120
 519              		.loc 1 391 13 is_stmt 0 view .LVU121
 520 000e 044B     		ldr	r3, .L44
 521 0010 1B78     		ldrb	r3, [r3]
 522              		.loc 1 391 10 view .LVU122
 523 0012 E418     		adds	r4, r4, r3
 524              	.LVL27:
 525              	.L38:
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 526              		.loc 1 396 3 is_stmt 1 view .LVU123
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 527              		.loc 1 394 38 discriminator 1 view .LVU124
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 528              		.loc 1 394 11 is_stmt 0 discriminator 1 view .LVU125
 529 0014 FFF7FEFF 		bl	HAL_GetTick
 530              	.LVL28:
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 531              		.loc 1 394 25 discriminator 1 view .LVU126
 532 0018 401B     		subs	r0, r0, r5
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 533              		.loc 1 394 38 discriminator 1 view .LVU127
ARM GAS  /tmp/ccinlNRK.s 			page 18


 534 001a A042     		cmp	r0, r4
 535 001c FAD3     		bcc	.L38
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 536              		.loc 1 397 1 view .LVU128
 537              		@ sp needed
 538              	.LVL29:
 539              	.LVL30:
 540              		.loc 1 397 1 view .LVU129
 541 001e 70BD     		pop	{r4, r5, r6, pc}
 542              	.L45:
 543              		.align	2
 544              	.L44:
 545 0020 00000000 		.word	uwTickFreq
 546              		.cfi_endproc
 547              	.LFE430:
 549              		.section	.text.HAL_SuspendTick,"ax",%progbits
 550              		.align	1
 551              		.weak	HAL_SuspendTick
 552              		.syntax unified
 553              		.code	16
 554              		.thumb_func
 556              	HAL_SuspendTick:
 557              	.LFB431:
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Suspend Tick increment.
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is suspended.
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementations in user file.
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_SuspendTick(void)
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 558              		.loc 1 410 1 is_stmt 1 view -0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Disable SysTick Interrupt */
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 563              		.loc 1 412 3 view .LVU131
 564 0000 0221     		movs	r1, #2
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 565              		.loc 1 413 1 is_stmt 0 view .LVU132
 566              		@ sp needed
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 567              		.loc 1 412 3 view .LVU133
 568 0002 024A     		ldr	r2, .L47
 569 0004 1368     		ldr	r3, [r2]
 570 0006 8B43     		bics	r3, r1
 571 0008 1360     		str	r3, [r2]
 572              		.loc 1 413 1 view .LVU134
 573 000a 7047     		bx	lr
 574              	.L48:
ARM GAS  /tmp/ccinlNRK.s 			page 19


 575              		.align	2
 576              	.L47:
 577 000c 10E000E0 		.word	-536813552
 578              		.cfi_endproc
 579              	.LFE431:
 581              		.section	.text.HAL_ResumeTick,"ax",%progbits
 582              		.align	1
 583              		.weak	HAL_ResumeTick
 584              		.syntax unified
 585              		.code	16
 586              		.thumb_func
 588              	HAL_ResumeTick:
 589              	.LFB432:
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Resume Tick increment.
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       is resumed.
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *       implementations in user file.
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** __weak void HAL_ResumeTick(void)
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 590              		.loc 1 426 1 is_stmt 1 view -0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594              		@ link register save eliminated.
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Enable SysTick Interrupt */
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 595              		.loc 1 428 3 view .LVU136
 596 0000 0223     		movs	r3, #2
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 597              		.loc 1 429 1 is_stmt 0 view .LVU137
 598              		@ sp needed
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 599              		.loc 1 428 3 view .LVU138
 600 0002 024A     		ldr	r2, .L50
 601 0004 1168     		ldr	r1, [r2]
 602 0006 0B43     		orrs	r3, r1
 603 0008 1360     		str	r3, [r2]
 604              		.loc 1 429 1 view .LVU139
 605 000a 7047     		bx	lr
 606              	.L51:
 607              		.align	2
 608              	.L50:
 609 000c 10E000E0 		.word	-536813552
 610              		.cfi_endproc
 611              	.LFE432:
 613              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 614              		.align	1
 615              		.global	HAL_GetHalVersion
 616              		.syntax unified
 617              		.code	16
ARM GAS  /tmp/ccinlNRK.s 			page 20


 618              		.thumb_func
 620              	HAL_GetHalVersion:
 621              	.LFB433:
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns the HAL revision
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 622              		.loc 1 436 1 is_stmt 1 view -0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return __STM32G0xx_HAL_VERSION;
 627              		.loc 1 437 3 view .LVU141
 438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 628              		.loc 1 438 1 is_stmt 0 view .LVU142
 629 0000 0048     		ldr	r0, .L53
 630              		@ sp needed
 631 0002 7047     		bx	lr
 632              	.L54:
 633              		.align	2
 634              	.L53:
 635 0004 00050401 		.word	17040640
 636              		.cfi_endproc
 637              	.LFE433:
 639              		.section	.text.HAL_GetREVID,"ax",%progbits
 640              		.align	1
 641              		.global	HAL_GetREVID
 642              		.syntax unified
 643              		.code	16
 644              		.thumb_func
 646              	HAL_GetREVID:
 647              	.LFB434:
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns the device revision identifier.
 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device revision identifier
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetREVID(void)
 445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 648              		.loc 1 445 1 is_stmt 1 view -0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return ((DBG->IDCODE & DBG_IDCODE_REV_ID) >> 16U);
 653              		.loc 1 446 3 view .LVU144
 654              		.loc 1 446 15 is_stmt 0 view .LVU145
 655 0000 014B     		ldr	r3, .L56
 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 656              		.loc 1 447 1 view .LVU146
 657              		@ sp needed
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return ((DBG->IDCODE & DBG_IDCODE_REV_ID) >> 16U);
 658              		.loc 1 446 15 view .LVU147
ARM GAS  /tmp/ccinlNRK.s 			page 21


 659 0002 1868     		ldr	r0, [r3]
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return ((DBG->IDCODE & DBG_IDCODE_REV_ID) >> 16U);
 660              		.loc 1 446 45 view .LVU148
 661 0004 000C     		lsrs	r0, r0, #16
 662              		.loc 1 447 1 view .LVU149
 663 0006 7047     		bx	lr
 664              	.L57:
 665              		.align	2
 666              	.L56:
 667 0008 00580140 		.word	1073829888
 668              		.cfi_endproc
 669              	.LFE434:
 671              		.section	.text.HAL_GetDEVID,"ax",%progbits
 672              		.align	1
 673              		.global	HAL_GetDEVID
 674              		.syntax unified
 675              		.code	16
 676              		.thumb_func
 678              	HAL_GetDEVID:
 679              	.LFB435:
 448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns the device identifier.
 451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device identifier
 452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 680              		.loc 1 454 1 is_stmt 1 view -0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return ((DBG->IDCODE) & DBG_IDCODE_DEV_ID);
 685              		.loc 1 455 3 view .LVU151
 686              		.loc 1 455 15 is_stmt 0 view .LVU152
 687 0000 024B     		ldr	r3, .L59
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 688              		.loc 1 456 1 view .LVU153
 689              		@ sp needed
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return ((DBG->IDCODE) & DBG_IDCODE_DEV_ID);
 690              		.loc 1 455 15 view .LVU154
 691 0002 1868     		ldr	r0, [r3]
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return ((DBG->IDCODE) & DBG_IDCODE_DEV_ID);
 692              		.loc 1 455 25 view .LVU155
 693 0004 0005     		lsls	r0, r0, #20
 694 0006 000D     		lsrs	r0, r0, #20
 695              		.loc 1 456 1 view .LVU156
 696 0008 7047     		bx	lr
 697              	.L60:
 698 000a C046     		.align	2
 699              	.L59:
 700 000c 00580140 		.word	1073829888
 701              		.cfi_endproc
 702              	.LFE435:
 704              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 705              		.align	1
 706              		.global	HAL_GetUIDw0
ARM GAS  /tmp/ccinlNRK.s 			page 22


 707              		.syntax unified
 708              		.code	16
 709              		.thumb_func
 711              	HAL_GetUIDw0:
 712              	.LFB436:
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device identifier
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 713              		.loc 1 463 1 is_stmt 1 view -0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              		@ link register save eliminated.
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return (READ_REG(*((uint32_t *)UID_BASE)));
 718              		.loc 1 464 3 view .LVU158
 719              		.loc 1 464 11 is_stmt 0 view .LVU159
 720 0000 014B     		ldr	r3, .L62
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 721              		.loc 1 465 1 view .LVU160
 722              		@ sp needed
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return (READ_REG(*((uint32_t *)UID_BASE)));
 723              		.loc 1 464 11 discriminator 1 view .LVU161
 724 0002 1868     		ldr	r0, [r3]
 725              		.loc 1 465 1 view .LVU162
 726 0004 7047     		bx	lr
 727              	.L63:
 728 0006 C046     		.align	2
 729              	.L62:
 730 0008 9075FF1F 		.word	536835472
 731              		.cfi_endproc
 732              	.LFE436:
 734              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 735              		.align	1
 736              		.global	HAL_GetUIDw1
 737              		.syntax unified
 738              		.code	16
 739              		.thumb_func
 741              	HAL_GetUIDw1:
 742              	.LFB437:
 466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device identifier
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 743              		.loc 1 472 1 is_stmt 1 view -0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 748              		.loc 1 473 3 view .LVU164
ARM GAS  /tmp/ccinlNRK.s 			page 23


 749              		.loc 1 473 11 is_stmt 0 view .LVU165
 750 0000 014B     		ldr	r3, .L65
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 751              		.loc 1 474 1 view .LVU166
 752              		@ sp needed
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 753              		.loc 1 473 11 discriminator 1 view .LVU167
 754 0002 1868     		ldr	r0, [r3]
 755              		.loc 1 474 1 view .LVU168
 756 0004 7047     		bx	lr
 757              	.L66:
 758 0006 C046     		.align	2
 759              	.L65:
 760 0008 9475FF1F 		.word	536835476
 761              		.cfi_endproc
 762              	.LFE437:
 764              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 765              		.align	1
 766              		.global	HAL_GetUIDw2
 767              		.syntax unified
 768              		.code	16
 769              		.thumb_func
 771              	HAL_GetUIDw2:
 772              	.LFB438:
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval Device identifier
 479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 773              		.loc 1 481 1 is_stmt 1 view -0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 778              		.loc 1 482 3 view .LVU170
 779              		.loc 1 482 11 is_stmt 0 view .LVU171
 780 0000 014B     		ldr	r3, .L68
 483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 781              		.loc 1 483 1 view .LVU172
 782              		@ sp needed
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 783              		.loc 1 482 11 discriminator 1 view .LVU173
 784 0002 1868     		ldr	r0, [r3]
 785              		.loc 1 483 1 view .LVU174
 786 0004 7047     		bx	lr
 787              	.L69:
 788 0006 C046     		.align	2
 789              	.L68:
 790 0008 9875FF1F 		.word	536835480
 791              		.cfi_endproc
 792              	.LFE438:
 794              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 795              		.align	1
 796              		.global	HAL_DBGMCU_EnableDBGStopMode
ARM GAS  /tmp/ccinlNRK.s 			page 24


 797              		.syntax unified
 798              		.code	16
 799              		.thumb_func
 801              	HAL_DBGMCU_EnableDBGStopMode:
 802              	.LFB439:
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group3
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *  @brief    HAL Debug functions
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @verbatim
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                       ##### HAL Debug functions #####
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]  This section provides functions allowing to:
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @endverbatim
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 803              		.loc 1 509 1 is_stmt 1 view -0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807              		@ link register save eliminated.
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(DBG->CR, DBG_CR_DBG_STOP);
 808              		.loc 1 510 3 view .LVU176
 809 0000 0223     		movs	r3, #2
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 810              		.loc 1 511 1 is_stmt 0 view .LVU177
 811              		@ sp needed
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(DBG->CR, DBG_CR_DBG_STOP);
 812              		.loc 1 510 3 view .LVU178
 813 0002 024A     		ldr	r2, .L71
 814 0004 5168     		ldr	r1, [r2, #4]
 815 0006 0B43     		orrs	r3, r1
 816 0008 5360     		str	r3, [r2, #4]
 817              		.loc 1 511 1 view .LVU179
 818 000a 7047     		bx	lr
 819              	.L72:
 820              		.align	2
 821              	.L71:
 822 000c 00580140 		.word	1073829888
 823              		.cfi_endproc
 824              	.LFE439:
 826              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
ARM GAS  /tmp/ccinlNRK.s 			page 25


 827              		.align	1
 828              		.global	HAL_DBGMCU_DisableDBGStopMode
 829              		.syntax unified
 830              		.code	16
 831              		.thumb_func
 833              	HAL_DBGMCU_DisableDBGStopMode:
 834              	.LFB440:
 512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 835              		.loc 1 518 1 is_stmt 1 view -0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              		@ link register save eliminated.
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(DBG->CR, DBG_CR_DBG_STOP);
 840              		.loc 1 519 3 view .LVU181
 841 0000 0221     		movs	r1, #2
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 842              		.loc 1 520 1 is_stmt 0 view .LVU182
 843              		@ sp needed
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(DBG->CR, DBG_CR_DBG_STOP);
 844              		.loc 1 519 3 view .LVU183
 845 0002 024A     		ldr	r2, .L74
 846 0004 5368     		ldr	r3, [r2, #4]
 847 0006 8B43     		bics	r3, r1
 848 0008 5360     		str	r3, [r2, #4]
 849              		.loc 1 520 1 view .LVU184
 850 000a 7047     		bx	lr
 851              	.L75:
 852              		.align	2
 853              	.L74:
 854 000c 00580140 		.word	1073829888
 855              		.cfi_endproc
 856              	.LFE440:
 858              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 859              		.align	1
 860              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 861              		.syntax unified
 862              		.code	16
 863              		.thumb_func
 865              	HAL_DBGMCU_EnableDBGStandbyMode:
 866              	.LFB441:
 521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 867              		.loc 1 527 1 is_stmt 1 view -0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccinlNRK.s 			page 26


 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(DBG->CR, DBG_CR_DBG_STANDBY);
 872              		.loc 1 528 3 view .LVU186
 873 0000 0423     		movs	r3, #4
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 874              		.loc 1 529 1 is_stmt 0 view .LVU187
 875              		@ sp needed
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(DBG->CR, DBG_CR_DBG_STANDBY);
 876              		.loc 1 528 3 view .LVU188
 877 0002 024A     		ldr	r2, .L77
 878 0004 5168     		ldr	r1, [r2, #4]
 879 0006 0B43     		orrs	r3, r1
 880 0008 5360     		str	r3, [r2, #4]
 881              		.loc 1 529 1 view .LVU189
 882 000a 7047     		bx	lr
 883              	.L78:
 884              		.align	2
 885              	.L77:
 886 000c 00580140 		.word	1073829888
 887              		.cfi_endproc
 888              	.LFE441:
 890              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 891              		.align	1
 892              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 893              		.syntax unified
 894              		.code	16
 895              		.thumb_func
 897              	HAL_DBGMCU_DisableDBGStandbyMode:
 898              	.LFB442:
 530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 899              		.loc 1 536 1 is_stmt 1 view -0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              		@ link register save eliminated.
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(DBG->CR, DBG_CR_DBG_STANDBY);
 904              		.loc 1 537 3 view .LVU191
 905 0000 0421     		movs	r1, #4
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 906              		.loc 1 538 1 is_stmt 0 view .LVU192
 907              		@ sp needed
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(DBG->CR, DBG_CR_DBG_STANDBY);
 908              		.loc 1 537 3 view .LVU193
 909 0002 024A     		ldr	r2, .L80
 910 0004 5368     		ldr	r3, [r2, #4]
 911 0006 8B43     		bics	r3, r1
 912 0008 5360     		str	r3, [r2, #4]
 913              		.loc 1 538 1 view .LVU194
 914 000a 7047     		bx	lr
 915              	.L81:
ARM GAS  /tmp/ccinlNRK.s 			page 27


 916              		.align	2
 917              	.L80:
 918 000c 00580140 		.word	1073829888
 919              		.cfi_endproc
 920              	.LFE442:
 922              		.section	.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster,"ax",%progbits
 923              		.align	1
 924              		.global	HAL_SYSCFG_EnableIOAnalogSwitchBooster
 925              		.syntax unified
 926              		.code	16
 927              		.thumb_func
 929              	HAL_SYSCFG_EnableIOAnalogSwitchBooster:
 930              	.LFB443:
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @}
 542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group4
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *  @brief    SYSCFG configuration functions
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  *
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @verbatim
 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****                       ##### HAL SYSCFG configuration functions #####
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****  ===============================================================================
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     [..]  This section provides functions allowing to:
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable Pin remap
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Configure the Voltage reference buffer
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable the Voltage reference buffer
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable the I/O analog switch voltage booster
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Enable/Disable dead battery behavior(*)
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       (+) Configure Clamping Diode on specific pins(*)
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****    (*) Feature not available on all devices
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** @endverbatim
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @{
 562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if defined(VREFBUF)
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Configure the internal voltage reference buffer voltage scale.
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  VoltageScaling specifies the output voltage to achieve
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be one of the following values:
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_VREFBUF_VoltageScale
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_VREFBUF_VoltageScalingConfig(uint32_t VoltageScaling)
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameters */
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_VOLTAGE_SCALE(VoltageScaling));
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_VRS, VoltageScaling);
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief Configure the internal voltage reference buffer high impedance mode.
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  Mode specifies the high impedance mode
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccinlNRK.s 			page 28


 583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *          @arg @ref SYSCFG_VREFBUF_HighImpedance
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_VREFBUF_HighImpedanceConfig(uint32_t Mode)
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameters */
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_HIGH_IMPEDANCE(Mode));
 590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_HIZ, Mode);
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Tune the Internal Voltage Reference buffer (VREFBUF).
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @note   VrefBuf voltage scale is calibrated in production for each device,
 597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         using voltage scale 1. This calibration value is loaded
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         as default trimming value at device power up.
 599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This trimming value can be fine tuned for voltage scales 0 and 1
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         using this function.
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_VREFBUF_TrimmingConfig(uint32_t TrimmingValue)
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameters */
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_TRIMMING(TrimmingValue));
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   MODIFY_REG(VREFBUF->CCR, VREFBUF_CCR_TRIM, TrimmingValue);
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the Internal Voltage Reference buffer (VREFBUF).
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval HAL_OK/HAL_TIMEOUT
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** HAL_StatusTypeDef HAL_SYSCFG_EnableVREFBUF(void)
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   uint32_t  tickstart;
 618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Get Start Tick*/
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   tickstart = HAL_GetTick();
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Wait for VRR bit  */
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   while (READ_BIT(VREFBUF->CSR, VREFBUF_CSR_VRR) == 0x00U)
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   {
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     if ((HAL_GetTick() - tickstart) > VREFBUF_TIMEOUT_VALUE)
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     {
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****       return HAL_TIMEOUT;
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****     }
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   }
 632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   return HAL_OK;
 634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the Internal Voltage Reference buffer (VREFBUF).
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
ARM GAS  /tmp/ccinlNRK.s 			page 29


 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_DisableVREFBUF(void)
 642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #endif /* VREFBUF */
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the I/O analog switch voltage booster
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_EnableIOAnalogSwitchBooster(void)
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 931              		.loc 1 652 1 is_stmt 1 view -0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOSTEN);
 936              		.loc 1 653 3 view .LVU196
 937 0000 8023     		movs	r3, #128
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 938              		.loc 1 654 1 is_stmt 0 view .LVU197
 939              		@ sp needed
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOSTEN);
 940              		.loc 1 653 3 view .LVU198
 941 0002 034A     		ldr	r2, .L83
 942 0004 5B00     		lsls	r3, r3, #1
 943 0006 1168     		ldr	r1, [r2]
 944 0008 0B43     		orrs	r3, r1
 945 000a 1360     		str	r3, [r2]
 946              		.loc 1 654 1 view .LVU199
 947 000c 7047     		bx	lr
 948              	.L84:
 949 000e C046     		.align	2
 950              	.L83:
 951 0010 00000140 		.word	1073807360
 952              		.cfi_endproc
 953              	.LFE443:
 955              		.section	.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster,"ax",%progbits
 956              		.align	1
 957              		.global	HAL_SYSCFG_DisableIOAnalogSwitchBooster
 958              		.syntax unified
 959              		.code	16
 960              		.thumb_func
 962              	HAL_SYSCFG_DisableIOAnalogSwitchBooster:
 963              	.LFB444:
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the I/O analog switch voltage booster
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_DisableIOAnalogSwitchBooster(void)
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 964              		.loc 1 661 1 is_stmt 1 view -0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccinlNRK.s 			page 30


 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968              		@ link register save eliminated.
 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOSTEN);
 969              		.loc 1 662 3 view .LVU201
 970 0000 024A     		ldr	r2, .L86
 971 0002 0349     		ldr	r1, .L86+4
 972 0004 1368     		ldr	r3, [r2]
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 973              		.loc 1 663 1 is_stmt 0 view .LVU202
 974              		@ sp needed
 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOSTEN);
 975              		.loc 1 662 3 view .LVU203
 976 0006 0B40     		ands	r3, r1
 977 0008 1360     		str	r3, [r2]
 978              		.loc 1 663 1 view .LVU204
 979 000a 7047     		bx	lr
 980              	.L87:
 981              		.align	2
 982              	.L86:
 983 000c 00000140 		.word	1073807360
 984 0010 FFFEFFFF 		.word	-257
 985              		.cfi_endproc
 986              	.LFE444:
 988              		.section	.text.HAL_SYSCFG_EnableRemap,"ax",%progbits
 989              		.align	1
 990              		.global	HAL_SYSCFG_EnableRemap
 991              		.syntax unified
 992              		.code	16
 993              		.thumb_func
 995              	HAL_SYSCFG_EnableRemap:
 996              	.LVL31:
 997              	.LFB445:
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable the remap on PA11_PA12
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  PinRemap specifies which pins have to be remapped
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be any combination of the following values:
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_REMAP_PA11
 670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_REMAP_PA12
 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_EnableRemap(uint32_t PinRemap)
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 998              		.loc 1 674 1 is_stmt 1 view -0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
 675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameter */
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_HAL_REMAP_PIN(PinRemap));
 1003              		.loc 1 676 3 view .LVU206
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SYSCFG->CFGR1, PinRemap);
 1004              		.loc 1 677 3 view .LVU207
 1005 0000 024A     		ldr	r2, .L89
 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 1006              		.loc 1 678 1 is_stmt 0 view .LVU208
 1007              		@ sp needed
ARM GAS  /tmp/ccinlNRK.s 			page 31


 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SYSCFG->CFGR1, PinRemap);
 1008              		.loc 1 677 3 view .LVU209
 1009 0002 1368     		ldr	r3, [r2]
 1010 0004 0343     		orrs	r3, r0
 1011 0006 1360     		str	r3, [r2]
 1012              		.loc 1 678 1 view .LVU210
 1013 0008 7047     		bx	lr
 1014              	.L90:
 1015 000a C046     		.align	2
 1016              	.L89:
 1017 000c 00000140 		.word	1073807360
 1018              		.cfi_endproc
 1019              	.LFE445:
 1021              		.section	.text.HAL_SYSCFG_DisableRemap,"ax",%progbits
 1022              		.align	1
 1023              		.global	HAL_SYSCFG_DisableRemap
 1024              		.syntax unified
 1025              		.code	16
 1026              		.thumb_func
 1028              	HAL_SYSCFG_DisableRemap:
 1029              	.LVL32:
 1030              	.LFB446:
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable the remap on PA11_PA12
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  PinRemap specifies which pins will behave normally
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be any combination of the following values:
 684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_REMAP_PA11
 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_REMAP_PA12
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_DisableRemap(uint32_t PinRemap)
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 1031              		.loc 1 689 1 is_stmt 1 view -0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035              		@ link register save eliminated.
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameter */
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_HAL_REMAP_PIN(PinRemap));
 1036              		.loc 1 691 3 view .LVU212
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SYSCFG->CFGR1, PinRemap);
 1037              		.loc 1 692 3 view .LVU213
 1038 0000 024A     		ldr	r2, .L92
 693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 1039              		.loc 1 693 1 is_stmt 0 view .LVU214
 1040              		@ sp needed
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SYSCFG->CFGR1, PinRemap);
 1041              		.loc 1 692 3 view .LVU215
 1042 0002 1368     		ldr	r3, [r2]
 1043 0004 8343     		bics	r3, r0
 1044 0006 1360     		str	r3, [r2]
 1045              		.loc 1 693 1 view .LVU216
 1046 0008 7047     		bx	lr
 1047              	.L93:
 1048 000a C046     		.align	2
 1049              	.L92:
ARM GAS  /tmp/ccinlNRK.s 			page 32


 1050 000c 00000140 		.word	1073807360
 1051              		.cfi_endproc
 1052              	.LFE446:
 1054              		.section	.text.HAL_SYSCFG_EnableClampingDiode,"ax",%progbits
 1055              		.align	1
 1056              		.global	HAL_SYSCFG_EnableClampingDiode
 1057              		.syntax unified
 1058              		.code	16
 1059              		.thumb_func
 1061              	HAL_SYSCFG_EnableClampingDiode:
 1062              	.LVL33:
 1063              	.LFB447:
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** #if defined(SYSCFG_CDEN_SUPPORT)
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Enable Clamping Diode on specified IO
 698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  PinConfig specifies on which pins clamping Diode has to be enabled
 699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be any combination of the following values:
 700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_ClampingDiode
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_EnableClampingDiode(uint32_t PinConfig)
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 1064              		.loc 1 704 1 is_stmt 1 view -0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 0
 1067              		@ frame_needed = 0, uses_anonymous_args = 0
 1068              		@ link register save eliminated.
 705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameter */
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_CLAMPINGDIODE(PinConfig));
 1069              		.loc 1 706 3 view .LVU218
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SYSCFG->CFGR2, PinConfig);
 1070              		.loc 1 707 3 view .LVU219
 1071 0000 024A     		ldr	r2, .L95
 708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 1072              		.loc 1 708 1 is_stmt 0 view .LVU220
 1073              		@ sp needed
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   SET_BIT(SYSCFG->CFGR2, PinConfig);
 1074              		.loc 1 707 3 view .LVU221
 1075 0002 9369     		ldr	r3, [r2, #24]
 1076 0004 0343     		orrs	r3, r0
 1077 0006 9361     		str	r3, [r2, #24]
 1078              		.loc 1 708 1 view .LVU222
 1079 0008 7047     		bx	lr
 1080              	.L96:
 1081 000a C046     		.align	2
 1082              	.L95:
 1083 000c 00000140 		.word	1073807360
 1084              		.cfi_endproc
 1085              	.LFE447:
 1087              		.section	.text.HAL_SYSCFG_DisableClampingDiode,"ax",%progbits
 1088              		.align	1
 1089              		.global	HAL_SYSCFG_DisableClampingDiode
 1090              		.syntax unified
 1091              		.code	16
 1092              		.thumb_func
 1094              	HAL_SYSCFG_DisableClampingDiode:
ARM GAS  /tmp/ccinlNRK.s 			page 33


 1095              	.LVL34:
 1096              	.LFB448:
 709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** 
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** /**
 711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @brief  Disable Clamping Diode on specified IO
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @param  PinConfig specifies on which pins clamping Diode has to be disabled
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         This parameter can be any combination of the following values:
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   *         @arg @ref SYSCFG_ClampingDiode
 715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   * @retval None
 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   */
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** void HAL_SYSCFG_DisableClampingDiode(uint32_t PinConfig)
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** {
 1097              		.loc 1 718 1 is_stmt 1 view -0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101              		@ link register save eliminated.
 719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   /* Check the parameter */
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   assert_param(IS_SYSCFG_CLAMPINGDIODE(PinConfig));
 1102              		.loc 1 720 3 view .LVU224
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SYSCFG->CFGR2, PinConfig);
 1103              		.loc 1 721 3 view .LVU225
 1104 0000 024A     		ldr	r2, .L98
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c **** }
 1105              		.loc 1 722 1 is_stmt 0 view .LVU226
 1106              		@ sp needed
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c ****   CLEAR_BIT(SYSCFG->CFGR2, PinConfig);
 1107              		.loc 1 721 3 view .LVU227
 1108 0002 9369     		ldr	r3, [r2, #24]
 1109 0004 8343     		bics	r3, r0
 1110 0006 9361     		str	r3, [r2, #24]
 1111              		.loc 1 722 1 view .LVU228
 1112 0008 7047     		bx	lr
 1113              	.L99:
 1114 000a C046     		.align	2
 1115              	.L98:
 1116 000c 00000140 		.word	1073807360
 1117              		.cfi_endproc
 1118              	.LFE448:
 1120              		.global	uwTickFreq
 1121              		.section	.data.uwTickFreq,"aw"
 1124              	uwTickFreq:
 1125 0000 01       		.byte	1
 1126              		.global	uwTickPrio
 1127              		.section	.data.uwTickPrio,"aw"
 1128              		.align	2
 1131              	uwTickPrio:
 1132 0000 04000000 		.word	4
 1133              		.global	uwTick
 1134              		.section	.bss.uwTick,"aw",%nobits
 1135              		.align	2
 1138              	uwTick:
 1139 0000 00000000 		.space	4
 1140              		.text
 1141              	.Letext0:
 1142              		.file 2 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g030xx.h"
 1143              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /tmp/ccinlNRK.s 			page 34


 1144              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1145              		.file 5 "Drivers/CMSIS/Include/core_cm0plus.h"
 1146              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 1147              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 1148              		.file 8 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 1149              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_cortex.h"
 1150              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
ARM GAS  /tmp/ccinlNRK.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal.c
     /tmp/ccinlNRK.s:19     .text.HAL_MspInit:00000000 $t
     /tmp/ccinlNRK.s:25     .text.HAL_MspInit:00000000 HAL_MspInit
     /tmp/ccinlNRK.s:39     .text.HAL_MspDeInit:00000000 $t
     /tmp/ccinlNRK.s:45     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
     /tmp/ccinlNRK.s:58     .text.HAL_DeInit:00000000 $t
     /tmp/ccinlNRK.s:64     .text.HAL_DeInit:00000000 HAL_DeInit
     /tmp/ccinlNRK.s:110    .text.HAL_DeInit:00000024 $d
     /tmp/ccinlNRK.s:117    .text.HAL_InitTick:00000000 $t
     /tmp/ccinlNRK.s:123    .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccinlNRK.s:212    .text.HAL_InitTick:00000044 $d
     /tmp/ccinlNRK.s:1124   .data.uwTickFreq:00000000 uwTickFreq
     /tmp/ccinlNRK.s:1131   .data.uwTickPrio:00000000 uwTickPrio
     /tmp/ccinlNRK.s:221    .text.HAL_Init:00000000 $t
     /tmp/ccinlNRK.s:227    .text.HAL_Init:00000000 HAL_Init
     /tmp/ccinlNRK.s:278    .text.HAL_Init:00000024 $d
     /tmp/ccinlNRK.s:283    .text.HAL_IncTick:00000000 $t
     /tmp/ccinlNRK.s:289    .text.HAL_IncTick:00000000 HAL_IncTick
     /tmp/ccinlNRK.s:315    .text.HAL_IncTick:00000010 $d
     /tmp/ccinlNRK.s:1138   .bss.uwTick:00000000 uwTick
     /tmp/ccinlNRK.s:321    .text.HAL_GetTick:00000000 $t
     /tmp/ccinlNRK.s:327    .text.HAL_GetTick:00000000 HAL_GetTick
     /tmp/ccinlNRK.s:346    .text.HAL_GetTick:00000008 $d
     /tmp/ccinlNRK.s:351    .text.HAL_GetTickPrio:00000000 $t
     /tmp/ccinlNRK.s:357    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
     /tmp/ccinlNRK.s:376    .text.HAL_GetTickPrio:00000008 $d
     /tmp/ccinlNRK.s:381    .text.HAL_SetTickFreq:00000000 $t
     /tmp/ccinlNRK.s:387    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
     /tmp/ccinlNRK.s:447    .text.HAL_SetTickFreq:00000020 $d
     /tmp/ccinlNRK.s:453    .text.HAL_GetTickFreq:00000000 $t
     /tmp/ccinlNRK.s:459    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
     /tmp/ccinlNRK.s:478    .text.HAL_GetTickFreq:00000008 $d
     /tmp/ccinlNRK.s:483    .text.HAL_Delay:00000000 $t
     /tmp/ccinlNRK.s:489    .text.HAL_Delay:00000000 HAL_Delay
     /tmp/ccinlNRK.s:545    .text.HAL_Delay:00000020 $d
     /tmp/ccinlNRK.s:550    .text.HAL_SuspendTick:00000000 $t
     /tmp/ccinlNRK.s:556    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/ccinlNRK.s:577    .text.HAL_SuspendTick:0000000c $d
     /tmp/ccinlNRK.s:582    .text.HAL_ResumeTick:00000000 $t
     /tmp/ccinlNRK.s:588    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/ccinlNRK.s:609    .text.HAL_ResumeTick:0000000c $d
     /tmp/ccinlNRK.s:614    .text.HAL_GetHalVersion:00000000 $t
     /tmp/ccinlNRK.s:620    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
     /tmp/ccinlNRK.s:635    .text.HAL_GetHalVersion:00000004 $d
     /tmp/ccinlNRK.s:640    .text.HAL_GetREVID:00000000 $t
     /tmp/ccinlNRK.s:646    .text.HAL_GetREVID:00000000 HAL_GetREVID
     /tmp/ccinlNRK.s:667    .text.HAL_GetREVID:00000008 $d
     /tmp/ccinlNRK.s:672    .text.HAL_GetDEVID:00000000 $t
     /tmp/ccinlNRK.s:678    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
     /tmp/ccinlNRK.s:700    .text.HAL_GetDEVID:0000000c $d
     /tmp/ccinlNRK.s:705    .text.HAL_GetUIDw0:00000000 $t
     /tmp/ccinlNRK.s:711    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
     /tmp/ccinlNRK.s:730    .text.HAL_GetUIDw0:00000008 $d
     /tmp/ccinlNRK.s:735    .text.HAL_GetUIDw1:00000000 $t
     /tmp/ccinlNRK.s:741    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
     /tmp/ccinlNRK.s:760    .text.HAL_GetUIDw1:00000008 $d
ARM GAS  /tmp/ccinlNRK.s 			page 36


     /tmp/ccinlNRK.s:765    .text.HAL_GetUIDw2:00000000 $t
     /tmp/ccinlNRK.s:771    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
     /tmp/ccinlNRK.s:790    .text.HAL_GetUIDw2:00000008 $d
     /tmp/ccinlNRK.s:795    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
     /tmp/ccinlNRK.s:801    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccinlNRK.s:822    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
     /tmp/ccinlNRK.s:827    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
     /tmp/ccinlNRK.s:833    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccinlNRK.s:854    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
     /tmp/ccinlNRK.s:859    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
     /tmp/ccinlNRK.s:865    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccinlNRK.s:886    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
     /tmp/ccinlNRK.s:891    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
     /tmp/ccinlNRK.s:897    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccinlNRK.s:918    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
     /tmp/ccinlNRK.s:923    .text.HAL_SYSCFG_EnableIOAnalogSwitchBooster:00000000 $t
     /tmp/ccinlNRK.s:929    .text.HAL_SYSCFG_EnableIOAnalogSwitchBooster:00000000 HAL_SYSCFG_EnableIOAnalogSwitchBooster
     /tmp/ccinlNRK.s:951    .text.HAL_SYSCFG_EnableIOAnalogSwitchBooster:00000010 $d
     /tmp/ccinlNRK.s:956    .text.HAL_SYSCFG_DisableIOAnalogSwitchBooster:00000000 $t
     /tmp/ccinlNRK.s:962    .text.HAL_SYSCFG_DisableIOAnalogSwitchBooster:00000000 HAL_SYSCFG_DisableIOAnalogSwitchBooster
     /tmp/ccinlNRK.s:983    .text.HAL_SYSCFG_DisableIOAnalogSwitchBooster:0000000c $d
     /tmp/ccinlNRK.s:989    .text.HAL_SYSCFG_EnableRemap:00000000 $t
     /tmp/ccinlNRK.s:995    .text.HAL_SYSCFG_EnableRemap:00000000 HAL_SYSCFG_EnableRemap
     /tmp/ccinlNRK.s:1017   .text.HAL_SYSCFG_EnableRemap:0000000c $d
     /tmp/ccinlNRK.s:1022   .text.HAL_SYSCFG_DisableRemap:00000000 $t
     /tmp/ccinlNRK.s:1028   .text.HAL_SYSCFG_DisableRemap:00000000 HAL_SYSCFG_DisableRemap
     /tmp/ccinlNRK.s:1050   .text.HAL_SYSCFG_DisableRemap:0000000c $d
     /tmp/ccinlNRK.s:1055   .text.HAL_SYSCFG_EnableClampingDiode:00000000 $t
     /tmp/ccinlNRK.s:1061   .text.HAL_SYSCFG_EnableClampingDiode:00000000 HAL_SYSCFG_EnableClampingDiode
     /tmp/ccinlNRK.s:1083   .text.HAL_SYSCFG_EnableClampingDiode:0000000c $d
     /tmp/ccinlNRK.s:1088   .text.HAL_SYSCFG_DisableClampingDiode:00000000 $t
     /tmp/ccinlNRK.s:1094   .text.HAL_SYSCFG_DisableClampingDiode:00000000 HAL_SYSCFG_DisableClampingDiode
     /tmp/ccinlNRK.s:1116   .text.HAL_SYSCFG_DisableClampingDiode:0000000c $d
     /tmp/ccinlNRK.s:1128   .data.uwTickPrio:00000000 $d
     /tmp/ccinlNRK.s:1135   .bss.uwTick:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
__aeabi_idiv
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
